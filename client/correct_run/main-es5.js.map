{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/auth/auth.service.ts","webpack:///src/app/pages/auth/forgot-passwd/forgot-passwd.component.ts","webpack:///src/app/pages/auth/forgot-passwd/forgot-passwd.component.html","webpack:///src/app/pages/auth/login/login.component.ts","webpack:///src/app/pages/auth/login/login.component.html","webpack:///src/app/pages/auth/registration/registration.component.ts","webpack:///src/app/pages/auth/registration/registration.component.html","webpack:///src/app/pages/auth/reset-passwd/reset-passwd.component.ts","webpack:///src/app/pages/auth/reset-passwd/reset-passwd.component.html","webpack:///src/app/pages/auth/startup/startup.component.ts","webpack:///src/app/pages/auth/startup/startup.component.html","webpack:///src/app/pages/auth/verify-number/verify-number.component.ts","webpack:///src/app/pages/auth/verify-number/verify-number.component.html","webpack:///src/app/pages/auth/welcome/welcome.component.ts","webpack:///src/app/pages/auth/welcome/welcome.component.html","webpack:///src/app/pages/home/about-us/about-us.component.ts","webpack:///src/app/pages/home/about-us/about-us.component.html","webpack:///src/app/pages/home/cart/cart.component.ts","webpack:///src/app/pages/home/cart/cart.component.html","webpack:///src/app/pages/home/cart/cart.service.ts","webpack:///src/app/pages/home/categories/categories.component.ts","webpack:///src/app/pages/home/categories/categories.component.html","webpack:///src/app/pages/home/categories/category.service.ts","webpack:///src/app/pages/home/chat/chat.component.ts","webpack:///src/app/pages/home/chat/chat.component.html","webpack:///src/app/pages/home/checkout/checkout.component.ts","webpack:///src/app/pages/home/checkout/checkout.component.html","webpack:///src/app/pages/home/checkout/checkout.service.ts","webpack:///src/app/pages/home/footer/footer.component.ts","webpack:///src/app/pages/home/footer/footer.component.html","webpack:///src/app/pages/home/header/header.component.ts","webpack:///src/app/pages/home/header/header.component.html","webpack:///src/app/pages/home/home/home.component.ts","webpack:///src/app/pages/home/location/location.component.ts","webpack:///src/app/pages/home/location/location.component.html","webpack:///src/app/pages/home/my-store/my-store.component.ts","webpack:///src/app/pages/home/my-store/my-store.component.html","webpack:///src/app/pages/home/my-store/my-store.service.ts","webpack:///src/app/pages/home/orders/orders.component.ts","webpack:///src/app/pages/home/orders/orders.component.html","webpack:///src/app/pages/home/orders/orders.service.ts","webpack:///src/app/pages/home/payment/payment.component.ts","webpack:///src/app/pages/home/payment/payment.component.html","webpack:///src/app/pages/home/privacy-policy/privacy-policy.component.ts","webpack:///src/app/pages/home/privacy-policy/privacy-policy.component.html","webpack:///src/app/pages/home/product-details/product-details.component.ts","webpack:///src/app/pages/home/product-details/product-details.component.html","webpack:///src/app/pages/home/products/products.component.ts","webpack:///src/app/pages/home/products/products.component.html","webpack:///src/app/pages/home/products/products.service.ts","webpack:///src/app/pages/home/profile/profile.component.ts","webpack:///src/app/pages/home/profile/profile.component.html","webpack:///src/app/pages/home/profile/profile.service.ts","webpack:///src/app/pages/home/rate-delivery/rate-delivery.component.ts","webpack:///src/app/pages/home/rate-delivery/rate-delivery.component.html","webpack:///src/app/pages/home/rate-delivery/rate-delivery.service.ts","webpack:///src/app/pages/home/saved-items/saved-items.component.ts","webpack:///src/app/pages/home/saved-items/saved-items.component.html","webpack:///src/app/pages/home/show-result/show-result.component.ts","webpack:///src/app/pages/home/show-result/show-result.component.html","webpack:///src/app/pages/home/side-menu/side-menu.component.ts","webpack:///src/app/pages/home/side-menu/side-menu.component.html","webpack:///src/app/pages/home/terms-conditions/terms-conditions.component.ts","webpack:///src/app/pages/home/terms-conditions/terms-conditions.component.html","webpack:///src/app/pages/home/thankyou-page/thankyou-page.component.ts","webpack:///src/app/pages/home/thankyou-page/thankyou-page.component.html","webpack:///src/app/pages/home/top-deals/deals.service.ts","webpack:///src/app/pages/home/top-deals/top-deals.component.ts","webpack:///src/app/pages/home/top-deals/top-deals.component.html","webpack:///src/app/pages/home/wallet/wallet.component.ts","webpack:///src/app/pages/home/wallet/wallet.component.html","webpack:///src/app/pages/home/wallet/wallet.service.ts","webpack:///src/app/pages/models/cart.model.ts","webpack:///src/app/pages/models/category.model.ts","webpack:///src/app/pages/models/order.model.ts","webpack:///src/app/pages/store/cart.action.ts","webpack:///src/app/pages/store/cart.reducer.ts","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/crud.service.ts","webpack:///src/app/services/custom-loader.ts","webpack:///src/app/services/helper.service.ts","webpack:///src/app/services/request-interceptor.service.ts","webpack:///src/app/services/socket.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","crud","store","helperService","authService","translate","cartService","socketService","checkoutService","authenticationService","cityName","title","getCurrencyCode","getBusinessInfo","localStorage","getItem","activatedEmitter","next","setAuthToken","atob","userId","getUserProfileInformation","getUserCartState","getAdminStoreInformation","getPaymentMethodSettings","getUserCity","onLangChange","subscribe","lang","languageDataSubject","translations","navigator","geolocation","getCurrentPosition","location","console","log","error","token","getLocationInfoByCoOrdinates","coords","latitude","longitude","res","status","addressComponent","results","address_components","find","data","types","includes","long_name","setItem","selector","templateUrl","styleUrls","getLanguageList","http","get","API_ENDPOINT","toPromise","response_code","languages","response_data","forEach","isDefault","languageCode","btoa","JSON","stringify","AppModule","provide","useClass","multi","useFactory","deps","cartInfo","runtimeChecks","strictStateImmutability","strictActionImmutability","strictStateSerializability","strictActionSerializability","forChild","loader","apiKey","GOOGLE_MAP_API_KEY","declarations","providers","bootstrap","schemas","AuthService","credentials","saveData","registrationData","body","passwordData","getData","coOrdinates","setStoreLocationInfo","providedIn","ForgotPasswdComponent","router","number","mobileNumber","otp","password","verificationLevels","emailVerified","otpVerified","verificationToken","otpInfo","sId","forgotPasswordForm","newPassword","required","minLength","maxLength","buildForgotPasswordForm","language","use","setDefaultLang","Object","assign","verifyPhoneNumber","successToast","otpVerify","value","resetPassword","goToLoginPage","navigate","LoginComponent","route","redirectPath","isAccountNotVerified","isLinkSent","email","queryParams","params","role","userName","loginForm","buildLoginForm","validateCredentials","errorToast","reset","parse","checkLanguage","encodedToken","encodedRole","_id","validateUserCredentials","RegistrationComponent","isRegistered","otpSent","countryCode","countryName","firstName","lastName","countryCodeArray","registrationForm","event","action","buildRegistrationForm","getCountryCodeData","_body","registerNewUserData","target","split","ResetPasswdComponent","StartupComponent","VerifyNumberComponent","WelcomeComponent","AboutUsComponent","myStoreService","pageData","description","getAboutUsInfo","getAboutInformation","businessInfo$","businessInfo","businessInfoList","scrollTop","CartComponent","modalService","orderService","productsService","relatedProducts","currencyCode","productImageUrl","IMAGEKIT_URL","otherProductImageUrl","minimumOrderAmount","currency$","select","state","products","length","getMinimumOrderAmount","getRelatedProducts","getDeliverySettings","minimumOrderAmountToPlaceOrder","subTotal","infoToast","goToCheckoutPage","products$","productsId","p","push","productId","slice","type","cart","quantity","updateCartData","unit","updateCart","cartId","checkCartFormat","deleteProductFromCart","CartService","getUserCartDetails","productInfo","selectedVariant","addToCart","message","coupon","cartData","getDefaultCartValues","dispatch","productIds","tax","deliveryCharges","grandTotal","createdAt","updatedAt","user","isOrderLinked","updateData","undefined","couponCode","deleteData","CategoriesComponent","categoryService","categoryList","categoryImageUrl","getCategories","category$","getCategoryList","CategoryService","ChatComponent","profileService","user$","userInfo","messageData","getDefaultMessageValue","getChatHistory","message$","chatData","scrollToBottom","sentBy","sendMessageToTheStore","$","document","ready","animate","scrollHeight","CheckoutComponent","calendar","addressList","selectedAddress","deliveryTime","isValidDeliverySlot","timeSchedulesSlots","showMap","hideEdit","workingHours","adminLocation","mapAddress","lat","lng","addressTypes","store$","date","Date","minDate","year","getFullYear","month","getMonth","day","getDate","getUserAddressList","getStoreWorkingHours","address","flatNo","postalCode","addressType","apartmentName","landmark","addressData","address$","getAddress","addressTypes$","getAddressTypeList","deliveryAddress","val","content","addressId","a","getDefaultAddressValues","modalRef","open","keyboard","backdrop","fetchAddress","dismissAll","formatted_address","error_message","checkOperationType","saveAddress","updateAddress","closeAddressModal","index","deleteAddress","splice","deliveryTaxBody","calculateDeliveryCharges","orderData","prepareOrderData","encodedData","currentDate","currentTime","getHours","getMinutes","getWorkingHourSlots","getTime","dayId","workingHourData","workingHour","deliveryDate","timings","applyCoupon","removeCoupon","CheckoutService","paymentMethodSubject","paymentMethod$","asObservable","walletAmountSubject","wallet$","storeDeliverySubject","paymentMethod","walletAmount","addressInfo","time","timeStamp","deliverySlotId","paymentType","orderFrom","paymentId","FooterComponent","storeName","HeaderComponent","auth","defaultProfilePic","directionEvent","sideMenuState","cartLength","isLoggedIn","getUserInformation","defaultLangInfo","ChangeLanguage","obs$","profilePic$","url","imageUrl","defaultLang","getDefaultLang","setDefaultLanguage","transform","animations","HomeComponent","customOptions","loop","mouseDrag","touchDrag","pullDrag","dots","navSpeed","navText","responsive","items","nav","limitedOffers","LocationComponent","MyStoreComponent","ratingElement","readonly","checkedcolor","uncheckedcolor","size","totalstars","autoplay","topdeals","banner","productsList","dealsList","bannerList","dealImageUrl","bannerImageUrl","getBannerList","getHomePageData","banner$","categories","topDeals","calculateDealAmount","product","isDealAvailable","variant","discountAmount","Number","price","dealPercent","deal","dealType","PRODUCT","categoryId","MyStoreService","OrdersComponent","orderList","orderDetailsInfoId","productDetailImageUrl","isLoading","getUserOrders","orders$","getOrderHistory","orderDetails","getOrderDetails","orderInfo","order","ariaLabelledBy","centered","reason","ESC","BACKDROP_CLICK","cancelOrder","orderId","ratecontent","rateData","rate","rateproduct","closeRateModal","close","getOrders","OrdersService","PaymentComponent","closeResult","outOfStockData","isStripe","paymentMethods","walletBalance","isWalletUsed","isCODAvailable","isStripeAvailable","COD","STRIPE","cardData","getDefaultCardValues","STRIPE_PUBLISHABLE_KEY","result","getDismissReason","outOfStockModal","cardHolderName","cardNumber","expiryMonth","expiryYear","cvv","applyWalletPayment","updateOrderData","removeWalletPayment","placeOrder","openOutOfStockModal","clearCart","removeItem","that","key","handler","window","StripeCheckout","configure","locale","currency","image","paymentResponse","name","amount","billingAddress","PrivacyPolicyComponent","getPrivacyPolicyInfo","getPrivacyPolicyInformation","ProductDetailsComponent","autoplaySpeed","selectedQuantity","productCarouselImageUrl","productData","category","isCategoryBasedOffer","imageId","averageRating","noOfUsersRated","totalRating","isFavourite","isRated","productImages","getProductDetails","rateContent","saveProductRating","isAddedToCart","quantityToCart","productStock","calculateGrandTotal","checked","addToWishList","removeProductFromWishList","prepareCartData","changeQuantity","ProductsComponent","subCategories","subCategoryId","productIndex","subCatFilterApplied","findIndex","unitInCart","getProductList","selectedProduct","nextId","getProductBySubCategory","product$","getProductByCategory","getAllProducts","Array","isArray","newProducts","concat","checkCartState","closeAddToCartModal","ProductsService","page","input","ratingData","ProfileComponent","verifyMobileNumber","profileImage","isDisabled","languageList","profileInfo","coordinates","deliveryAreaCode","freeDeliveryDistance","deliveryCharge","deliveryDistanceUnit","registrationDate","verificationId","deliverytimingslot","filePath","buildChangePasswordForm","getUserProfileInfo","changePassword","changePasswordForm","clearSessionAndLogout","currentPassword","confirmPassword","profileUpdateForm","buildProfileUpdateForm","inputEle","getElementById","click","files","formData","FormData","append","uploadImage","controls","patchValue","String","updateUserProfile","closeModal","href","clear","updateMobileNumber","openProfileUpdateModal","openProfileMobileNumberUpdateModal","openChangePasswordModal","navigateToChat","openAddressModal","ProfileService","headers","getAuthToken","requestOptions","post","pipe","json","RateDeliveryComponent","activatedRoute","ratedeliveryService","deliveryBoyId","assignedToName","assignedToId","saveDeliveryData","rateDelivaryBoy","RateDeliveryService","ratedata","SavedItemsComponent","favourites","getUserFavourites","favourites$","getWishList","favourite","variantData","unshift","ShowResultComponent","searchInput","clearSearch","searchProduct","windowScrolledDown","windowScrolledUp","SideMenuComponent","mobMenuToggle","TermsConditionsComponent","getTermsAndConditionInfo","getTermsAndConditionInformation","ThankyouPageComponent","setTimeout","DealsService","TopDealsComponent","dealsService","dealList","getTopDeals","getDealList","WalletComponent","walletService","limit","total","walletHistoryDetails","walletInfo","fetchedRecordsCount","getWalletHistory","INC","DEC","WalletService","PaymentMethodEnum","DealTypeEnum","WalletPaginationType","ADD_TO_CART","UPDATE_CART_DATA","DELETE_CART_DATA","GET_CART_DATA","SET_CART_DATA","APPLY_COUPON","REMOVE_COUPON","AddToCartAction","payload","UpdateCartAction","DeleteCartAction","GetCartInfoAction","SetCartInfoAction","ApplyCouponAction","RemoveCouponAction","initialState","cartReducer","AuthGuardService","CrudService","authToken","put","patch","CustomLoader","language$","setLanguageJSON","HelperService","toastr","googleApiCoOridnateUrl","userInfoSubject","currencySubject","logoSubject","logo$","profilePicSubject","businessInfoSubject$","languageJSON","languageObs","setCurrencyCode","establishSocketConnection","setWalletBalance","scrollTo","isApiRes","success","timeOut","extra","info","RequestInterceptorService","crudService","request","modifiedReq","clone","setHeaders","handle","errors","SocketService","messageSubject","socket","on","listenToIncomingMessages","emit","environment","production","PREDEFINED","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegistrationComponent } from './pages/auth/registration/registration.component';\nimport { WelcomeComponent } from './pages/auth/welcome/welcome.component';\nimport { LoginComponent } from './pages/auth/login/login.component';\nimport { ForgotPasswdComponent } from './pages/auth/forgot-passwd/forgot-passwd.component';\nimport { ResetPasswdComponent } from './pages/auth/reset-passwd/reset-passwd.component';\nimport { VerifyNumberComponent } from './pages/auth/verify-number/verify-number.component';\nimport { HomeComponent } from './pages/home/home/home.component';\nimport { MyStoreComponent } from './pages/home/my-store/my-store.component';\nimport { SavedItemsComponent } from './pages/home/saved-items/saved-items.component';\nimport { CartComponent } from './pages/home/cart/cart.component';\nimport { CategoriesComponent } from './pages/home/categories/categories.component';\nimport { OrdersComponent } from './pages/home/orders/orders.component';\nimport { ShowResultComponent } from './pages/home/show-result/show-result.component';\nimport { CheckoutComponent } from './pages/home/checkout/checkout.component';\nimport { PaymentComponent } from './pages/home/payment/payment.component';\nimport { ProductsComponent } from './pages/home/products/products.component';\nimport { ProductDetailsComponent } from './pages/home/product-details/product-details.component';\nimport { ProfileComponent } from './pages/home/profile/profile.component';\nimport { LocationComponent } from './pages/home/location/location.component';\nimport { ChatComponent } from './pages/home/chat/chat.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { AboutUsComponent } from './pages/home/about-us/about-us.component';\nimport { TopDealsComponent } from './pages/home/top-deals/top-deals.component';\nimport { PrivacyPolicyComponent } from './pages/home/privacy-policy/privacy-policy.component';\nimport { TermsConditionsComponent } from './pages/home/terms-conditions/terms-conditions.component';\nimport { ThankyouPageComponent } from './pages/home/thankyou-page/thankyou-page.component';\nimport { WalletComponent } from './pages/home/wallet/wallet.component';\nimport { RateDeliveryComponent } from './pages/home/rate-delivery/rate-delivery.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full',\n  },\n  {\n    path: 'verify-number',\n    component: VerifyNumberComponent,\n  },\n  {\n    path: 'welcome',\n    component: WelcomeComponent,\n  },\n  {\n    path: 'register',\n    component: RegistrationComponent,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'forgot-password',\n    component: ForgotPasswdComponent,\n  },\n  {\n    path: 'reset-password',\n    component: ResetPasswdComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'home-page',\n    component: HomeComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'home',\n    component: MyStoreComponent,\n  },\n  {\n    path: 'favourites',\n    component: SavedItemsComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'cart',\n    component: CartComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'categories',\n    component: CategoriesComponent,\n  },\n  {\n    path: 'orders',\n    component: OrdersComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'search',\n    component: ShowResultComponent,\n  },\n  {\n    path: 'checkout',\n    component: CheckoutComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'payment',\n    component: PaymentComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'products',\n    component: ProductsComponent,\n  },\n  {\n    path: 'products/by/category/:id',\n    component: ProductsComponent,\n  },\n  {\n    path: 'product-details/:id',\n    component: ProductDetailsComponent,\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'current-location',\n    component: LocationComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'chat',\n    component: ChatComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'about-us',\n    component: AboutUsComponent,\n  },\n  {\n    path: 'deals',\n    component: TopDealsComponent,\n  },\n  {\n    path: 'privacy-policy',\n    component: PrivacyPolicyComponent,\n  },\n  {\n    path: 'terms-and-conditions',\n    component: TermsConditionsComponent,\n  },\n  {\n    path: 'thank-you',\n    component: ThankyouPageComponent,\n  },\n  {\n    path: 'wallet',\n    component: WalletComponent,\n  },\n  {\n    path: 'rate-delivery/:id',\n    component: RateDeliveryComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { CrudService } from './services/crud.service';\nimport { Store } from '@ngrx/store';\nimport { CartState } from './pages/store/cart.reducer';\nimport { HelperService } from './services/helper.service';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { CartService } from \"./pages/home/cart/cart.service\";\nimport { SocketService } from \"./services/socket.service\";\nimport { CheckoutService } from \"./pages/home/checkout/checkout.service\";\nimport { AuthService } from \"./pages/auth/auth.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public cityName: string = null; // contains user's city name\n  title = 'grocery-webs';\n\n  constructor(private crud: CrudService, private store: Store<CartState>, private helperService: HelperService, public authService: AuthGuardService, private translate: TranslateService, private cartService: CartService, private socketService: SocketService, private checkoutService: CheckoutService, private authenticationService: AuthService) {\n    this.helperService.getCurrencyCode();\n    this.helperService.getBusinessInfo();\n    if (localStorage.getItem('token')) {\n      this.authService.activatedEmitter.next(true);\n      this.crud.setAuthToken = atob(atob(atob(localStorage.getItem('token'))));\n      this.socketService.userId = localStorage.getItem('id');\n      this.helperService.getUserProfileInformation();\n      this.cartService.getUserCartState();\n      this.authenticationService.getAdminStoreInformation();\n      this.checkoutService.getPaymentMethodSettings();\n    }\n    if (!this.cityName) {\n      this.getUserCity();\n    }\n  }\n\n  ngOnInit() {\n    this.translate.onLangChange.subscribe(lang => {\n      this.helperService.languageDataSubject.next(lang.translations);\n    });\n    navigator.geolocation.getCurrentPosition((location) => {\n      console.log(\"LOCATION ACCESS GRANTED\");\n    }, (error) => {\n      console.log(\"LOCATION ACCESS DECLINED\");\n    });\n    var token = localStorage.getItem('token');\n    if (token != null) {\n      this.authService.activatedEmitter.next(true)\n    } else\n      this.authService.activatedEmitter.next(false)\n\n  };\n\n  // takes user's permission and gets current location\n  public getUserCity(): void {\n    navigator.geolocation.getCurrentPosition(\n      (location) => {\n        this.helperService.getLocationInfoByCoOrdinates(location.coords.latitude, location.coords.longitude)\n          .subscribe(\n            (res: any) => {\n              if (res.status !== 'OK') {\n                return (this.cityName = null);\n              }\n              const addressComponent = res.results[0].address_components.find((data) => data.types.includes('locality'));\n              if (addressComponent) {\n                this.cityName = addressComponent.long_name;\n                localStorage.setItem('city', this.cityName = addressComponent.long_name);\n              }\n            },\n            (error) => {\n              this.cityName = null;\n            }\n          );\n      },\n      (error) => {\n        this.cityName = null;\n      });\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegistrationComponent } from './pages/auth/registration/registration.component';\nimport { LoginComponent } from './pages/auth/login/login.component';\nimport { WelcomeComponent } from './pages/auth/welcome/welcome.component';\nimport { ForgotPasswdComponent } from './pages/auth/forgot-passwd/forgot-passwd.component';\nimport { ResetPasswdComponent } from './pages/auth/reset-passwd/reset-passwd.component';\nimport { StartupComponent } from './pages/auth/startup/startup.component';\nimport { VerifyNumberComponent } from './pages/auth/verify-number/verify-number.component';\nimport { HomeComponent } from './pages/home/home/home.component';\nimport { SideMenuComponent } from './pages/home/side-menu/side-menu.component';\nimport { MyStoreComponent } from './pages/home/my-store/my-store.component';\nimport { SavedItemsComponent } from './pages/home/saved-items/saved-items.component';\nimport { CartComponent } from './pages/home/cart/cart.component';\nimport { CategoriesComponent } from './pages/home/categories/categories.component';\nimport { OrdersComponent } from './pages/home/orders/orders.component';\nimport { CarouselModule } from 'ngx-owl-carousel-o';\nimport { RatingModule } from 'ng-starrating';\nimport { ShowResultComponent } from './pages/home/show-result/show-result.component';\nimport { CheckoutComponent } from './pages/home/checkout/checkout.component';\nimport { NgbDatepickerModule, NgbModule, NgbRatingModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PaymentComponent } from './pages/home/payment/payment.component';\nimport { ProductsComponent } from './pages/home/products/products.component';\nimport { ProductDetailsComponent } from './pages/home/product-details/product-details.component';\nimport { ProfileComponent } from './pages/home/profile/profile.component';\nimport { ChatComponent } from './pages/home/chat/chat.component';\nimport { LocationComponent } from './pages/home/location/location.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS, HttpClient } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { cartReducer } from './pages/store/cart.reducer';\nimport { RequestInterceptorService } from './services/request-interceptor.service';\nimport { HttpModule } from '@angular/http';\nimport { CreditCardDirectivesModule } from 'angular-cc-library';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { HeaderComponent } from './pages/home/header/header.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { TranslateModule, TranslateLoader, TranslateStore, TranslateService } from '@ngx-translate/core';\nimport { FooterComponent } from './pages/home/footer/footer.component';\nimport { AboutUsComponent } from './pages/home/about-us/about-us.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { TopDealsComponent } from './pages/home/top-deals/top-deals.component';\nimport { environment } from \"../environments/environment\";\nimport { CustomLoader } from \"./services/custom-loader\";\nimport { CrudService } from \"./services/crud.service\";\nimport { LanguagesModel } from \"./pages/models/category.model\";\nimport { HelperService } from \"./services/helper.service\";\nimport { AgmCoreModule } from \"@agm/core\";\nimport { TermsConditionsComponent } from './pages/home/terms-conditions/terms-conditions.component';\nimport { PrivacyPolicyComponent } from './pages/home/privacy-policy/privacy-policy.component';\nimport { ThankyouPageComponent } from \"./pages/home/thankyou-page/thankyou-page.component\";\nimport { CountdownModule } from 'ngx-countdown';\nimport { WalletComponent } from './pages/home/wallet/wallet.component';\nimport { RateDeliveryComponent } from './pages/home/rate-delivery/rate-delivery.component';\n\n\nexport function getLanguageList(http: HttpClient) {\n  return () => {\n    return http.get(`${environment.API_ENDPOINT}/languages/list`).toPromise().then((data: any) => {\n      if (data.response_code === 200) {\n        const languages: Array<LanguagesModel> = data.response_data;\n        languages.forEach(lang => {\n          if (lang.isDefault) {\n            if (!localStorage.getItem('token')) {\n              localStorage.setItem('language', lang.languageCode);\n            }\n          }\n        });\n        localStorage.setItem('languageList', btoa(JSON.stringify(data.response_data)));\n      }\n    });\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    LoginComponent,\n    WelcomeComponent,\n    ForgotPasswdComponent,\n    ResetPasswdComponent,\n    StartupComponent,\n    VerifyNumberComponent,\n    HomeComponent,\n    SideMenuComponent,\n    MyStoreComponent,\n    SavedItemsComponent,\n    CartComponent,\n    CategoriesComponent,\n    OrdersComponent,\n    ShowResultComponent,\n    CheckoutComponent,\n    PaymentComponent,\n    ProductsComponent,\n    ProductDetailsComponent,\n    ProfileComponent,\n    ChatComponent,\n    LocationComponent,\n    HeaderComponent,\n    FooterComponent,\n    AboutUsComponent,\n    TopDealsComponent,\n    TermsConditionsComponent,\n    PrivacyPolicyComponent,\n    ThankyouPageComponent,\n    WalletComponent,\n    RateDeliveryComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CarouselModule,\n    CountdownModule,\n    BrowserAnimationsModule,\n    RatingModule,\n    NgbModule,\n    HttpClientModule,\n    FormsModule,\n    CommonModule,\n    StoreModule.forRoot({ cartInfo: cartReducer }, {\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: false,\n        strictStateSerializability: true,\n        strictActionSerializability: true\n      }\n    }),\n    HttpModule,\n    CreditCardDirectivesModule,\n    ReactiveFormsModule,\n    FileUploadModule,\n    NgbRatingModule,\n    NgbDatepickerModule,\n    ToastrModule.forRoot(),\n    TranslateModule,\n    TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useClass: CustomLoader,\n        deps: [CrudService, HelperService]\n      }\n    }),\n    InfiniteScrollModule,\n    AgmCoreModule.forRoot({\n      apiKey: environment.GOOGLE_MAP_API_KEY\n    })\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: RequestInterceptorService, multi: true },\n  {\n    provide: APP_INITIALIZER,\n    useFactory: getLanguageList,\n    deps: [HttpClient],\n    multi: true\n  },\n    TranslateStore,\n    TranslateService\n  ],\n  bootstrap: [AppComponent],\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class AppModule {\n}\n","import { Injectable } from \"@angular/core\";\nimport { CrudService } from \"../../services/crud.service\";\nimport { Observable } from \"rxjs\";\nimport { CheckoutService } from \"../home/checkout/checkout.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private crud: CrudService, private checkoutService: CheckoutService) {\n  }\n\n  // login user\n  public validateCredentials(credentials): Observable<any> {\n    return this.crud.saveData('/users/login-phone', credentials);\n  }\n\n  // registers a new user\n  public registerNewUserData(registrationData): Observable<any> {\n    return this.crud.saveData('/users/register-phone', registrationData);\n  }\n\n  // otp verify\n  public otpVerify(registrationData): Observable<any> {\n    return this.crud.saveData('/users/verify-otp/number', registrationData);\n  }\n\n  // verifies user's phone number\n  public verifyPhoneNumber(body): Observable<any> {\n    return this.crud.saveData(`/users/send-otp-phone`, body);\n  }\n\n  // resets users password\n  public resetPassword(passwordData): Observable<any> {\n    return this.crud.saveData('/users/reset-password-number', passwordData);\n  }\n\n  // get's admin store information\n  public getAdminStoreInformation(): void {\n    this.crud.getData('/settings/details').subscribe((res: any) => {\n      const coOrdinates = [res.response_data.location.latitude, res.response_data.location.longitude]\n      this.checkoutService.setStoreLocationInfo(coOrdinates);\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CrudService } from \"../../../services/crud.service\";\nimport { Router } from \"@angular/router\";\nimport { HelperService } from \"../../../services/helper.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../auth.service\";\nimport { OTPModel } from '../../models/auth.model';\n\n@Component({\n  selector: 'app-forgot-passwd',\n  templateUrl: './forgot-passwd.component.html',\n  styleUrls: ['./forgot-passwd.component.scss']\n})\nexport class ForgotPasswdComponent implements OnInit {\n  public number: string = '';     // contains user's \n  public mobileNumber: string = '';\n  public otp: string = '';     // contains user's otp sent to their email\n  public password: string = '';      // contains user's new password\n  public verificationLevels = {\n    emailVerified: false,\n    otpVerified: false\n  }     // set to true when respective credentials are verified\n  public forgotPasswordForm: FormGroup;       // contains forget-password form group instance\n  private verificationToken: string = null;     // contains verification token\n  public otpInfo: OTPModel = {\n    mobileNumber: '',\n    otp: '',\n    sId: ''\n  }\n\n  constructor(\n    private crud: CrudService,\n    private router: Router,\n    private helperService: HelperService,\n    private translate: TranslateService,\n    private authService: AuthService\n  ) {\n  }\n\n  // build's forgot-password form\n  public buildForgotPasswordForm(): void {\n    this.forgotPasswordForm = new FormGroup({\n      newPassword: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(35)]),\n    });\n  }\n\n  ngOnInit(): void {\n    this.buildForgotPasswordForm();\n    const language = localStorage.getItem('language');\n    if (language) {\n      this.translate.use(language);\n      this.translate.setDefaultLang(language);\n    }\n  }\n\n  // send request to verify user's email\n  public verifyMobile(): void {\n    const body = Object.assign({ mobileNumber: this.mobileNumber });\n    this.authService.verifyPhoneNumber(body).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.otpInfo.mobileNumber = this.mobileNumber;\n      this.otpInfo.sId = res.sId;\n      this.mobileNumber = this.mobileNumber;\n      this.verificationLevels.emailVerified = true;\n    });\n  }\n\n  // send request to verify user's email\n  public verifyOTP(): void {\n    this.authService.otpVerify(this.otpInfo).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.verificationToken = res.verificationToken;\n      this.verificationLevels.otpVerified = true;\n    });\n  }\n\n  // send request to verify user's email\n  public resetPassword(): void {\n    const body = Object.assign({\n      newPassword: this.forgotPasswordForm.value.newPassword,\n      mobileNumber: this.mobileNumber,\n      verificationToken: this.verificationToken\n    });\n    this.authService.resetPassword(body).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.goToLoginPage();\n    });\n  }\n\n  // navigates user to login page\n  public goToLoginPage(): void {\n    this.router.navigate(['login']);\n  }\n\n}\n","<div class=\"auth-page\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <div class=\"row\">\n          <div class=\"col-md-9 offset-md-1\" *ngIf=\"\n              !verificationLevels.emailVerified &&\n              !verificationLevels.otpVerified\n            \">\n            <img src=\"assets/images/webapp.png\" class=\"showPointer logo\" [routerLink]=\"['/home']\" />\n\n            <h1 class=\"h1xl color-b barlow-semibold\">\n              {{ \"FORGOT_PASSWORD\" | translate }}\n            </h1>\n\n            <h6 class=\"text-normal barlow-regular color-b-c my-5\">\n              {{ \"OTP_ENTER_MSG\" | translate }}\n            </h6>\n\n\n            <form (ngSubmit)=\"verifyMobile()\" #mobileVerificationForm=\"ngForm\" autocomplete=\"off\">\n              <div class=\"form-group\">\n                <!--                <label for=\"exampleInputEmail1\">Email </label>-->\n                <input type=\"email\" class=\"form-control barlow-regular text-normal color-b\" id=\"exampleInputEmail1\"\n                  aria-describedby=\"emailHelp\" placeholder=\"{{ 'ENTER_YOUR_MOBILE_NUMBER' | translate }}\"\n                  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" name=\"email\" [(ngModel)]=\"mobileNumber\" required\n                  #num=\"ngModel\" />\n\n              </div>\n              <br />\n\n              <button type=\"submit\" class=\"btn btn-warning sign-btn my-4\">\n                {{ \"SUBMIT\" | translate }}\n              </button>\n              <div class=\"text-right\">\n                <h6 class=\"text-small color-b-c barlow-regular pointer\" (click)=\"goToLoginPage()\">\n                  {{ \"GO_TO_LOGIN_PAGE\" | translate }}\n                </h6>\n              </div>\n            </form>\n          </div>\n          <div class=\"col-md-9 offset-md-1\" *ngIf=\"\n              verificationLevels.emailVerified &&\n              !verificationLevels.otpVerified\n            \">\n            <img src=\"assets/images/webapp.png\" class=\"showPointer logo\" [routerLink]=\"['/home']\" />\n\n            <h1 class=\"h1xl color-b barlow-semibold\">\n              {{ \"VERIFY_OTP\" | translate }}\n            </h1>\n\n            <h6 class=\"text-medium barlow-regular color-b-c\">\n              {{ \"OTP_SENT\" | translate }}\n            </h6>\n\n            <form (ngSubmit)=\"verifyOTP()\" #otpVerificationForm=\"ngForm\" autocomplete=\"off\">\n              <div class=\"form-group\">\n                <!--                <label for=\"exampleInputEmail1\">Email </label>-->\n                <input type=\"text\" class=\"form-control barlow-regular text-normal color-b\" id=\"exampleInpujhhtEmail1\"\n                  aria-describedby=\"emailHelp\" placeholder=\"{{ 'OTP_ENTER' | translate }}\" name=\"OTP\"\n                  [(ngModel)]=\"otpInfo.otp\" required />\n              </div>\n              <br />\n\n              <button type=\"submit\" [disabled]=\"otpVerificationForm.invalid\" class=\"btn btn-warning sign-btn my-4\">\n                {{ \"VERIFY_OTP\" | translate }}\n              </button>\n              <div class=\"text-right\">\n                <h6 class=\"text-small color-b-c barlow-regular pointer\" (click)=\"goToLoginPage()\">\n                  {{ \"GO_TO_LOGIN_PAGE\" | translate }}\n                </h6>\n              </div>\n            </form>\n          </div>\n          <div class=\"col-md-9 offset-md-1\" *ngIf=\"\n              verificationLevels.emailVerified && verificationLevels.otpVerified\n            \">\n            <img src=\"assets/images/webapp.png\" class=\"showPointer logo\" [routerLink]=\"['/home']\" />\n\n            <h1 class=\"h1xl color-b barlow-semibold\">\n              {{ \"RESET_PASSWORD\" | translate }}\n            </h1>\n\n            <h6 class=\"text-medium barlow-regular color-b-c\">\n              {{ \"PASS\" | translate }}\n            </h6>\n\n            <!-- <form (ngSubmit)=\"resetPassword()\" [formGroup]=\"forgotPasswordForm\" autocomplete=\"off\">\n\n              <div class=\"form-group\">\n                <input type=\"password\" class=\"form-control barlow-regular text-normal color-b\" id=\"exampleInpudtEmail1\"\n                  aria-describedby=\"emailHelp\" placeholder=\"{{ 'ENTER_YOUR_PASSWORD' | translate }}\"\n                  formControlName=\"newPassword\" />\n                <span class=\"help-block\" *ngIf=\"forgotPasswordForm.get('password').hasError('minlength')\">\n                  <small class=\"text-danger\">{{ 'MIN_PASS' | translate }}</small>\n                </span>\n                <span class=\"help-block\" *ngIf=\"forgotPasswordForm.get('password').hasError('maxlength')\">\n                  <small class=\"text-danger\">{{ 'MAX_PASS' | translate }}</small>\n                </span>\n              </div>\n\n              <br />\n              <button type=\"submit\" [disabled]=\"forgotPasswordForm.invalid\" class=\"btn btn-warning sign-btn my-4\">\n                {{ \"SUBMIT\" | translate }}\n              </button>\n              <div class=\"text-right\">\n                <h6 class=\"text-small color-b-c barlow-regular pointer\" (click)=\"goToLoginPage()\">\n                  {{ \"GO_TO_LOGIN_PAGE\" | translate }}\n                </h6>\n              </div>\n            </form> -->\n            <form (ngSubmit)=\"resetPassword()\" [formGroup]=\"forgotPasswordForm\" autocomplete=\"off\">\n              <div class=\"form-group\">\n                <!--                <label for=\"exampleInputEmail1\">Email </label>-->\n                <input type=\"password\" class=\"form-control barlow-regular text-normal color-b\" id=\"exampleInpudtEmail1\"\n                  aria-describedby=\"emailHelp\" placeholder=\"{{ 'ENTER_YOUR_PASSWORD' | translate }}\"\n                  formControlName=\"newPassword\" />\n                <span class=\"help-block\" *ngIf=\"forgotPasswordForm.get('newPassword').hasError('minlength')\">\n                  <small class=\"text-danger\">{{ 'MIN_PASS' | translate }}</small>\n                </span>\n                <span class=\"help-block\" *ngIf=\"forgotPasswordForm.get('newPassword').hasError('maxlength')\">\n                  <small class=\"text-danger\">{{ 'MAX_PASS' | translate }}</small>\n                </span>\n\n              </div>\n              <br />\n\n\n              <button type=\"submit\" [disabled]=\"forgotPasswordForm.invalid\" class=\"btn btn-warning sign-btn my-4\">\n                {{ \"SUBMIT\" | translate }}\n              </button>\n              <div class=\"text-right\">\n                <h6 class=\"text-small color-b-c barlow-regular pointer\" (click)=\"goToLoginPage()\">\n                  {{ \"GO_TO_LOGIN_PAGE\" | translate }}\n                </h6>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-6 welcome-banner text-center\">\n        <img src=\"assets/images/forgot.png\" class=\"img-fluid banner-img\" />\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CrudService } from '../../../services/crud.service';\nimport { LoginModel, OTPModel } from '../../models/auth.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { CartState } from '../../store/cart.reducer';\nimport { HelperService } from '../../../services/helper.service';\nimport { AuthGuardService } from 'src/app/services/auth-guard.service';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { environment } from \"../../../../environments/environment\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { CartService } from \"../../home/cart/cart.service\";\nimport { SocketService } from \"../../../services/socket.service\";\nimport { AuthService } from \"../auth.service\";\nimport { CheckoutService } from \"../../home/checkout/checkout.service\";\nimport { LanguagesModel } from \"../../models/category.model\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  private redirectPath: string = null; // contains redirect url\n  public loginForm: FormGroup;      // contains login form instance\n  public isAccountNotVerified: boolean = false;     // set t true when user's email is not verified\n  private number: string = null;     // contains user's mobile no\n  public isLinkSent: boolean = false;     // shows OTP input when true\n  private email: string = null;     // contains user's email\n  public verificationLevels = {\n    emailVerified: false,\n    otpVerified: false\n  }   // set to true when respective credentials are verified\n\n  public otpInfo: OTPModel = {\n    mobileNumber: '',\n    otp: '',\n    sId: ''\n  }\n\n  constructor(\n    private crud: CrudService,\n    private router: Router,\n    private store: Store<CartState>,\n    private helperService: HelperService,\n    public authService: AuthGuardService,\n    private route: ActivatedRoute,\n    private translate: TranslateService,\n    private cartService: CartService,\n    private socketService: SocketService,\n    private authenticationService: AuthService,\n    private checkoutService: CheckoutService\n  ) {\n    this.route.queryParams.subscribe((params) => {\n      this.redirectPath = params.redirectTo;\n    });\n    if (localStorage.getItem('token')) {\n      const role = atob(atob(atob(localStorage.getItem('role'))));\n      if (role === 'User') {\n        this.router.navigate(['home']);\n      }\n    }\n  }\n\n  // build login form\n  private buildLoginForm(): void {\n    let userName = \"\";\n    let password = \"\";\n    if (environment['PREDEFINED'] && environment['PREDEFINED'] == true) {\n      userName = '';\n      password = '';\n    }\n\n    this.loginForm = new FormGroup({\n      userName: new FormControl(userName, [Validators.required]),\n      password: new FormControl(password, [Validators.required, Validators.minLength(5), Validators.maxLength(35)])\n    })\n  }\n\n  ngOnInit(): void {\n    this.buildLoginForm();\n    const language = localStorage.getItem('language');\n    if (language) {\n      this.translate.use(language);\n      this.translate.setDefaultLang(language);\n    }\n  }\n\n  // send's request to server to validate user credentials\n  public validateUserCredentials(): void {\n    this.authenticationService.validateCredentials(this.loginForm.value).subscribe((res: any) => {\n      if (res.response_code === 205) {\n        this.helperService.errorToast(res.response_data, true);\n        return this.isAccountNotVerified = true;\n      }\n      this.isAccountNotVerified = false;\n      if (res.response_code !== 200) {\n        return this.helperService.errorToast(res.response_data, true);\n      }\n      this.loginForm.reset();\n      if (res.response_data.role !== 'USER') {\n        return this.helperService.errorToast(\"UNAUTHORIZED\")\n      }\n      if (res.response_data.language) {\n        const languages: Array<LanguagesModel> = JSON.parse(atob(localStorage.getItem('languageList')))\n        const checkLanguage = languages.find(language => language.languageCode === res.response_data.language);\n        if (checkLanguage) {\n          localStorage.setItem('language', res.response_data.language);\n        }\n      }\n      const encodedToken = btoa(btoa(btoa(res.response_data.token)));\n      const encodedRole = btoa(btoa(btoa(res.response_data.role)));\n      localStorage.setItem('token', encodedToken);\n      this.crud.setAuthToken = res.response_data.token;\n      localStorage.setItem('role', encodedRole);\n      localStorage.setItem('id', res.response_data._id);\n      this.cartService.getUserCartState();\n      this.helperService.getUserProfileInformation();\n      this.checkoutService.getPaymentMethodSettings();\n      this.authService.activatedEmitter.next(true);\n      this.helperService.successToast(\"LOGIN\");\n      if (!this.redirectPath) {\n        this.router.navigate(['home']);\n      } else {\n        this.router.navigate([this.redirectPath]);\n      }\n    }, error => {\n      console.log(\"ERROR BLOCK HIT\");\n    });\n  }\n\n  //resend's activation email\n  public resendVerificationOTPMessage(): void {\n    const body = Object.assign({ mobileNumber: this.loginForm.value.userName });\n    this.authenticationService.verifyPhoneNumber(body).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.otpInfo.mobileNumber = this.loginForm.value.userName;\n      this.otpInfo.sId = res.sId;\n      this.loginForm.reset();\n      this.isAccountNotVerified = false;\n      this.isLinkSent = true;\n      this.verificationLevels.emailVerified = true;\n    });\n  }\n\n  public verifyOTP(): void {\n    this.authenticationService.otpVerify(this.otpInfo).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.isAccountNotVerified = false;\n      this.isLinkSent = false;\n      this.verificationLevels.otpVerified = true;\n    });\n\n  }\n}\n","<div class=\"auth-page\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <div class=\"row\">\n          <div class=\"col-md-9 offset-md-1\">\n            <img src=\"assets/images/webapp.png\" class=\"showPointer logo\" [routerLink]=\"['/home']\" />\n\n            <form (ngSubmit)=\"validateUserCredentials()\" [formGroup]=\"loginForm\" autocomplete=\"off\">\n              <div class=\"form-group\" *ngIf=\"!isAccountNotVerified && !isLinkSent\">\n                <label>{{ \"MOBILE_NUMBER\" | translate }}/{{\"EMAIL\"| translate}} <span\n                    style=\"color: red;\">*</span></label>\n                <input type=\"mobileNo\" class=\"form-control barlow-regular text-normal color-b\" id=\"exampleInputmobile1\"\n                  aria-describedby=\"emailHelp\" placeholder=\"{{ 'ENTER_YOUR_MOBILE_NUMBER' | translate }}\"\n                  formControlName=\"userName\" />\n\n              </div>\n\n              <div class=\"form-group relative\" *ngIf=\"!isAccountNotVerified && !isLinkSent\">\n                <label>{{ \"PASSWORD\" | translate }} <span style=\"color: red;\">*</span></label>\n                <input type=\"password\" class=\"form-control  barlow-regular text-normal color-b\" id=\"exampleInputpasswd\"\n                  aria-describedby=\"emailHelp\" placeholder=\"{{ 'ENTER_PASSWORD' | translate }}\"\n                  formControlName=\"password\" />\n                <span class=\"help-block\" *ngIf=\"loginForm.controls['password'].hasError('minlength')\">\n                  <small class=\"text-danger\">{{ \"MIN_PASS\" | translate }}</small>\n                </span>\n                <span class=\"help-block\" *ngIf=\"loginForm.controls['password'].hasError('maxlength')\">\n                  <small class=\"text-danger\">{{ \"MAX_PASS\" | translate }}</small>\n                </span>\n                <!--                <img src=\"assets/icons/eye.png\" class=\"absolute eye\"/>-->\n              </div>\n\n              <br /><br />\n              <button type=\"submit\" class=\"btn btn-warning sign-btn\" [disabled]=\"loginForm.invalid\"\n                *ngIf=\"!isAccountNotVerified && !isLinkSent\">\n                {{ \"LOG_IN\" | translate }}\n              </button>\n              <p *ngIf=\"isAccountNotVerified\">{{\"OTP_NOT_VERIFIED\" | translate}}</p>\n              <button type=\"button\" class=\"btn btn-warning sign-btn\" *ngIf=\"isAccountNotVerified\"\n                (click)=\"resendVerificationOTPMessage()\">\n                {{ \"RESEND_OTP\" | translate }}\n              </button>\n            </form>\n\n            <!-- start -->\n\n\n            <!-- <h6 class=\"text-medium barlow-regular color-b-c\">\n                {{ \"OTP_REG\" | translate }}\n                {{ \"PLEASE_VERIFY_THE_OTP\" | translate }}\n                {{ \"TO_RESET_YOUR_PASSWORD\" | translate }}\n              </h6> -->\n\n            <form (ngSubmit)=\"verifyOTP()\" #otpForm=\"ngForm\" autocomplete=\"off\"\n              *ngIf=\"verificationLevels.emailVerified && !verificationLevels.otpVerified\">\n              <p class=\"color-green\" translate>{{ \"OTP_SENT\" | translate }}</p>\n              <div class=\"form-group\">\n                <label for=\"exampleInputEmail1\">{{ \"OTP_ENTER\" | translate }}<span\n                    style=\"color: #ff0000;\">*</span></label>\n                <input type=\"text\" class=\"form-control  barlow-regular text-normal color-b\" id=\"otpInput\"\n                  aria-describedby=\"emailHelp\" placeholder=\"{{ 'OTP_ENTER' | translate }}\" required name=\"OTP\"\n                  [maxLength]=\"6\" [minLength]=\"4\" [(ngModel)]=\"otpInfo.otp\" />\n\n              </div>\n\n              <br /><br />\n              <button type=\"submit\" [disabled]=\"otpForm.invalid\" class=\"btn btn-warning sign-btn\">\n                {{ \"VERIFY_OTP\" | translate }}\n              </button>\n            </form>\n            <!-- end -->\n\n            <div class=\"row mt-4\">\n              <div class=\"col-md-6 col-6\">\n                <h6 class=\"text-small color-b-c barlow-regular\">\n                  {{ \"NO_ACCOUNT\" | translate }}<span class=\"text-normal color-primary pointer\"\n                    [routerLink]=\"['/register']\">\n                    &nbsp; {{ \"SIGN_UP\" | translate }}</span>\n                </h6>\n              </div>\n              <div class=\"col-md-6 col-6 text-right\">\n                <h6 class=\"text-small color-b-c barlow-regular pointer\" [routerLink]=\"['/forgot-password']\">\n                  {{ \"FORGOT_PASSWORD\" | translate }}\n                </h6>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-6 welcome-banner text-center\">\n        <img src=\"assets/images/register.png\" class=\"img-fluid banner-img\" />\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RegistrationModel, OTPModel } from '../../models/auth.model';\nimport { Router } from '@angular/router';\nimport { HelperService } from \"../../../services/helper.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { FormControl, FormGroup, Validators, NgForm } from \"@angular/forms\";\nimport { AuthService } from \"../auth.service\";\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n  public registrationForm: FormGroup;     // contains registration form instance\n  public isRegistered: boolean = false;     // shows OTP input when true\n  public otpSent = false;\n  public countryCode = '';\n  public countryName = '';\n  public registrationData: RegistrationModel = {\n    firstName: '',\n    lastName: '',\n    mobileNumber: '',\n    role: 'User',\n    email: '',\n    password: '',\n    countryCode: '',\n    countryName: ''\n  }\n\n  public otpInfo: OTPModel = {\n    mobileNumber: '',\n    otp: '',\n    sId: ''\n  }\n  public countryCodeArray = [];\n\n  constructor(\n    private router: Router,\n    private helperService: HelperService,\n    private translate: TranslateService,\n    private authService: AuthService\n  ) {\n\n  }\n  resendOtp() {\n    const body = Object.assign({ mobileNumber: this.registrationForm.value.mobileNumber });\n    this.authService.verifyPhoneNumber(body).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.otpInfo.mobileNumber = this.registrationForm.value.mobileNumber;;\n      this.otpInfo.sId = res.sId;\n      this.otpSent = false;\n    });\n\n  }\n  handleEvent(event) {\n    if (event.action === \"done\")\n      this.otpSent = true;\n  }\n\n  ngOnInit(): void {\n    this.buildRegistrationForm();\n    const language = localStorage.getItem('language');\n    if (language) {\n      this.translate.use(language);\n      this.translate.setDefaultLang(language);\n    }\n    this.helperService.getCountryCodeData().subscribe((res: any) => {\n      this.countryCodeArray = JSON.parse(res._body).countryCode;\n    })\n  }\n\n  // build registration form\n  public buildRegistrationForm(): void {\n    this.registrationForm = new FormGroup({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      mobileNumber: new FormControl('', [Validators.required]),\n      countryName: new FormControl(''),\n      countryCode: new FormControl(''),\n      role: new FormControl('User'),\n      email: new FormControl(''),\n      password: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(35)])\n    })\n  }\n\n  // sends request to register new user\n  public registerNewUser(): void {\n    if (this.registrationForm.value.email == null || this.registrationForm.value.email == '') {\n      delete this.registrationForm.value.email;\n    }\n    this.registrationForm.value.countryCode = this.countryCode;\n    this.registrationForm.value.countryName = this.countryName;\n    this.authService.registerNewUserData(this.registrationForm.value).subscribe((res: any) => {\n      this.otpInfo.sId = res.sId;\n      this.helperService.successToast(res.response_data, true);\n      this.isRegistered = true;\n      this.otpInfo.mobileNumber = this.registrationForm.value.mobileNumber;\n    });\n  }\n\n  public verifyOTPNumber(): void {\n    this.authService.otpVerify(this.otpInfo).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.router.navigate(['login']);\n    });\n  }\n  public addCountryCode(event: any): void {\n    this.countryCode = event.target.value.split(' ')[0];\n    this.countryName = event.target.value.split(' ')[1];\n  }\n}\n","<div class=\"auth-page\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <div class=\"row\">\n          <div class=\"col-md-9 offset-md-1\">\n            <img src=\"assets/images/webapp.png\" class=\"showPointer logo\" [routerLink]=\"['/home']\" />\n\n            <form (ngSubmit)=\"registerNewUser()\" [formGroup]=\"registrationForm\" autocomplete=\"off\"\n              *ngIf=\"!isRegistered\">\n              <div class=\"form-group row\">\n                <div class=\"col-md-6\">\n                  <label for=\"exampleInputEmail1\">{{ \"FIRST_NAME\" | translate }}\n                    <span style=\"color: red\">*</span></label>\n                  <input type=\"name\" class=\"form-control barlow-regular text-normal color-b\" id=\"exampleInputname\"\n                    aria-describedby=\"emailHelp\" placeholder=\"{{ 'ENTER_YOUR_FIRST_NAME' | translate }}\"\n                    formControlName=\"firstName\" />\n                </div>\n                <div class=\"col-md-6\">\n                  <label for=\"exampleInputEmail1\">{{ \"LAST_NAME\" | translate }}\n                    <span style=\"color: red\">*</span></label>\n                  <input type=\"name\" class=\"form-control barlow-regular text-normal color-b\" id=\"exampleInputname2\"\n                    aria-describedby=\"emailHelp\" placeholder=\"{{ 'ENTER_YOUR_LAST_NAME' | translate }}\"\n                    formControlName=\"lastName\" />\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"exampleInputEmail1\">{{\"COUNTRY_CODE\" | translate}} <span style=\"color: red\">*</span></label>\n                <!-- <label for=\"exampleInputEmail1\">{{ \"MOBILE_NUMBER\" | translate }} <span\n                    style=\"color: red;\">*</span></label> -->\n                <select class=\"form-control\" (change)=\"addCountryCode($event)\" name=\"countryCode\">\n                  <option>Select</option>\n                  <option *ngFor=\"let countryCode of countryCodeArray\" [value]=\"countryCode.dial_code\">\n                    {{ countryCode.dial_code }} ({{ countryCode.code }}) ({{\n                      countryCode.name\n                    }})\n                  </option>\n                </select>\n              </div>\n\n              <div class=\"form-group\">\n                <label>{{\"MOBILE_NUMBER\" | translate}} <span style=\"color: red\">*</span></label>\n                <div class=\"row col-md-12\">\n                  <ng-container *ngIf=\"countryCode\">\n                    <input type=\"name\" class=\"form-control barlow-regular text-normal color-b input-country col-md-3\"\n                    readonly [(ngModel)]=\"countryCode\" [ngModelOptions]=\"{standalone:true}\" id=\"exampleI3nputname\"\n                    aria-describedby=\"emailHelp\" />\n                  </ng-container>\n                  <input type=\"name\" class=\"form-control barlow-regular text-normal color-b input-country\"\n                    [ngClass]=\"countryCode ? 'col-md-9':'col-md-12'\" id=\"exampleI3nputname\" aria-describedby=\"emailHelp\"\n                    placeholder=\"{{ 'ENTER_YOUR_MOBILE_NUMBER' | translate }}\" formControlName=\"mobileNumber\" />\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"exampleInputEmail1\">{{ \"EMAIL (OPTIONAL)\" | translate\n                  }}<span style=\"color: red\"></span></label>\n                <input type=\"email\" class=\"form-control barlow-regular text-normal color-b\" id=\"exampleInputEmail1\"\n                  aria-describedby=\"emailHelp\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                  placeholder=\"{{ 'ENTER_YOUR_EMAIL_ADDRESS' | translate }}\" formControlName=\"email\" />\n                <span class=\"help-block\" *ngIf=\"registrationForm.controls['email'].hasError('pattern')\">\n                  <small class=\"text-danger\">{{\n                    \"ENTER_A_VALID_EMAIL_ADDRESS\" | translate\n                  }}</small>\n                </span>\n              </div>\n\n              <div class=\"form-group relative\">\n                <label for=\"exampleInputEmail1\">{{ \"PASSWORD\" | translate }}\n                  <span style=\"color: red\">*</span></label>\n                <input type=\"password\" class=\"form-control barlow-regular text-normal color-b\" id=\"exampleInputpasswd\"\n                  aria-describedby=\"emailHelp\" placeholder=\"{{ 'ENTER_YOUR_PASSWORD' | translate }}\"\n                  formControlName=\"password\" />\n                <span class=\"help-block\" *ngIf=\"\n                    registrationForm.controls['password'].hasError('minlength')\n                  \">\n                  <small class=\"text-danger\">{{\n                    \"MIN_PASS\" | translate\n                  }}</small>\n                </span>\n                <span class=\"help-block\" *ngIf=\"\n                    registrationForm.controls['password'].hasError('maxlength')\n                  \">\n                  <small class=\"text-danger\">{{\n                    \"MAX_PASS\" | translate\n                  }}</small>\n                </span>\n                <!--                <img src=\"assets/icons/eye.png\" class=\"absolute eye\"/>-->\n              </div>\n\n              <br /><br />\n              <button type=\"submit\" [disabled]=\"registrationForm.invalid\" class=\"btn btn-warning sign-btn\">\n                {{ \"SIGN_UP\" | translate }}\n              </button>\n            </form>\n            <br />\n            <form (ngSubmit)=\"verifyOTPNumber()\" #otpForm=\"ngForm\" autocomplete=\"off\" *ngIf=\"isRegistered\">\n              <p class=\"color-green\" translate>{{ \"OTP_SENT\" | translate }}</p>\n              <div class=\"form-group\">\n                <label for=\"exampleInputEmail1\">{{ \"OTP_ENTER\" | translate\n                  }}<span style=\"color: #ff0000\">*</span></label>\n                <input type=\"text\" class=\"form-control barlow-regular text-normal color-b\" id=\"otpInput\"\n                  aria-describedby=\"emailHelp\" placeholder=\"{{ 'OTP_ENTER' | translate }}\" required name=\"OTP\"\n                  [maxLength]=\"6\" [minLength]=\"4\" [(ngModel)]=\"otpInfo.otp\" />\n              </div>\n\n              <br /><br />\n              <button type=\"submit\" [disabled]=\"otpForm.invalid\" class=\"btn btn-warning sign-btn\">\n                {{ \"VERIFY_OTP\" | translate }}\n              </button>\n              <h6 class=\"text-medium color-b barlow-regular\" *ngIf=\"otpSent == false\">\n                {{ \"RESEND_OTP_IN\" }}\n                <span class=\"color-red\">\n                  <countdown [config]=\"{ leftTime: 60 }\" (event)=\"handleEvent($event)\"></countdown>\n                </span>\n              </h6>\n              <br />\n              <br />\n              <button type=\"button\" class=\"btn btn-warning sign-btn\" (click)=\"resendOtp()\" *ngIf=\"otpSent == true\">\n                {{ \"RESEND_OTP\" | translate }}\n              </button>\n            </form>\n\n            <h6 class=\"text-center text-normal color-b-c barlow-regular my-3\">\n              {{ \"HAVE_GOT_AN_ACCOUNT\" | translate\n              }}<span class=\"h1sm color-primary pointer\" [routerLink]=\"['/login']\">\n                &nbsp;{{ \"LOG_IN\" | translate }}</span>\n            </h6>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-6 welcome-banner text-center\">\n        <img src=\"assets/images/register.png\" class=\"img-fluid banner-img\" />\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reset-passwd',\n  templateUrl: './reset-passwd.component.html',\n  styleUrls: ['./reset-passwd.component.scss']\n})\nexport class ResetPasswdComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"auth-page\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <div class=\"row\">\n          <div class=\"col-md-9 offset-md-1\">\n            <img src=\"assets/icons/logo.png\" class=\"logo\" />\n\n            <h1 class=\"h1xl color-b barlow-semibold\">\n              Reset Password\n            </h1>\n\n            <form>\n              <div class=\"form-group relative\">\n                <label for=\"exampleInputEmail1\"\n                  >Password <span style=\"color: red;\">*</span></label\n                >\n                <input\n                  type=\"paswd\"\n                  class=\"form-control  barlow-regular text-normal color-b\"\n                  id=\"exampleInputpasswd\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                />\n                <small id=\"emailHelp\" class=\"form-text text-small  color-green\"\n                  ><img src=\"assets/icons/tick.png\" /> Nice! super strong\n                  password</small\n                >\n                <img src=\"assets/icons/eye.png\" class=\"absolute eye\" />\n              </div>\n\n              <div class=\"form-group relative\">\n                <label for=\"exampleInputEmail1\"\n                  >Re-enter Password <span style=\"color: red;\">*</span></label\n                >\n                <input\n                  type=\"paswd\"\n                  class=\"form-control  barlow-regular text-normal color-b barlow-regular text-normal color-b\"\n                  id=\"exampleInputrepasswd\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                />\n\n                <img src=\"assets/icons/eye.png\" class=\"absolute eye\" />\n              </div>\n            </form>\n            <br />\n\n            <h6 class=\"text-md color-b-c barlow-regular\">Reset Code</h6>\n\n            <div class=\"row\">\n              <div class=\"col-md-3 col-6 mb-3\">\n                <input type=\"text\" class=\"reset-block\" />\n              </div>\n              <div class=\"col-md-3 col-6 mb-3\">\n                <input type=\"text\" class=\"reset-block\" />\n              </div>\n              <div class=\"col-md-3 col-6 mb-3\">\n                <input type=\"text\" class=\"reset-block\" />\n              </div>\n              <div class=\"col-md-3 col-6 mb-3\">\n                <input type=\"text\" class=\"reset-block\" />\n              </div>\n            </div>\n\n            <button\n              type=\"button\"\n              class=\"btn btn-warning sign-btn my-4\"\n              [routerLink]=\"['/login']\"\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-6 welcome-banner text-center\">\n        <img src=\"assets/images/reset.png\" class=\"img-fluid banner-img \" />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-startup',\n  templateUrl: './startup.component.html',\n  styleUrls: ['./startup.component.scss']\n})\nexport class StartupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"auth-page\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <div class=\"row\">\n          <div class=\"col-md-9 offset-md-1\">\n            <img src=\"assets/icons/logo.png\" class=\"logo\" />\n            <h6 class=\"text-big barlow-medium\">Welcome,</h6>\n            <h5 class=\"h1xl barlow-semibold\">Let's Get you started</h5>\n            <h6 class=\"text-medium barlow-regular color-b-d my-4 pb-3\">\n              Please enter your Mobile number for verification\n            </h6>\n\n            <div class=\"row\">\n              <div class=\"col-md-3 col-5\">\n                <div class=\"\">\n                  <h6 class=\"text-small color-b-c barlow-regular\">\n                    Mobile Number\n                  </h6>\n                  <select class=\"selectVal\">\n                    <option value=\"0\">+91</option>\n                    <option value=\"1\">+92</option>\n                    <option value=\"2\">+93</option>\n                    <option value=\"3\">+94</option>\n                  </select>\n                </div>\n              </div>\n              <div class=\"col-md-9 col-7\">\n                <form>\n                  <div class=\"form-group relative\">\n                    <label for=\"exampleInputEmail1\"></label>\n                    <input\n                      type=\"paswd\"\n                      class=\"form-control  barlow-regular text-normal color-b\"\n                      id=\"exampleInputpasswd\"\n                      aria-describedby=\"emailHelp\"\n                      placeholder=\"Enter email\"\n                    />\n\n                    <img src=\"assets/icons/close.png\" class=\"absolute close\" />\n                  </div>\n                </form>\n              </div>\n            </div>\n\n            <br /><br />\n            <button\n              type=\"button\"\n              class=\"btn btn-warning sign-btn\"\n              [routerLink]=\"['/verify-number']\"\n            >\n              Continue\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-6 welcome-banner text-center\">\n        <img src=\"assets/images/startup.png\" class=\"img-fluid banner-img \" />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-verify-number',\n  templateUrl: './verify-number.component.html',\n  styleUrls: ['./verify-number.component.scss']\n})\nexport class VerifyNumberComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"auth-page\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <div class=\"row\">\n          <div class=\"col-md-9 offset-md-1\">\n            <img src=\"assets/icons/logo.png\" class=\"logo\" />\n\n            <h5 class=\"h1xl barlow-semibold\">Verify your number</h5>\n            <h6 class=\"text-medium barlow-regular color-b-d mb-5\">\n              W have send a 4 digit verification code to\n              <br />\n              <span class=\"color-green\">+91 98 6766 4312</span>\n            </h6>\n\n            <h6 class=\"text-md color-b-c barlow-regular\">Verification code</h6>\n\n            <div class=\"row\">\n              <div class=\"col-md-3 col-6 mb-3\">\n                <input type=\"text\" class=\"reset-block\" />\n              </div>\n              <div class=\"col-md-3 col-6 mb-3\">\n                <input type=\"text\" class=\"reset-block\" />\n              </div>\n              <div class=\"col-md-3 col-6 mb-3\">\n                <input type=\"text\" class=\"reset-block\" />\n              </div>\n              <div class=\"col-md-3 col-6 mb-3\">\n                <input type=\"text\" class=\"reset-block\" />\n              </div>\n            </div>\n            <h6 class=\"text-medium color-b barlow-regular\">\n              Resend OTP in <span class=\"color-red\">00:52 s</span>\n            </h6>\n\n            <br /><br />\n            <button\n              type=\"button\"\n              class=\"btn btn-warning sign-btn\"\n              [routerLink]=\"['/welcome']\"\n            >\n              Submit OTP\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-6 welcome-banner text-center\">\n        <img src=\"assets/images/startup.png\" class=\"img-fluid banner-img \" />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"auth-page\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <div class=\"row\">\n          <div class=\"col-md-9 offset-md-1\">\n            <img src=\"assets/icons/logo.png\" class=\"logo\" />\n            <h6 class=\"text-big barlow-medium\">Welcome,</h6>\n            <h5 class=\"h1xl barlow-semibold\">Let's Get you started</h5>\n            <h6 class=\"text-medium barlow-regular color-b-d mb-5 pb-5 mt-3\">\n              Please Login or Sign up to continue\n            </h6>\n\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-warning login-btn\"\n              [routerLink]=\"['/login']\"\n            >\n              Log in\n            </button>\n            <br /><br />\n            <button\n              type=\"button\"\n              class=\"btn btn-warning sign-btn\"\n              [routerLink]=\"['/register']\"\n            >\n              Sign up\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-6 welcome-banner text-center\">\n        <img src=\"assets/images/welcome.png\" class=\"img-fluid banner-img \" />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HelperService } from \"../../../services/helper.service\";\nimport { MyStoreService } from \"../my-store/my-store.service\";\nimport { BusinessInfoModel } from \"../../models/about-us.model\";\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss']\n})\nexport class AboutUsComponent implements OnInit {\n  public pageData = {\n    title: '',\n    description: ''\n  };      // contains information about the store\n  public businessInfoList: BusinessInfoModel;\n\n  constructor(private helperService: HelperService, private myStoreService: MyStoreService) {\n    this.getAboutUsInfo();\n  }\n\n  // get's about us information\n  public getAboutUsInfo(): void {\n    this.myStoreService.getAboutInformation().subscribe((res: any) => {\n      this.pageData = res.response_data;\n    })\n  }\n\n  ngOnInit(): void {\n    this.helperService.businessInfo$.subscribe(businessInfo => {\n      if (businessInfo) {\n        this.businessInfoList = businessInfo;\n      }\n    })\n    this.helperService.scrollTop();\n  }\n\n}\n","<!-- <app-header-component></app-header-component> -->\n\n<div class=\"container-fluid color-lightblue footer-link\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n\n    <div\n      class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\"\n      *ngIf=\"businessInfoList\"\n    >\n      <div class=\"\">\n        <div class=\"about-us\">\n          <br /><br />\n          <h2 class=\"h1md barlow-semibold title\">\n            {{ \"ABOUT_US\" | translate }}\n          </h2>\n          <div class=\"row store\">\n            <div class=\"col-md-9\">\n              <div class=\"\">\n                <label>{{ \"STORE_NAME\" | translate }}</label>\n                &nbsp;<strong>{{ businessInfoList.storeName }} </strong>\n              </div>\n              <div class=\"\">\n                <label>{{ \"LOCATION\" | translate }}</label>\n                &nbsp; <strong>{{ businessInfoList.officeLocation }} </strong>\n              </div>\n              <div class=\"\">\n                <label>{{ \"ADDRESS\" | translate }}</label>\n                &nbsp; <strong>{{ businessInfoList.address }} </strong>\n              </div>\n              <div class=\"\">\n                <label>{{ \"PHONE_NUMBER\" | translate }}</label>\n                &nbsp; <strong>{{ businessInfoList.phoneNumber }} </strong>\n              </div>\n              <div class=\"\">\n                <label>{{ \"EMAIL\" | translate }}</label>\n                &nbsp; <strong>{{ businessInfoList.email }} </strong>\n              </div>\n            </div>\n            <div class=\"col-md-3\">\n              <img\n                class=\"text-center img-fluid about-img\"\n                src=\"assets/images/webapp.png\"\n              />\n            </div>\n          </div>\n          <br /><br />\n          <h4 class=\"text-normal barlow-regular preserveLineBreak\">\n            {{ pageData.title }}\n          </h4>\n          <h6 [innerHTML]=\"pageData.description\"></h6>\n          <app-footer></app-footer>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { CartState } from '../../store/cart.reducer';\nimport { AddToCartModel, CartModel } from '../../models/cart.model';\nimport { HelperService } from '../../../services/helper.service';\nimport { Router } from '@angular/router';\nimport { ProductsModel } from '../../models/category.model';\nimport * as _ from 'lodash';\nimport { environment } from \"../../../../environments/environment\";\nimport { ActiveToast } from \"ngx-toastr\";\nimport { NgbModal, NgbModalRef } from \"@ng-bootstrap/ng-bootstrap\";\nimport { CartService } from \"./cart.service\";\nimport { OrdersService } from \"../orders/orders.service\";\nimport { ProductsService } from \"../products/products.service\";\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n  public cartInfo: CartModel;     // contains user's cart information\n  public relatedProducts: Array<ProductsModel> = [];    // contains list of related products\n  public currencyCode: string = null;     // contains currency code\n  public productImageUrl: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-223`;      // contains optimized product image url\n  public otherProductImageUrl: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-105`;      // contains optimized product image url\n  public minimumOrderAmount: number = 0;        // contains minimum order amount\n  private modalRef: NgbModalRef;      // contains modal reference\n\n  constructor(private store: Store<CartState>, private helperService: HelperService, private router: Router, private modalService: NgbModal, private cartService: CartService, private orderService: OrdersService, private productsService: ProductsService) {\n    this.helperService.currency$.subscribe(currencyCode => {\n      this.currencyCode = currencyCode;\n    });\n    this.store.select('cartInfo').subscribe(state => {\n      if (state) {\n        this.cartInfo = state;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.cartInfo.products.length > 0) {\n      this.getMinimumOrderAmount();\n      this.getRelatedProducts();\n    }\n    this.helperService.scrollTop();\n  }\n\n  // contains minimum order amount\n  private getMinimumOrderAmount(): void {\n    this.cartService.getDeliverySettings().subscribe((res: any) => {\n      this.minimumOrderAmount = res.response_data.minimumOrderAmountToPlaceOrder;\n    });\n  }\n\n  // verifies cart before checkout\n  public verifyCart(): void | ActiveToast<any> {\n    if (this.cartInfo.subTotal < this.minimumOrderAmount) {\n      return this.helperService.infoToast(\"MIN_ORDER\", false, this.minimumOrderAmount);\n    }\n    this.goToCheckoutPage();\n  }\n\n  // navigates to checkout page\n  public goToCheckoutPage(): void {\n    this.router.navigate(['checkout']);\n  }\n\n  // get's related products\n  private getRelatedProducts(): void {\n    const products$ = this.productsService.getRelatedProducts();\n    products$.subscribe((res: any) => {\n      let productsId = [];\n      this.cartInfo.products.forEach(p => {\n        productsId.push({_id: p.productId});\n      });\n      let products: Array<any> = _.differenceBy(res.response_data, productsId, '_id');\n      this.relatedProducts = products.slice(0, 2);\n    });\n  }\n\n  // increments/decrements quantity\n  public changeQuantity(type: string, cart: AddToCartModel): void {\n    if (type === 'increment') {\n      let quantity = cart.quantity;\n      quantity += 1;\n      // this.store.dispatch(new CartActions.UpdateCartAction({cartId: product.cartId, productId: product._id, quantity}));\n      this.updateCartData(cart.productId, quantity, cart.unit);\n    } else {\n      if (cart.quantity > 1) {\n        let quantity = cart.quantity;\n        quantity -= 1;\n        this.updateCartData(cart.productId, quantity, cart.unit);\n      }\n    }\n  }\n\n  // updates cart data\n  private updateCartData(productId: string, quantity: number, unit: string): void {\n    this.cartService.updateCart({\n      cartId: this.cartInfo._id,\n      productId: productId,\n      quantity,\n      unit\n    }).subscribe((res: any) => {\n      this.cartService.checkCartFormat(res, 'update')\n    });\n  }\n\n  // sends request to delete product from cart\n  public deleteProductFromCart(cart: AddToCartModel): void {\n    this.cartService.deleteProductFromCart(cart.productId).subscribe((res: any) => {\n      this.cartService.checkCartFormat(res, 'delete');\n    });\n  }\n\n}\n","<div class=\"container-fluid color-lightblue cart-page\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n\n    <div class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\">\n      <br /><br />\n      <div class=\"bottom-border\">\n        <h5 class=\"barlow-bold text-normal color-b mt-5 pb-2 main-title\">\n          {{ \"CART_ITEMS\" | translate }}\n        </h5>\n      </div>\n      <div class=\"row my-4\" *ngIf=\"cartInfo && cartInfo.products.length > 0; else emptyCart\">\n        <div class=\"col-md-7 border-right col-lg-12 col-xl-7\">\n          <div class=\"row bg-white p-3 mx-1 mb-4\" *ngFor=\"let cart of cartInfo.products; index as i\">\n            <div class=\"col-md-4 col-6 p-0 mb-4\">\n              <div class=\"searched-img pointer\" [routerLink]=\"['/product-details/', cart.productId]\">\n                <ng-container>\n                  <img\n                    [src]=\"cart.productImages && cart.productImages.length > 0 ? (cart.productImages[0].filePath ? productImageUrl + cart.productImages[0].filePath : cart.productImages[0].imageUrl) : (cart.filePath ? productImageUrl + cart.filePath : cart.imageUrl)\"\n                    class=\"search-img\" />\n                </ng-container>\n                <!-- <ng-container *ngIf=\"!cart.filePath\">\n                  <img [src]=\"cart.imageUrl\" class=\"search-img\" />\n                </ng-container> -->\n              </div>\n            </div>\n\n            <div class=\"col-md-5 col-6\">\n              <h5 class=\"h1sm barlow-medium color-b pointer main-title\"\n                [routerLink]=\"['/product-details/', cart.productId]\">\n                {{ cart.productName }}\n              </h5>\n              <h6 class=\"smaller-text color-b-c barlow-regular pt-1 cart-price\">\n                {{ cart.unit }}\n              </h6>\n\n              <ng-container *ngIf=\"!cart.isDealAvailable\">\n                <h5 class=\"color-green barlow-bold mt-4 pt-1 prod-price\">\n                  {{\n                  cart.productTotal | currency: currencyCode:\"symbol\":\"1.2-2\"\n                  }}<span class=\"barlow-medium\"></span>\n                </h5>\n              </ng-container>\n              <ng-container *ngIf=\"cart.isDealAvailable\">\n                <div class=\"row ml-0\">\n                  <h5 class=\"color-b-d barlow-bold mt-4 pt-1 prod-price\">\n                    <del>{{\n                      cart.productTotal + cart.dealTotalAmount\n                        | currency: currencyCode:\"symbol\":\"1.2-2\"\n                      }}<span class=\"barlow-medium\"></span></del>\n                  </h5>\n                  <h5 class=\"color-green barlow-bold mt-4 pt-1 ml-2 prod-price\">\n                    {{\n                    cart.productTotal\n                      | currency: currencyCode:\"symbol\":\"1.2-2\"\n                    }}<span class=\"barlow-medium\"></span>\n                  </h5>\n                </div>\n              </ng-container>\n            </div>\n\n            <div class=\"col-md-3 col-12 border-left\">\n              <div class=\"row\">\n                <div class=\"col-md-12 col-5 mb-4\">\n                  <div class=\"cart-quantity\">\n                    <a class=\"showPointer\" (click)=\"changeQuantity('decrement', cart)\"><img\n                        src=\"assets/icons/minus.svg\" /></a>\n                    <h6 class=\"barlow-regular text-smallest color-b pt-1\">\n                      {{ cart.quantity }}\n                    </h6>\n                    <a class=\"showPointer\" (click)=\"changeQuantity('increment', cart)\"><img\n                        src=\"assets/icons/plus.svg\" /></a>\n                  </div>\n                </div>\n\n                <div class=\"col-md-12 col-3\">\n                  <button type=\"button\" class=\"btn btn-outline-dark w-100 barlow-medium mb-3 text-small edit-btn\"\n                    [routerLink]=\"['/product-details/', cart.productId]\">\n                    {{ \"EDIT\" | translate }}\n                  </button>\n                </div>\n\n                <div class=\"col-md-12 col-4\">\n                  <button type=\"button\" class=\"btn btn-outline-dark w-100 barlow-medium text-small remove-btn\"\n                    (click)=\"deleteProductFromCart(cart)\">\n                    {{ \"REMOVE\" | translate }}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-4 col-lg-7 col-xl-4\">\n          <div class=\"frequently-brought\">\n            <h5 class=\"text-normal barlow-bold color-b pb-2 main-title\">\n              {{ \"PEOPLE_ALSO_BROUGHT\" | translate }}\n            </h5>\n\n            <div class=\"frequent-products\" *ngFor=\"let product of relatedProducts\"\n              [routerLink]=\"['/product-details', product._id]\">\n              <div class=\"row p-2 mb-4\">\n                <div class=\"col-md-4 col-4\">\n                  <div class=\"frequent-img showPointer\">\n                    <ng-container>\n                      <img\n                        [src]=\"product.productImages && product.productImages.length > 0 ? (product.productImages[0].filePath ? otherProductImageUrl+product.productImages[0].filePath : product.productImages[0].imageUrl) : (product.filePath ? otherProductImageUrl+product.filePath : product.imageUrl)\" />\n                    </ng-container>\n                  </div>\n                </div>\n\n                <div class=\"col-md-8 col-8\">\n                  <h6 class=\"text-md barlow-semibold showPointer mb-2 main-title\">\n                    {{ product.title }}\n                  </h6>\n                  <!--                  <h6 class=\"barlow-regular color-b-c text-14 showPointer m-0 prod-desc\">-->\n                  <!--                    {{product.description.length > 100 ? (product.description | slice: 0:100) + \"...\" : product.description}}-->\n                  <!--                  </h6>-->\n                  <p class=\"color-green barlow-bold h1sm m-0 prod-price\">\n                    {{\n                    product.variant[0].price\n                      | currency: currencyCode:\"symbol\":\"1.2-2\"\n                    }}<span class=\"barlow-medium\"></span>\n                  </p>\n                </div>\n              </div>\n            </div>\n            <br />\n          </div>\n\n          <div class=\"checkout-button\">\n            <div class=\"row checkout-block\">\n              <div class=\"col-md-4 col-4\">\n                <div class=\"bg-color-b subtotal-price text-center checkout-subtotal\">\n                  <h6 class=\"barlow-regular color-w smaller-text m-0 pt-2\">\n                    {{ \"SUBTOTAL\" | translate }}\n                  </h6>\n                  <p class=\"barlow-bold color-w smaller-text m-0\">\n                    {{\n                    cartInfo.subTotal.toFixed(2)\n                      | currency: currencyCode:\"symbol\":\"1.2-2\"\n                    }}\n                    <span class=\"barlow-medium\"></span>\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-md-8 mt-1 pt-2 pointer col-8\" (click)=\"verifyCart()\">\n                <div class=\"checkout-subtotal\">\n                  <h6 class=\"h1sm barlow-regular text-center checkout-btn\">\n                    {{ \"CHECKOUT\" | translate }} &nbsp;<span><img src=\"assets/icons/arrow.png\" /></span>\n                  </h6>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <ng-template #emptyCart>\n        <div class=\"text-center\">\n          <!--          <img src=\"assets/images/empty-cart.png\" class=\"img-fluid\"/>-->\n          <h5 class=\"color-green mt-5\">{{\"EMPTY_CART\" | translate}}</h5>\n        </div>\n      </ng-template>\n      <br /><br />\n      <app-footer></app-footer>\n    </div>\n  </div>\n</div>","import { Injectable } from \"@angular/core\";\nimport { CrudService } from \"../../../services/crud.service\";\nimport { ProductsModel, VariantModel } from \"../../models/category.model\";\nimport * as CartActions from \"../../store/cart.action\";\nimport { AddToCartModel, CartModel, DeleteCartProductModel, UpdateCartModel } from \"../../models/cart.model\";\nimport { Observable } from \"rxjs\";\nimport { Store } from \"@ngrx/store\";\nimport { CartState } from \"../../store/cart.reducer\";\nimport { HelperService } from \"../../../services/helper.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  constructor(private crud: CrudService, private store: Store<CartState>, private helperService: HelperService) {\n  }\n\n  // update cart state\n  public getUserCartState(): void {\n    this.getUserCartDetails().subscribe((res: any) => {\n      this.checkCartFormat(res, null);\n    });\n  }\n\n  // prepares the cart data to send it to the server\n  public prepareCartData(productInfo: ProductsModel, selectedVariant: VariantModel, quantity: number) {\n    const cartInfo = {\n      productId: productInfo._id,\n      quantity: quantity,\n      unit: selectedVariant.unit\n    };\n    this.addToCart(cartInfo).subscribe((res: any) => {\n      this.checkCartFormat(res, 'save');\n    });\n  }\n\n  // check if cart is added successfully\n  public checkCartFormat(res, type?: string) {\n    if (res.response_code === 201 || res.response_code === 200) {\n      if (type) {\n        let message = '';\n        if (type !== 'coupon') {\n          message = type == 'save' ? \"CART_SAVE\" : (type === 'update') ? \"CART_UPDATE\" : \"CART_DELETE\";\n        } else {\n          message = res.response_data.coupon ? \"COUPON_APPLY\" : \"COUPON_DELETE\";\n        }\n        this.helperService.successToast(message);\n      }\n      const cartData = typeof res.response_data === \"object\" ? res.response_data : this.getDefaultCartValues();\n      this.store.dispatch(new CartActions.SetCartInfoAction(cartData));\n    } else if (res.response_code === 403) {\n      this.helperService.infoToast(res.response_data.message, true);\n    }\n  }\n\n  // empties cart\n  public clearCart(): void {\n    let cartData = this.getDefaultCartValues();\n    this.store.dispatch(new CartActions.SetCartInfoAction(cartData));\n  }\n\n  // gets default cart values\n  public getDefaultCartValues(): CartModel {\n    return {\n      products: [],\n      productIds: [],\n      subTotal: 0,\n      tax: 0,\n      deliveryCharges: 0,\n      grandTotal: 0,\n      createdAt: null,\n      updatedAt: null,\n      user: null,\n      _id: null,\n      isOrderLinked: false\n    };\n  }\n\n  // prepares update cart data\n  public prepareUpdateCartData(cartId: string, cartData: AddToCartModel, quantity: number): UpdateCartModel {\n    return <UpdateCartModel>Object.assign({\n      cartId: cartId,\n      productId: cartData.productId,\n      quantity: quantity\n    });\n  }\n\n  // sends request to get user cart information\n  public getUserCartDetails() {\n    return this.crud.getData(`/carts/my`);\n  }\n\n  // sends request to add items to cart\n  public addToCart(cartData): Observable<any> {\n    return this.crud.saveData(`/carts/update`, cartData);\n  }\n\n  // sends request to update cart information\n  public updateCart(cartData: UpdateCartModel): Observable<any> {\n    return this.crud.saveData(`/carts/update`, cartData);\n  }\n\n  // sends request to delete product from cart\n  public deleteProductFromCart(productId: string): Observable<any> {\n    return this.crud.updateData(`/carts/remove/${productId}`, undefined);\n  }\n\n  // removes out of stock products\n  public removeOutOfStockProducts(products): Observable<any> {\n    return this.crud.saveData(`/cart/user/remove/multi/product`, products);\n  }\n\n  // sends request to apply coupon\n  public applyCoupon(body): Observable<any> {\n    const data = {\n      couponCode: body.couponCode\n    }\n    return this.crud.saveData(`/carts/apply-coupon/${body.couponCode}`, data);\n  }\n\n  // sends request to remove applied coupon\n  public removeCoupon(couponCode: string): Observable<any> {\n    return this.crud.deleteData(`/carts/remove-coupon/${couponCode}`);\n  }\n\n  // get's delivery settings\n  public getDeliverySettings(): Observable<any> {\n    return this.crud.getData('/settings/details');\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {CategoryModel} from '../../models/category.model';\nimport {Observable} from 'rxjs';\nimport {HelperService} from \"../../../services/helper.service\";\nimport {environment} from \"../../../../environments/environment\";\nimport {CategoryService} from \"./category.service\";\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss']\n})\nexport class CategoriesComponent implements OnInit {\n  public categoryList: Array<CategoryModel> = [];     // contains list of categories\n  public categoryImageUrl: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-117`;      // contains optimized category image url\n  constructor(private categoryService: CategoryService, private helperService: HelperService) {\n    this.getCategories();\n  }\n\n  ngOnInit(): void {\n    this.helperService.scrollTop();\n  }\n\n  // get's list of category. shows only 10 categories\n  private getCategories(): void {\n    const category$: Observable<Array<CategoryModel>> = this.categoryService.getCategoryList();\n    category$.subscribe((res: any) => {\n      this.categoryList = res.response_data;\n    });\n  }\n\n}\n","<div class=\"container-fluid color-lightblue categories\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n\n    <div class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\">\n      <br /><br />\n      <div class=\"bottom-border\">\n        <h5 class=\"barlow-bold text-normal color-b mt-5 pb-2 main-title\">\n          {{ \"EXPLORE_BY_CATEGORIES\" | translate }}\n        </h5>\n      </div>\n      <br /><br />\n\n      <div class=\"row\">\n        <div\n          class=\"col-md-2 col-4 text-center mb-4\"\n          *ngFor=\"let category of categoryList\"\n          [routerLink]=\"['/products/by/category/', category._id]\"\n        >\n          <div class=\"category-type radius-10 showPointer bg-white mb-2\">\n            <ng-container *ngIf=\"category.filePath\">\n              <img [src]=\"categoryImageUrl + category.filePath\" />\n            </ng-container>\n            <ng-container *ngIf=\"!category.filePath\">\n              <img [src]=\"category.imageUrl\" />\n            </ng-container>\n          </div>\n          <h6 class=\"text-normal barlow-medium showPointer cat-title\">\n            {{\n              category.title.length > 20\n                ? (category.title | slice: 0:18) + \"...\"\n                : category.title\n            }}\n          </h6>\n        </div>\n      </div>\n\n      <br /><br />\n      <app-footer></app-footer>\n    </div>\n  </div>\n</div>\n","import {Injectable} from \"@angular/core\";\nimport {CrudService} from \"../../../services/crud.service\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  constructor(private crud: CrudService) {\n  }\n\n  // get's category list\n  public getCategoryList(): Observable<any> {\n    return this.crud.getData(`/categories/list`)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MessageModel, NewMessageModel } from '../../models/chat.model';\nimport { SocketService } from \"../../../services/socket.service\";\nimport { HelperService } from \"../../../services/helper.service\";\nimport { ProfileService } from \"../profile/profile.service\";\n\ndeclare let $: any;\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n  public chatData: Array<MessageModel>;   // contains user's current active chat\n  private userId: string;     // contains user's id\n  public userName: string = null;   // contains user name\n\n  public messageData: NewMessageModel;      // contains chat message information \n\n  constructor(private socketService: SocketService, private helperService: HelperService, private profileService: ProfileService) {\n    this.userId = localStorage.getItem('id');\n    this.helperService.user$.subscribe(userInfo => {\n      if (userInfo) {\n        this.userName = userInfo.firstName;\n        this.messageData = this.getDefaultMessageValue();\n      }\n    })\n    this.getChatHistory();\n  }\n\n  ngOnInit(): void {\n    this.helperService.scrollTop();\n    this.socketService.message$.subscribe(message => {\n      if (message) {\n        this.chatData.push(message);\n        this.scrollToBottom();\n      }\n    })\n  }\n\n  // returns default message values\n  private getDefaultMessageValue(): NewMessageModel {\n    return {\n      userId: this.userId,\n      message: '',\n      sentBy: 'USER',\n      userName: this.userName\n    };\n  }\n\n  // get's chat history\n  public getChatHistory(): void {\n    this.profileService.getChatHistory().subscribe((res: any) => {\n      this.chatData = res.response_data;\n      this.scrollToBottom();\n    });\n  }\n\n  // sends message\n  public sendsMessage(): void {\n    if (this.messageData.message.length === 0) {\n      return;\n    }\n    this.socketService.sendMessageToTheStore(this.messageData);\n    this.chatData.push({\n      userId: this.messageData.userId,\n      message: this.messageData.message,\n      updatedAt: '',\n      _id: '',\n      sentBy: this.messageData.sentBy\n    });\n    this.messageData = this.getDefaultMessageValue();\n    this.scrollToBottom();\n  }\n\n  // automatically scrolls to bottom\n  private scrollToBottom() {\n    $(document).ready(function () {\n      $('#chat-section').animate({\n        scrollTop: $('#chat-section').get(0).scrollHeight\n      }, 2000);\n    });\n  }\n\n}\n","<div class=\"container-fluid color-lightblue chat\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n\n    <div class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\">\n\n      <br/><br/><br/>\n      <div class=\"bottom-border\">\n        <div class=\"row mt-4\">\n          <div class=\"col-md-6\">\n            <h5 class=\"barlow-bold text-normal color-b main-title \">\n              Chat\n            </h5>\n          </div>\n        </div>\n      </div>\n      <br/><br/>\n\n      <div class=\"row\" *ngIf=\"chatData\">\n        <div class=\"col-md-9 col-lg-12 col-xl-9\">\n          <div class=\"chat-section bg-white p-4 radius-8 mt-2\" id=\"chat-section\">\n            <ng-container *ngFor=\"let message of chatData\">\n              <div class=\"row\" *ngIf=\"message.sentBy === 'STORE'\">\n                <div class=\"col-md-6\">\n                  <div class=\"incoming\">\n                    <div class=\"row\">\n                      <div class=\"col-md-12\">\n                        <div class=\"row no-gutters\">\n                          <div class=\"triangle-left\"></div>\n\n                          <form>\n                            <div class=\"form-group\">\n                              <textarea type=\"text\" [placeholder]=\"message.message\" class=\"barlow-medium\"></textarea>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"row text-right\" *ngIf=\"message.sentBy === 'USER'\">\n                <div class=\"col-md-3 offset-md-9\">\n                  <div class=\"outgoing\">\n                    <div class=\"row\">\n                      <div class=\"col-md-12\">\n                        <div class=\"row\">\n                          <form>\n                            <div class=\"form-group\">\n                              <textarea type=\"text\" [placeholder]=\"message.message\" class=\"barlow-medium\"></textarea>\n                            </div>\n                          </form>\n                          <div class=\"triangle-right\"></div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n          </div>\n\n          <div class=\"reply-section bg-white p-3\" *ngIf=\"chatData\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"reply-section\">\n                  <form>\n                    <div class=\"form-group\">\n                      <textarea\n                        type=\"text\"\n                        placeholder=\"Enter a message\"\n                        class=\"barlow-regular text-normal color-b-d\"\n                        name=\"message\"\n                        [(ngModel)]=\"messageData.message\"\n                      ></textarea>\n                    </div>\n                  </form>\n                  <a class=\"showPointer\" (click)=\"sendsMessage()\"\n                  ><img src=\"assets/icons/send.png\" class=\"send-icon\"\n                  /></a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <br/><br/>\n      <app-footer></app-footer>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { NgbDateStruct, NgbCalendar, NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Store } from '@ngrx/store';\nimport { CartState } from '../../store/cart.reducer';\nimport { CartModel } from '../../models/cart.model';\nimport { AddressModel, DeliveryTaxModel, TimeScheduleModel, WorkingHoursModel } from '../../models/order.model';\nimport { HelperService } from '../../../services/helper.service';\nimport * as CartActions from '../../store/cart.action';\nimport { Router } from '@angular/router';\nimport { ActiveToast } from \"ngx-toastr\";\nimport * as moment from 'moment';\nimport { CartService } from \"../cart/cart.service\";\nimport { CheckoutService } from \"./checkout.service\";\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.scss']\n})\nexport class CheckoutComponent implements OnInit {\n  model: NgbDateStruct;\n  date: {year: number; month: number};\n  public cartInfo: CartModel;     // contains cart state\n  private modalRef: NgbModalRef;      // contains reference to address modal\n  public addressList: Array<AddressModel> = [];     // contains list of user address\n  public addressData: AddressModel;     // contains address information\n  public addressId: string;        // contains id of selected address to update\n  public selectedAddress: string = null;      // contains id of the selected\n  public deliveryDate: string;     // contains the selected delivery date\n  public deliveryTime: string = '';     // contain's delivery time slot\n  public isValidDeliverySlot: boolean = false;      // set to true when user selects a valid delivery date and time slot\n  public minDate: NgbDateStruct;      // contains min date\n  public timeSchedulesSlots: Array<TimeScheduleModel> = [];     // shows available slots on selected date\n  public couponCode: string = '';        // contains coupon code\n  public currencyCode: string = null;     // contains currency code\n  public showMap: boolean = false;     //    set to true when address is fetched from the geocoding api\n  public hideEdit: boolean = false;     //    set to true when address is fetched from the geocoding api\n  public workingHours: Array<WorkingHoursModel> = [];     // contains working hours of next seven days\n  public adminLocation: Array<number> = [];     // contains store location information\n  public mapAddress: string = null;      // contains map address\n  public location = {\n    lat: null,\n    lng: null\n  };      // contains current and updated location information\n  public addressTypes: Array<string> = [];      // contains list of address types\n\n  constructor(private calendar: NgbCalendar, private store: Store<CartState>, private modalService: NgbModal, private helperService: HelperService, private router: Router, private cartService: CartService, private checkoutService: CheckoutService) {\n\n    this.checkoutService.store$.subscribe(data => {\n      if (data) {\n        this.adminLocation = data;\n      }\n    });\n    this.helperService.currency$.subscribe(currencyCode => {\n      this.currencyCode = currencyCode;\n    });\n    const date = new Date();\n    this.minDate = {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\n    this.store.select('cartInfo').subscribe(state => {\n      if (state) {\n        this.cartInfo = state;\n        if (this.cartInfo.products.length > 0) {\n          this.getUserAddressList();\n        }\n      }\n    });\n    this.getStoreWorkingHours();\n  }\n\n  ngOnInit(): void {\n    this.helperService.scrollTop();\n  }\n\n  // get's default address values\n  private getDefaultAddressValues(address?: AddressModel): AddressModel {\n    return {\n      address: address ? address.address : '',\n      flatNo: address ? address.flatNo : '',\n      mobileNumber: address ? address.mobileNumber : '',\n      user: address ? address.user : '',\n      postalCode: address ? address.postalCode : '',\n      addressType: address ? address.addressType : '',\n      apartmentName: address ? address.apartmentName : '',\n      landmark: address ? address.landmark : '',\n      location: address ? address.location : {latitude: null, longitude: null}\n    };\n  }\n\n  // sets map show status\n  public setMapShowStatus(): void {\n    this.showMap = !this.showMap;\n    this.mapAddress = this.addressData.address;\n    this.location = {lat: this.addressData.location.latitude, lng: this.addressData.location.longitude};\n    this.hideEdit = this.showMap === false;\n  }\n\n  // set's map address\n  public setMapAddress(): void {\n    this.addressData.address = this.mapAddress;\n    this.addressData.location.latitude = this.location.lat;\n    this.addressData.location.longitude = this.location.lng;\n    this.showMap = false;\n    this.hideEdit = false;\n  }\n\n  // get's user address list\n  private getUserAddressList(): void {\n    const address$ = this.checkoutService.getAddress();\n    const addressTypes$ = this.checkoutService.getAddressTypeList();\n    this.addressTypes = [];\n    address$.subscribe((res: any) => {\n      this.addressList = res.response_data;\n      if (this.cartInfo.deliveryCharges === 0) {\n        this.selectedAddress = null;\n      }\n      if (this.cartInfo && this.cartInfo.deliveryAddress) {\n        this.selectedAddress = this.cartInfo.deliveryAddress;\n      }\n    });\n    addressTypes$.subscribe((res: any) => {\n      if (res.response_code === 200) {\n        for (let val in res.response_data) {\n          this.addressTypes.push(res.response_data[val]);\n        }\n      }\n    })\n  }\n\n  // opens address modal\n  public openAddressModal(content: TemplateRef<string>, addressId: string) {\n    this.selectedAddress = addressId;\n    navigator.geolocation.getCurrentPosition(coOrdinates => {\n      let address;\n      if (this.selectedAddress) {\n        address = this.addressList.find(a => a._id === this.selectedAddress);\n      }\n      this.addressData = this.getDefaultAddressValues(address);\n      if (address) {\n        this.addressId = address._id;\n        this.mapAddress = this.addressData.address;\n        this.showMap = false;\n        this.hideEdit = false;\n        this.modalRef = this.modalService.open(content, {keyboard: false, backdrop: false});\n      } else {\n        this.location.lat = coOrdinates.coords.latitude;\n        this.location.lng = coOrdinates.coords.longitude;\n        this.fetchAddress(this.location.lat, this.location.lng);\n        this.modalRef = this.modalService.open(content, {keyboard: false, backdrop: false});\n        this.mapAddress = null;\n        this.showMap = true;\n      }\n      this.hideEdit = false;\n    }, error => {\n      let address;\n      if (this.selectedAddress) {\n        address = this.addressList.find(a => a._id === this.selectedAddress);\n      }\n      if (!address) {\n        this.addressData = this.getDefaultAddressValues();\n        this.location.lat = this.adminLocation[0];\n        this.location.lng = this.adminLocation[1];\n        this.mapAddress = null;\n        this.fetchAddress(this.location.lat, this.location.lng);\n        this.modalRef = this.modalService.open(content, {keyboard: false, backdrop: false});\n      } else {\n        this.addressData = this.getDefaultAddressValues(address);\n        this.mapAddress = this.addressData.address;\n        this.showMap = false;\n        this.hideEdit = false;\n        this.addressId = address._id;\n        this.modalRef = this.modalService.open(content, {keyboard: false, backdrop: false});\n      }\n    });\n  }\n\n  // closes address model\n  public closeAddressModal(): void {\n    this.modalService.dismissAll();\n    this.addressData = this.getDefaultAddressValues(undefined);\n    this.addressId = null;\n  }\n\n  // calls when map marker is dragged\n  public markerDraggedEvent(data): void {\n    this.location.lat = data.lat;\n    this.location.lng = data.lng;\n    this.fetchAddress(data.lat, data.lng);\n  }\n\n  // geo-coders address by co-ordinates\n  private fetchAddress(latitude: number, longitude: number): void {\n    this.helperService.getLocationInfoByCoOrdinates(latitude, longitude).subscribe((res: any) => {\n      if (res.status === 'OK') {\n        this.mapAddress = res.results[0].formatted_address;\n        const postalCode = res.results[0].address_components.find(data => data.types.includes('postal_code'));\n        this.addressData.postalCode = postalCode ? postalCode.long_name : '';\n        this.showMap = true;\n      } else {\n        if (res.error_message) {\n          return this.helperService.errorToast(res.error_message, true);\n        }\n        this.showMap = true;\n        this.helperService.errorToast(\"MAP_ERROR\");\n      }\n    }, () => {\n      this.showMap = true;\n      this.helperService.errorToast(\"MAP_ERROR\");\n    });\n  }\n\n  // sends request to save address\n  public geoCodeAddress(): void {\n    this.checkOperationType();\n  }\n\n  // check's operation type before making the api call\n  private checkOperationType() {\n    if (!this.addressId) {\n      this.saveAddress();\n    } else {\n      this.updateAddress();\n    }\n  }\n\n  // sends request to save address\n  private saveAddress(): void {\n    this.checkoutService.saveAddress(this.addressData).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.closeAddressModal();\n      this.getUserAddressList();\n    });\n  }\n\n  // sends request to update address\n  private updateAddress(): void {\n    this.checkoutService.updateAddress(this.addressId, this.addressData).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.closeAddressModal();\n      this.getUserAddressList();\n    });\n  }\n\n  // sends request to delete address\n  public deleteAddress(addressId: string, index: number): void {\n    this.checkoutService.deleteAddress(addressId).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.addressList.splice(index, 1);\n    });\n  }\n\n  // sends request to get user's delivery charges\n  public getDeliveryCharges(address: AddressModel, event): void | ActiveToast<any> {\n    this.selectedAddress = address._id;\n    let deliveryTaxBody: DeliveryTaxModel = <DeliveryTaxModel>Object.assign({\n      deliveryAddress: this.selectedAddress\n    });\n    this.checkoutService.calculateDeliveryCharges(deliveryTaxBody).subscribe((res: any) => {\n      this.helperService.infoToast(\"DEL_CHARGE\");\n      this.cartService.getUserCartState();\n    });\n  }\n\n  // proceeds to payment page\n  public proceedToPaymentPage(): void | ActiveToast<any> {\n    if (!this.selectedAddress) {\n      return this.helperService.errorToast(\"ADDR_SEL\");\n    }\n    if (!this.isValidDeliverySlot) {\n      return this.helperService.errorToast(\"SLOT_SEL\");\n    }\n    const orderData = this.checkoutService.prepareOrderData(this.cartInfo._id, this.deliveryTime);\n    const encodedData = btoa(btoa(btoa(JSON.stringify(orderData))));\n    localStorage.setItem('orderData', encodedData);\n    this.router.navigate(['payment']);\n  }\n\n  // sends request to get stores working hours\n  public getStoreWorkingHours(): void {\n    const currentDate = new Date();\n    const currentTime = `${currentDate.getHours()}:${currentDate.getMinutes()}`\n    this.checkoutService.getWorkingHourSlots(currentTime, currentDate.getTime()).subscribe((res: any) => {\n      this.isValidDeliverySlot = false;\n      this.deliveryTime = null;\n      this.workingHours = res.response_data;\n    });\n  }\n\n  // shows time schedule based on selected day\n  public showTimeSchedule(dayId: string): void {\n    const workingHourData = this.workingHours.find(workingHour => workingHour._id === dayId);\n    if (workingHourData) {\n      this.deliveryDate = workingHourData.date;\n      this.timeSchedulesSlots = workingHourData.timings;\n    }\n  }\n\n  // sets selected delivery slot\n  public setSelectedDeliverySlot(): void {\n    this.isValidDeliverySlot = true;\n  }\n\n  // sends request to apply coupon\n  public applyCoupon(): void {\n    const body = {couponCode: this.couponCode, id: this.cartInfo._id};\n    this.cartService.applyCoupon(body).subscribe((res: any) => {\n      this.couponCode = '';\n      this.cartService.checkCartFormat(res, 'coupon')\n    });\n  }\n\n  // sends request to remove coupon\n  public removeCoupon(): void {\n    this.cartService.removeCoupon(this.cartInfo.couponCode).subscribe((res: any) => {\n      this.cartService.checkCartFormat(res, 'coupon');\n    });\n  }\n}\n","<div class=\"container-fluid color-lightblue\">\n  <div class=\"row color-lightblue\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n\n    <div\n      class=\"col-md-10 col-lg-9 col-xl-10 bg-color-lightblue mt-4 main-bar\"\n      *ngIf=\"cartInfo\"\n    >\n      <br /><br />\n      <br />\n      <div class=\"row mb-5\">\n        <div class=\"col-md-3 col-lg-5 col-xl-3\">\n          <h5 class=\"barlow-medium text-normal color-b mt-4 pb-2 main-title\">\n            {{ \"CART_SUMMARY\" | translate }} ({{ cartInfo.products.length }}\n            {{ \"ITEMS\" | translate }})\n          </h5>\n          <div class=\"cart-summary radius-10 bg-white p-3\">\n            <div class=\"row\">\n              <div class=\"col-md-7 col-5\">\n                <h6 class=\"text-md barlow-regular\">\n                  {{ \"SUB_TOTAL\" | translate }}:\n                </h6>\n              </div>\n              <div class=\"col-md-5 text-right col-7\">\n                <h4 class=\"text-md barlow-bold word-b\">\n                  {{\n                    cartInfo.subTotal | currency: currencyCode:\"symbol\":\"1.2-2\"\n                  }}\n                </h4>\n              </div>\n            </div>\n            <div class=\"row\" *ngIf=\"cartInfo.tax > 0\">\n              <div class=\"col-md-8 col-5\">\n                <h6 class=\"text-md barlow-regular\">\n                  <span> <img src=\"assets/icons/sale.png\" /></span\n                  >{{ \"TAX\" | translate }}: ({{ cartInfo.taxInfo.taxName }}\n                  {{ cartInfo.taxInfo.amount + \"%\" }}):\n                </h6>\n              </div>\n              <div class=\"col-md-4 text-right col-7\">\n                <h4 class=\"text-md barlow-bold\">\n                  {{ cartInfo.tax | currency: currencyCode:\"symbol\":\"1.2-2\" }}\n                </h4>\n              </div>\n            </div>\n            <div class=\"row\" *ngIf=\"cartInfo.couponCode\">\n              <div class=\"col-md-8 col-5\">\n                <h6 class=\"text-md barlow-regular\">\n                  {{ \"DISCOUNT\" | translate }}:\n                </h6>\n              </div>\n              <div class=\"col-md-4 text-right col-7\">\n                <h4 class=\"text-md barlow-bold\">\n                  {{\n                    cartInfo.couponAmount\n                      | currency: currencyCode:\"symbol\":\"1.2-2\"\n                  }}\n                </h4>\n              </div>\n            </div>\n            <div class=\"row\" *ngIf=\"cartInfo.deliveryAddress\">\n              <div class=\"col-md-8 col-5\">\n                <h6 class=\"text-md barlow-regular\">\n                  {{ \"DELIVERY_CHARGE\" | translate }}:\n                </h6>\n              </div>\n              <div class=\"col-md-4 text-right col-7\">\n                <h4 class=\"text-md barlow-bold\">\n                  <ng-container *ngIf=\"cartInfo.deliveryCharges > 0\">\n                    {{\n                      cartInfo.deliveryCharges\n                        | currency: currencyCode:\"symbol\":\"1.2-2\"\n                    }}\n                  </ng-container>\n                  <ng-container *ngIf=\"cartInfo.deliveryCharges == 0\">\n                    {{ \"FREE\" | translate }}\n                  </ng-container>\n                </h4>\n              </div>\n            </div>\n            <hr />\n            <div *ngIf=\"!cartInfo.couponCode\">\n              <h6 class=\"text-normal barlow-medium main-title\">\n                {{ \"ADD_COUPON\" | translate }}\n              </h6>\n\n              <br />\n              <input\n                type=\"text\"\n                class=\"form-control text-center\"\n                placeholder=\"{{ 'ENTER_COUPON_CODE' | translate }}\"\n                [(ngModel)]=\"couponCode\"\n              />\n              <br />\n\n              <button\n                type=\"button\"\n                [disabled]=\"couponCode.length === 0\"\n                class=\"btn apply-btn bg-color-primary w-100 barlow-regular color-b\"\n                (click)=\"applyCoupon()\"\n              >\n                {{ \"APPLY\" | translate }}\n              </button>\n            </div>\n            <button\n              type=\"button\"\n              class=\"btn apply-btn bg-color-primary w-100 barlow-regular color-b\"\n              (click)=\"removeCoupon()\"\n              *ngIf=\"cartInfo.couponCode\"\n            >\n              {{ \"REMOVE_COUPON\" | translate }}\n            </button>\n            <br /><br /><br />\n            <br /><br /><br />\n            <hr />\n\n            <div class=\"row\">\n              <div class=\"col-md-4 col-4\">\n                <h6 class=\"text-md barlow-regular\">\n                  {{ \"TOTAL\" | translate }}\n                </h6>\n              </div>\n              <div class=\"col-md-8 col-8 text-right\">\n                <h4 class=\"h1sm barlow-medium word-b\">\n                  {{\n                    cartInfo.grandTotal\n                      | currency: currencyCode:\"symbol\":\"1.2-2\"\n                  }}\n                </h4>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-4 col-lg-5 col-xl-4\">\n          <h5 class=\"text-normal barlow-medium color-b mt-4 pb-2 main-title\">\n            {{ \"CHOOSE_DELIVERY_ADDRESS\" | translate }}\n            <span class=\"color-red\">*</span>\n          </h5>\n          <div class=\"delievry-address radius-10 bg-white p-3\">\n            <h6\n              class=\"text-center color-green\"\n              *ngIf=\"addressList.length === 0\"\n            >\n              {{ \"NO_ADDRESS\" | translate }}\n            </h6>\n            <ng-container *ngFor=\"let address of addressList; index as a\">\n              <div class=\"custom-control custom-radio\">\n                <input\n                  type=\"radio\"\n                  [id]=\"address._id\"\n                  [name]=\"address._id\"\n                  (change)=\"getDeliveryCharges(address, $event)\"\n                  [checked]=\"selectedAddress === address._id\"\n                  class=\"custom-control-input\"\n                />\n                <label\n                  class=\"custom-control-label barlow-regular color-b-c text-md pointer\"\n                  [for]=\"address._id\"\n                  >{{ address.flatNo }},{{ address.apartmentName }},{{\n                    address.address\n                  }}</label\n                >\n              </div>\n              <div class=\"row text-center\">\n                <div class=\"col-md-5 offset-md-1 col-6\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-dark w-100 mt-4\"\n                    (click)=\"openAddressModal(addressModal, address._id)\"\n                  >\n                    {{ \"EDIT\" | translate }}\n                  </button>\n                </div>\n                <div\n                  class=\"col-md-5 col-6\"\n                  *ngIf=\"selectedAddress !== address._id\"\n                >\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-dark w-100 mt-4\"\n                    (click)=\"deleteAddress(address._id, a)\"\n                  >\n                    {{ \"DELETE\" | translate }}\n                  </button>\n                </div>\n              </div>\n              <br />\n            </ng-container>\n            <br />\n            <hr *ngIf=\"addressList.length > 0\" />\n            <br />\n            <br /><br /><br />\n            <hr />\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-dark w-100 mb-4 barlow-regular color-b-b\"\n              (click)=\"openAddressModal(addressModal, null)\"\n            >\n              {{ \"ADD_NEW_ADDRESS\" | translate }}\n            </button>\n          </div>\n        </div>\n\n        <div class=\"col-md-3 col-lg-5 col-xl-3\">\n          <h5 class=\"text-normal barlow-medium color-b mt-4 pb-2 main-title\">\n            {{ \"CHOOSE_DELIVERY_SLOT\" | translate }}\n            <span class=\"color-red\">*</span>\n          </h5>\n          <div class=\"cart-summary radius-10 bg-white p-3\">\n            <div class=\"row\">\n              <div class=\"col-md-12 text-center\">\n                <select\n                  class=\"form-control\"\n                  name=\"workingHours\"\n                  ngModel\n                  (change)=\"showTimeSchedule(workingHour.value)\"\n                  #workingHour\n                >\n                  <option disabled translate>CHOOSE_DELIVERY_SLOT</option>\n                  <option *ngFor=\"let day of workingHours\" [value]=\"day._id\">\n                    {{ day.date }}\n                  </option>\n                </select>\n              </div>\n            </div>\n            <small\n              class=\"color-green\"\n              *ngIf=\"deliveryDate && timeSchedulesSlots.length === 0\"\n              >{{ \"NO_SLOTS\" | translate }}&nbsp;{{ deliveryDate }} .</small\n            >\n            <ng-container *ngIf=\"timeSchedulesSlots.length > 0\">\n              <ng-container *ngFor=\"let slot of timeSchedulesSlots\">\n                <div class=\"row mt-3\">\n                  <div class=\"col-md-8 col-8 mt-2\">\n                    <h6 class=\"text-14 barlow-regular\">\n                      {{ slot.slot }}\n                    </h6>\n                  </div>\n                  <div class=\"col-md-4 text-right col-4\">\n                    <div class=\"custom-control custom-radio\">\n                      <input\n                        type=\"radio\"\n                        [id]=\"slot._id\"\n                        [value]=\"slot._id\"\n                        (change)=\"setSelectedDeliverySlot()\"\n                        class=\"custom-control-input\"\n                        [(ngModel)]=\"deliveryTime\"\n                      />\n                      <label\n                        class=\"custom-control-label barlow-regular color-b-c text-md pointer\"\n                        [for]=\"slot._id\"\n                      ></label>\n                    </div>\n                  </div>\n                </div>\n              </ng-container>\n            </ng-container>\n            <hr />\n            <button\n              type=\"button\"\n              class=\"btn apply-btn bg-color-primary w-100 barlow-regular color-b\"\n              (click)=\"proceedToPaymentPage()\"\n            >\n              {{ \"PROCEED\" | translate }}\n            </button>\n\n            <br />\n          </div>\n        </div>\n      </div>\n      <app-footer></app-footer>\n    </div>\n  </div>\n</div>\n<ng-template #addressModal let-modal>\n  <br /><br /><br /><br />\n\n  <div class=\"modal-body\">\n    <div class=\"row add-profile\">\n      <div class=\"col-md-12\">\n        <h6 class=\"barlow-medium color-b-c text-big text-center main-title\">\n          {{\n            addressId\n              ? (\"UPDATE_DELIVERY_ADDRESS\" | translate)\n              : (\"ADD_NEW_DELIVERY_ADDRESS\" | translate)\n          }}\n        </h6>\n        <p class=\"text-info mt-2\" *ngIf=\"showMap\">\n          {{ \"MARKER_NOTE\" | translate }}\n        </p>\n        <agm-map\n          [latitude]=\"location.lat\"\n          [longitude]=\"location.lng\"\n          [zoom]=\"17\"\n          [mapDraggable]=\"true\"\n          *ngIf=\"showMap\"\n        >\n          <agm-marker\n            [latitude]=\"location.lat\"\n            [longitude]=\"location.lng\"\n            (dragEnd)=\"markerDraggedEvent($event.coords)\"\n            [markerDraggable]=\"true\"\n          >\n            <agm-info-window>\n              {{ mapAddress }}\n            </agm-info-window>\n          </agm-marker>\n        </agm-map>\n        <p class=\"mt-3\" *ngIf=\"showMap\">{{ mapAddress }}</p>\n        <form\n          (ngSubmit)=\"geoCodeAddress()\"\n          #addressForm=\"ngForm\"\n          class=\"mx-4 mt-5\"\n          *ngIf=\"!showMap\"\n        >\n          <div class=\"row form-group\">\n            <input\n              type=\"text\"\n              name=\"address\"\n              class=\"form-control\"\n              [(ngModel)]=\"addressData.address\"\n              placeholder=\"{{ 'ENTER_YOUR_ADDRESS' | translate }}\"\n              required\n            />\n            <p\n              class=\"showPointer text-info\"\n              (click)=\"setMapShowStatus()\"\n              *ngIf=\"!hideEdit\"\n            >\n              {{ \"EDIT\" | translate }}\n            </p>\n          </div>\n          <div class=\"row form-group\">\n            <input\n              type=\"text\"\n              name=\"flatNo\"\n              class=\"form-control\"\n              [(ngModel)]=\"addressData.flatNo\"\n              placeholder=\"{{ 'ENTER_YOUR_FLAT_NUMBER' | translate }}\"\n              required\n            />\n          </div>\n          <div class=\"row form-group\">\n            <input\n              type=\"text\"\n              name=\"apartmentName\"\n              class=\"form-control\"\n              [(ngModel)]=\"addressData.apartmentName\"\n              placeholder=\"{{ 'ENTER_YOUR_APARTMENT_NAME' | translate }}\"\n              required\n            />\n          </div>\n          <div class=\"row form-group\">\n            <input\n              type=\"text\"\n              name=\"landmark\"\n              class=\"form-control\"\n              [(ngModel)]=\"addressData.landmark\"\n              placeholder=\"{{ 'ENTER_THE_NEAREST_LANDMARK' | translate }}\"\n              required\n            />\n          </div>\n          <div class=\"row form-group\">\n            <input\n              type=\"text\"\n              name=\"postalCode\"\n              class=\"form-control\"\n              [(ngModel)]=\"addressData.postalCode\"\n              placeholder=\"{{ 'ENTER_YOUR_POSTAL_CODE' | translate }}\"\n              required\n            />\n          </div>\n          <div class=\"row form-group mt-3\">\n            <input\n              type=\"text\"\n              name=\"contactNumber\"\n              class=\"form-control\"\n              [(ngModel)]=\"addressData.mobileNumber\"\n              placeholder=\"{{ 'ENTER_YOUR_CONTACT_NUMBER' | translate }}\"\n              required\n            />\n          </div>\n\n          <div class=\"row\">\n            <div\n              class=\"custom-control custom-radio ml-5\"\n              *ngFor=\"let type of addressTypes\"\n            >\n              <input\n                type=\"radio\"\n                [id]=\"type\"\n                name=\"home\"\n                [(ngModel)]=\"addressData.addressType\"\n                [value]=\"type\"\n                class=\"custom-control-input\"\n              />\n              <label\n                class=\"custom-control-label barlow-regular color-b-c text-md\"\n                [for]=\"type\"\n                >{{ type }}\n              </label>\n            </div>\n          </div>\n          <div class=\"row mt-3\">\n            <div class=\"col-md-6 mb-0\">\n              <button\n                class=\"btn btn-outline-dark w-100 barlow-medium text-smaller mb-3\"\n                type=\"button\"\n                (click)=\"closeAddressModal()\"\n              >\n                {{ \"CANCEL\" | translate }}\n              </button>\n            </div>\n            <div class=\"col-md-6\" *ngIf=\"!showMap\">\n              <button\n                class=\"btn btn-warning w-100 barlow-medium text-smaller\"\n                type=\"submit\"\n                [disabled]=\"addressForm.invalid\"\n              >\n                {{ \"SUBMIT\" | translate }}\n              </button>\n            </div>\n          </div>\n        </form>\n        <div class=\"row mt-3\" *ngIf=\"showMap\">\n          <div class=\"col-md-6 mb-0\" *ngIf=\"addressId\">\n            <button\n              class=\"btn btn-outline-dark w-100 barlow-medium text-smaller mb-3\"\n              type=\"button\"\n              (click)=\"showMap = !showMap; hideEdit = false\"\n            >\n              {{ \"CANCEL\" | translate }}\n            </button>\n          </div>\n          <div class=\"col-md-6 float-right\">\n            <button\n              class=\"btn btn-warning w-100 barlow-medium text-smaller\"\n              type=\"button\"\n              (click)=\"setMapAddress()\"\n            >\n              {{ \"PROCEED\" | translate }}\n            </button>\n          </div>\n          <div class=\"col-md-6 float-right\">\n            <button\n              class=\"btn btn-warning w-100 barlow-medium text-smaller\"\n              type=\"button\"\n              (click)=\"closeAddressModal()\"\n            >\n              {{ \"CANCEL\" | translate }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { Injectable } from \"@angular/core\";\nimport { CrudService } from \"../../../services/crud.service\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { AddressModel, PlaceOrderModel } from \"../../models/order.model\";\nimport { CartModel } from \"../../models/cart.model\";\nimport { NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckoutService {\n  private paymentMethodSubject = new BehaviorSubject<Array<string>>([]);     // contains payment method settings set by admin\n  public paymentMethod$ = this.paymentMethodSubject.asObservable();       // subscribes to the latest payment method settings\n\n  public walletAmountSubject = new BehaviorSubject<number>(0);      // contains user's wallet balance\n  public wallet$ = this.walletAmountSubject.asObservable();     // subscribes to latest wallet balance\n\n  private storeDeliverySubject = new BehaviorSubject<Array<number>>(null);     // contains stores location co-ordinates\n  public store$ = this.storeDeliverySubject.asObservable();     // subscribes to store subject\n  constructor(private crud: CrudService) {\n  }\n\n  // get's payment method settings\n  public getPaymentMethodSettings(): void {\n    this.crud.getData('/settings/details').subscribe((res: any) => {\n      this.paymentMethodSubject.next(res.response_data.paymentMethod);\n    });\n  }\n\n  // set's users wallet balance\n  public setWalletBalance(walletAmount: number): void {\n    this.walletAmountSubject.next(walletAmount);\n  }\n\n  // get's user's address\n  public getAddress(): Observable<any> {\n    return this.crud.getData('/address/list');\n  }\n\n  // get's address type list\n  public getAddressTypeList(): Observable<any> {\n    return this.crud.getData('/address/type/list');\n  }\n\n  // saves users address\n  public saveAddress(address: AddressModel): Observable<any> {\n    return this.crud.saveData('/address/create', address);\n  }\n\n  // updates users address\n  public updateAddress(addressId: string, addressInfo: AddressModel): Observable<any> {\n    return this.crud.updateData(`/address/update/${addressId}`, addressInfo);\n  }\n\n  // deletes address\n  public deleteAddress(addressId: string): Observable<any> {\n    return this.crud.deleteData(`/address/delete/${addressId}`);\n  }\n\n  // sends selected address to calculate delivery charges\n  public calculateDeliveryCharges(addressData): Observable<any> {\n    return this.crud.saveData('/carts/update-address', addressData);\n  }\n\n  // sends time and date timestamp to get store working hours\n  public getWorkingHourSlots(time: string, timeStamp: number): Observable<any> {\n    return this.crud.getData(`/settings/delivery-time-slots`);\n  }\n\n  // set's stores location info\n  public setStoreLocationInfo(data: Array<number>): void {\n    this.storeDeliverySubject.next(data);\n  }\n\n  // prepares order data\n  public prepareOrderData(cartId: string, deliveryTime: string): PlaceOrderModel {\n    return {\n      deliverySlotId: deliveryTime,\n      paymentType: '',\n      orderFrom: 'WEB_APP',\n      paymentId: ''\n    };\n  }\n\n  // called when user selects pay by wallet option\n  public applyWalletPayment(): Observable<any> {\n    return this.crud.saveData('/carts/apply-wallet', undefined);\n  }\n\n  // removes wallet payment\n  public removeWalletPayment(): Observable<any> {\n    return this.crud.deleteData('/carts/remove-wallet');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HelperService } from \"../../../services/helper.service\";\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  public year: number = null;     // contains current year\n  public storeName: string;\n\n\n  constructor(private helperService: HelperService) {\n    this.year = new Date().getFullYear();\n  }\n\n  ngOnInit(): void {\n    this.helperService.businessInfo$.subscribe(businessInfo => {\n      if (businessInfo) {\n        this.storeName = businessInfo.storeName;\n      }\n    })\n  }\n\n}\n","<br/><br/>\n<div class=\"row footer-section\">\n  <div class=\"col-md-12\">\n    <div class=\"row\">\n      <div class=\"col-md-6 col-6\">\n        <h6 class=\"smaller-text barlow-regular color-b-c m-0 footer-title\">\n          {{ \"COPYRIGHT\" | translate }}@{{ year }} {{ storeName }}\n        </h6>\n      </div>\n      <div class=\"pointer text-right col-md-4 col-4\">\n        <a [routerLink]=\"['/about-us']\" class=\"links smaller-text barlow-regular color-b-c m-0 footer-title\" translate>\n          ABOUT_US\n        </a>\n        <a [routerLink]=\"['/terms-and-conditions']\" class=\"links smaller-text barlow-regular color-b-c m-0 footer-title\"\n           translate>\n          TERMS_CONDITIONS\n        </a>\n        <a [routerLink]=\"['/privacy-policy']\" class=\"links smaller-text barlow-regular color-b-c m-0 footer-title\"\n           translate>\n          PRIVACY_POLICY\n        </a>\n      </div>\n      <div class=\"col-md-2\"></div>\n    </div>\n  </div>\n</div>\n","import { Component, Output, EventEmitter, OnInit } from '@angular/core';\nimport { UserInfoModel } from '../../models/auth.model';\nimport { HelperService } from '../../../services/helper.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  keyframes,\n} from '@angular/animations';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Store } from '@ngrx/store';\nimport { CartState } from '../../store/cart.reducer';\nimport { AuthGuardService } from '../../../services/auth-guard.service';\nimport { LanguagesModel } from \"../../models/category.model\";\nimport { ProfileService } from \"../profile/profile.service\";\n\n@Component({\n  selector: 'app-header-component',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  animations: [\n    trigger('sideMenuAnimation', [\n      state(\n        'hide',\n        style({\n          transform: 'translateX(0)',\n        })\n      ),\n      state(\n        'show',\n        style({\n          transform: 'translateX(-100%)',\n        })\n      ),\n      transition('hide <=> show', animate('.6s ease')),\n    ]),\n  ],\n})\nexport class HeaderComponent implements OnInit {\n  public userInfo: UserInfoModel; // contains information about logged in user\n  public defaultProfilePic: string = 'assets/images/default_user.png';        // user default profile picture\n  @Output() directionEvent = new EventEmitter<Object>();\n  public languageCode: string = 'en'; // contains selected language code\n\n  public sideMenuState: string = 'show';\n  public cartLength: number = 0; // contains number of items in cart\n  public cityName: string = localStorage.getItem('city'); // contains user's city name\n  public isLoggedIn: boolean = false; // set to true if user is logged in\n  public languages: Array<LanguagesModel> = [];      // contains list of languages added from CMS\n\n  constructor(\n    private helperService: HelperService,\n    private translate: TranslateService,\n    private store: Store<CartState>,\n    private auth: AuthGuardService,\n    private profileService: ProfileService\n  ) {\n    if (localStorage.getItem('languageList')) {\n      this.languages = JSON.parse(atob(localStorage.getItem('languageList')))\n    }\n    this.getUserInformation();\n    this.languageCode = localStorage.getItem('language');\n    if (!this.languageCode) {\n      const defaultLangInfo = this.languages.find(language => language.isDefault === 1);\n      this.languageCode = defaultLangInfo.languageCode;\n    }\n    this.ChangeLanguage();\n    this.store.select('cartInfo').subscribe((cart) => {\n      if (cart) {\n        this.cartLength = cart.products.length;\n      }\n    });\n    this.auth.obs$.subscribe((status) => {\n      this.isLoggedIn = status;\n    });\n  }\n\n  ngOnInit(): void {\n    this.helperService.profilePic$.subscribe((url) => {\n      if (url) {\n        this.userInfo.imageUrl = url;\n      }\n    });\n  }\n\n  // sends request to get logged in user's information\n  private getUserInformation(): void {\n    this.helperService.user$.subscribe((data) => {\n      if (data) {\n        this.userInfo = data;\n      }\n    });\n  }\n\n  // sets selected language as default language\n  public ChangeLanguage(): void {\n    const defaultLang = this.translate.getDefaultLang()\n    if (defaultLang !== this.languageCode) {\n      localStorage.setItem('language', this.languageCode);\n      this.translate.use(this.languageCode);\n      this.translate.setDefaultLang(this.languageCode);\n      if (localStorage.getItem('token')) {\n        const body = {\n          language: this.languageCode\n        }\n        this.profileService.setDefaultLanguage(body).subscribe((res: any) => {\n          console.log(\"LANG CHANGED\");\n        });\n      }\n    }\n  }\n\n  mobMenuToggle() {\n    this.sideMenuState = this.sideMenuState === 'hide' ? 'show' : 'hide';\n  }\n}\n","<div class=\"container-fluid header-section\">\n  <div class=\"\">\n    <div class=\"row\">\n      <div class=\"col-md-12 header-block\">\n        <div class=\"row\">\n          <div class=\"col-md-2 pointer\" [routerLink]=\"['/home']\">\n            <img src=\"assets/images/webapp.png\" class=\"logo-top img-fluid\"/>\n          </div>\n          <div class=\"col-md-2 lang-select\" *ngIf=\"isLoggedIn\">\n            <select class=\"form-control w-100 barlow-medium color-b-b\" [(ngModel)]=\"languageCode\"\n                    (change)=\"ChangeLanguage()\">\n              <option disabled translate>CHANGE_LANG</option>\n              <option *ngFor=\"let language of languages\"\n                      [value]=\"language.languageCode\">{{language.languageName}}</option>\n            </select>\n          </div>\n\n          <div class=\"col-md-2\">\n            <a routerLink=\"/search\"><img class=\"nav-search\" src=\"assets/icons/search.svg\"/></a>\n          </div>\n          <div class=\"col-md-5 text-right\">\n            <h6 class=\"barlow-semibold h1sm\">{{ cityName ? cityName : \"\" }}</h6>\n          </div>\n<!--          <div class=\"col-md-1 text-center col-3\" *ngIf=\"isLoggedIn && userInfo && userInfo.imageUrl\"-->\n<!--               [routerLink]=\"['/profile']\">-->\n<!--            <div class=\"profile showPointer\">-->\n<!--              <img [src]=\"userInfo && userInfo.imageUrl ? userInfo.imageUrl : defaultProfilePic\" class=\"user-image\"-->\n<!--                   (error)=\"userInfo.imageUrl = defaultProfilePic\"/>-->\n<!--            </div>-->\n<!--          </div>-->\n          <div class=\"col-md-1 text-right col-3 cart-block\" *ngIf=\"isLoggedIn\">\n            <div class=\"showPointer\" routerLink=\"/cart\">\n              <img src=\"assets/icons/cart.svg\" class=\"cart-img\"/>\n              <span class=\"badge badge-pill badge-dark cart-items\" *ngIf=\"cartLength > 0\">{{ cartLength }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {OwlOptions} from 'ngx-owl-carousel-o';\nimport {HelperService} from \"../../../services/helper.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  customOptions: OwlOptions = {\n    loop: true,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 700,\n    navText: ['', ''],\n    responsive: {\n      0: {\n        items: 1\n      },\n      400: {\n        items: 2\n      },\n      740: {\n        items: 3\n      },\n      940: {\n        items: 10\n      }\n    },\n    nav: true\n  };\n\n  limitedOffers: OwlOptions = {\n    loop: true,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 700,\n    navText: ['', ''],\n    responsive: {\n      0: {\n        items: 1\n      },\n      400: {\n        items: 2\n      },\n      740: {\n        items: 3\n      },\n      940: {\n        items: 6\n      }\n    },\n    nav: true\n  };\n\n  constructor(private helperService: HelperService) {\n  }\n\n  ngOnInit(): void {\n    this.helperService.scrollTop();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-location',\n  templateUrl: './location.component.html',\n  styleUrls: ['./location.component.scss']\n})\nexport class LocationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"add-address bg-color-lightblue\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-11\">\n        <img src=\"assets/icons/logo.png\" class=\"logo\" />\n      </div>\n    </div>\n    <div class=\"row mb-5 pb-5\">\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-9 offset-md-1\">\n            <h6 class=\"text-normal barlow-bold\">Current Location</h6>\n\n            <div class=\"bg-white radius-8 p-5 map-block relative\"></div>\n\n            <form class=\"form\">\n              <div class=\"form-group relative\">\n                <input\n                  type=\"paswd\"\n                  class=\"form-control\"\n                  id=\"exampleInputpasswd\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Search Location\"\n                />\n\n                <img src=\"assets/icons/search.png\" class=\"absolute search\" />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-3 mt-4 pt-2\">\n        <div class=\"address-block radius-8 bg-white\">\n          <div class=\"bg-color-b current-location mb-3\">\n            <h6 class=\"barlow-regular text-smaller color-w\">\n              <img src=\"assets/icons/white-map.png\" /> Current location\n            </h6>\n            <h6 class=\"text-normal barlow-medium color-w\">\n              22nd main road, Agara, HSR ...\n            </h6>\n          </div>\n          <div class=\"p-4\">\n            <form>\n              <div class=\"address-form\">\n                <label for=\"exampleInputEmail1\">House/Flat/Block Number </label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  aria-describedby=\"emailHelp\"\n                />\n              </div>\n\n              <div class=\"address-form mt-4\">\n                <label for=\"exampleInputEmail1\">Landmark </label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  aria-describedby=\"emailHelp\"\n                />\n              </div>\n            </form>\n\n            <button\n              class=\"btn btn-outline-dark barlow-regular text-normal w-100 mt-4\"\n              type=\"button\"\n            >\n              Cancel\n            </button>\n\n            <button\n              class=\"btn btn-warning barlow-regular text-normal w-100 mt-4\"\n              type=\"button\"\n            >\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { OwlOptions } from 'ngx-owl-carousel-o';\nimport { Observable } from 'rxjs';\nimport {\n  BannerModel,\n  CategoryModel,\n  DealsModel,\n  DealTypeEnum,\n  ProductsModel,\n} from '../../models/category.model';\nimport { Router } from '@angular/router';\nimport { HelperService } from '../../../services/helper.service';\nimport { environment } from '../../../../environments/environment';\nimport { MyStoreService } from './my-store.service';\n\n@Component({\n  selector: 'app-my-store',\n  templateUrl: './my-store.component.html',\n  styleUrls: ['./my-store.component.scss'],\n})\nexport class MyStoreComponent implements OnInit {\n  ratingElement = {\n    readonly: true,\n    checkedcolor: 'green',\n    uncheckedcolor: 'grey',\n    value: 2.3,\n    size: 20,\n    totalstars: 5,\n  };\n\n  customOptions: OwlOptions = {\n    loop: true,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    dots: false,\n    autoplay: true,\n    navSpeed: 700,\n    navText: ['', ''],\n    responsive: {\n      0: {\n        items: 3,\n      },\n      400: {\n        items: 5,\n      },\n      740: {\n        items: 4,\n      },\n      940: {\n        items: 10,\n      },\n    },\n    nav: true,\n  };\n\n  limitedOffers: OwlOptions = {\n    loop: true,\n    autoplay: false,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 850,\n    navText: ['', ''],\n    responsive: {\n      0: {\n        items: 2,\n      },\n      400: {\n        items: 3,\n      },\n      740: {\n        items: 3,\n      },\n      940: {\n        items: 8,\n      },\n    },\n    nav: true,\n  };\n\n  topdeals: OwlOptions = {\n    loop: true,\n    autoplay: true,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 700,\n    navText: ['', ''],\n    responsive: {\n      0: {\n        items: 2,\n      },\n      400: {\n        items: 5,\n      },\n      740: {\n        items: 5,\n      },\n      940: {\n        items: 5,\n      },\n    },\n    nav: true,\n  };\n\n  banner: OwlOptions = {\n    loop: true,\n    autoplay: true,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 700,\n    // autoplay: true,\n\n    navText: ['', ''],\n    responsive: {\n      0: {\n        items: 1,\n      },\n      400: {\n        items: 1,\n      },\n      740: {\n        items: 1,\n      },\n      940: {\n        items: 1,\n      },\n    },\n    nav: true,\n  };\n\n  public categoryList: Array<CategoryModel> = []; // contains list of categories\n  public productsList: Array<ProductsModel> = []; // contains list of products\n  public dealsList: Array<DealsModel> = []; // contains list of deals\n  public currencyCode: string = null; // contains currency code\n  public bannerList: Array<BannerModel> = []; // contains the list of banners\n  public categoryImageUrl: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-73`; // contains optimized category image url\n  public productImageUrl: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-192`; // contains optimized product image url\n  public dealImageUrl: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-181`; // contains optimized deal image url\n  public bannerImageUrl: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-237`; // contains optimized banner image url\n\n  constructor(\n    private myStoreService: MyStoreService,\n    private router: Router,\n    private helperService: HelperService\n  ) {\n    this.helperService.currency$.subscribe((currencyCode) => {\n      this.currencyCode = currencyCode;\n    });\n    this.getBannerList();\n    this.getHomePageData();\n  }\n\n  // get's banners list\n  private getBannerList(): void {\n    const banner$ = this.myStoreService.getBannerList();\n    banner$.subscribe((res: any) => {\n      this.bannerList = res.response_data;\n    });\n  }\n\n  ngOnInit(): void {\n    this.helperService.scrollTop();\n  }\n\n  // get's list of category. shows only 10 categories\n  private getHomePageData(): void {\n    const category$: Observable<Array<\n      CategoryModel\n    >> = this.myStoreService.getHomePageData();\n    category$.subscribe((res: any) => {\n      this.categoryList = res.response_data.categories;\n      this.productsList = res.response_data.products;\n      this.dealsList = res.response_data.topDeals;\n      this.calculateDealAmount();\n    });\n  }\n\n  // calculates deal amount\n  private calculateDealAmount(): void {\n    this.productsList.forEach((product) => {\n      if (product.isDealAvailable) {\n        product.variant.forEach((variant) => {\n          variant.discountAmount =\n            Number(variant.price) -\n            Number(variant.price) * (product.dealPercent / 100);\n        });\n      }\n    });\n  }\n\n  // navigate to product of category based on deal type\n  public checkDealTypeAndNavigate(deal: DealsModel): void {\n    if (deal.dealType === DealTypeEnum.PRODUCT) {\n      this.router.navigate(['product-details/', deal.productId]);\n    } else {\n      this.router.navigate(['products/by/category/', deal.categoryId]);\n    }\n  }\n}\n","<div class=\"container-fluid color-lightblue my-store\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n\n    <div class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\">\n      <div class=\"app-bar\"></div>\n\n      <br />\n      <br />\n      <br />\n      <br />\n\n      <div class=\"banner-section\">\n        <owl-carousel-o [options]=\"banner\">\n          <ng-container *ngFor=\"let banner of bannerList\">\n            <ng-template carouselSlide>\n              <div class=\"banner-block bg-color-primary radius-10 pointer\"\n                [routerLink]=\"[banner.bannerType === 'CATEGORY' ? '/products/by/category/' + banner.categoryId : '/product-details/' + banner.productId]\">\n                <div class=\"row\">\n                  <div class=\"col-md-7 col-6 title-section\">\n                    <h4 class=\"title color-w barlow-bold pt-4 pl-5\">\n                      {{\n                      banner.title.length > 30\n                        ? (banner.title | slice: 0:30) + \"...\"\n                        : banner.title\n                      }}\n                    </h4>\n                    <h6 class=\"barlow-regular sub-title pt-2 pl-5\">\n                      {{ \"ORDER_NOW\" | translate }}\n                      <i class=\"fa fa-caret-right\"></i>\n                    </h6>\n                  </div>\n                  <div class=\"col-md-3 offset-md-2 col-6 circular-banner-img\">\n                    <ng-container *ngIf=\"banner.filePath !== undefined\">\n                      <img [src]=\"bannerImageUrl + banner.filePath\" class=\"banner-img\" />\n                    </ng-container>\n                    <ng-container *ngIf=\"banner.filePath === undefined\">\n                      <img [src]=\"banner.imageURL\" class=\"banner-img\" />\n                    </ng-container>\n                  </div>\n                </div>\n              </div>\n            </ng-template>\n          </ng-container>\n        </owl-carousel-o>\n      </div>\n\n      <div class=\"row mt-5\">\n        <div class=\"col-md-6 col-8\">\n          <h5 class=\"barlow-bold text-normal color-b main-title\">\n            {{ \"EXPLORE_BY_CATEGORIES\" | translate }}\n          </h5>\n        </div>\n\n        <div class=\"col-md-6 col-4\">\n          <div class=\"\" [routerLink]=\"['/categories']\">\n            <p class=\"pointer color-b-b barlow-bold text-normal text-right main-title\">\n              {{ \"VIEW_ALL\" | translate }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <ul class=\"category-lists\">\n        <li *ngFor=\"let category of categoryList\">\n          <div class=\"items\" [routerLink]=\"['/products/by/category/', category._id]\">\n            <div class=\"categories-block radius-8 p-3\">\n              <ng-container *ngIf=\"category.filePath !== undefined\">\n                <img [src]=\"categoryImageUrl + category.filePath\" class=\"cat-img\" />\n              </ng-container>\n              <ng-container *ngIf=\"category.filePath === undefined\">\n                <img [src]=\"category.imageUrl\" class=\"cat-img\" />\n              </ng-container>\n            </div>\n            <h6 class=\"color-b-e text-md barlow-medium pointer mt-2 category-name\">\n              {{\n              category.title.length > 20\n                ? (category.title | slice: 0:18) + \"...\"\n                : category.title\n              }}\n            </h6>\n          </div>\n        </li>\n      </ul>\n\n      <hr />\n      <br />\n      <div class=\"row\">\n        <div class=\"col-md-6 col-8\">\n          <h5 class=\"color-b barlow-bold text-normal main-title\">\n            {{ \"PRODUCTS\" | translate }}\n          </h5>\n        </div>\n        <div class=\"col-md-6 col-4\">\n          <div class=\"\" [routerLink]=\"['/products']\">\n            <p class=\"l pointer color-b-b barlow-bold text-normal text-right main-title\">\n              {{ \"VIEW_ALL\" | translate }}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"carosuel-list mt-2 pb-4\">\n        <owl-carousel-o [options]=\"limitedOffers\">\n          <ng-container *ngFor=\"let product of productsList\">\n            <ng-template carouselSlide>\n              <div class=\"products-block pointer\" [routerLink]=\"['/product-details/', product._id]\">\n                <ng-container>\n                  <img\n                  [src]=\"product.productImages && product.productImages.length > 0 ? (product.productImages[0].filePath ? productImageUrl+product.productImages[0].filePath : product.productImages[0].imageUrl) : (product.filePath ? productImageUrl+product.filePath : product.imageUrl)\" />\n                </ng-container>\n                <!-- <ng-container *ngIf=\"product.filePath === undefined\">\n                  <img [src]=\"product.imageUrl\" />\n                </ng-container> -->\n                <span class=\"badge badge-primary badge-offer barlow-medium\" *ngIf=\"product.isDealAvailable\">\n                  {{ product.dealPercent }}% {{\"OFF\" | translate}}</span>\n                <div class=\"row py-2 px-2\">\n                  <div class=\"col-md-12\">\n                    <h6 class=\"barlow-medium main-title\">\n                      {{\n                      product.title.length > 22\n                        ? (product.title | slice: 0:18) + \"...\"\n                        : product.title\n                      }}\n                    </h6>\n                    <ng-container *ngIf=\"!product.isDealAvailable\">\n                      <p class=\"color-green barlow-bold m-0 prod-price\">\n                        {{\n                        product.variant[0].price\n                          | currency: currencyCode:\"symbol\":\"1.2-2\"\n                        }}\n                      </p>\n                    </ng-container>\n                    <ng-container *ngIf=\"product.isDealAvailable\">\n                      <div class=\"row ml-0\">\n                        <p class=\"color-b-c barlow-bold m-0 prod-price\">\n                          <del>{{\n                            product.variant[0].price\n                              | currency: currencyCode:\"symbol\":\"1.2-2\"\n                            }}</del>\n                        </p>\n                        <p class=\"color-green barlow-bold m-0 ml-2\">\n                          {{\n                          product.variant[0].discountAmount\n                            | currency: currencyCode:\"symbol\":\"1.2-2\"\n                          }}\n                        </p>\n                      </div>\n                    </ng-container>\n                  </div>\n                  <div class=\"col-m-3 text-right mr-2 products-ratings barlow-medium text-small\"\n                    *ngIf=\"product.averageRating\">\n                    <strong>{{ product.averageRating.toFixed(1) }}\n                      <span><i class=\"fa fa-star\"></i></span></strong>\n                  </div>\n                </div>\n              </div>\n              <!-- <div class=\"product-outStock\">\n                <h6 class=\"barlow-semibold\">Oops! out of Stock</h6>\n              </div> -->\n            </ng-template>\n          </ng-container>\n        </owl-carousel-o>\n      </div>\n      <hr />\n      <br />\n\n      <div class=\"row\" *ngIf=\"dealsList.length > 0\">\n        <div class=\"col-md-6 col-8\">\n          <h5 class=\"barlow-bold text-normal color-b main-title\">\n            {{ \"TOP_DEALS\" | translate }}\n          </h5>\n        </div>\n        <div class=\"col-md-6 col-4\" [routerLink]=\"['/deals']\">\n          <p class=\"barlow-bold text-normal pointer color-b-b text-right main-title\">\n            {{ \"VIEW_ALL\" | translate }}\n          </p>\n        </div>\n      </div>\n\n      <div class=\"row topDeals-lists\" *ngIf=\"dealsList.length > 0\">\n        <div class=\"col-md-2 col-6\" *ngFor=\"let deal of dealsList\" (click)=\"checkDealTypeAndNavigate(deal)\">\n          <div class=\"top-dealsblock pointer\">\n            <ng-container *ngIf=\"deal.filePath !== undefined\">\n              <img [src]=\"dealImageUrl + deal.filePath\" class=\"relative\" />\n            </ng-container>\n            <ng-container *ngIf=\"deal.filePath === undefined\">\n              <img [src]=\"deal.imageUrl\" class=\"relative\" />\n            </ng-container>\n            <div class=\"overlay-top\">\n              <h5 class=\"color-w text-md barlow-semibold pointer top-deals-title\">\n                {{deal.title.length > 22 ? (deal.title | slice: 0:18) + \"...\" : deal.title}}\n              </h5>\n              <h6 class=\"text-left barlow-medium top-deals-off\">\n                {{ deal.dealPercent }}% off\n              </h6>\n            </div>\n          </div>\n        </div>\n      </div>\n      <app-footer></app-footer>\n    </div>\n  </div>\n</div>","import { Injectable } from \"@angular/core\";\nimport { CrudService } from \"../../../services/crud.service\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyStoreService {\n  constructor(private crud: CrudService) {\n  }\n\n  // get's banner list\n  public getBannerList(): Observable<any> {\n    return this.crud.getData(`/banners/list`);\n  }\n\n  // get's home page data\n  public getHomePageData(): Observable<any> {\n    return this.crud.getData(`/products/home?limit=10&page=0`);\n  }\n\n  // get's about us information\n  public getAboutInformation():Observable<any>{\n    return this.crud.getData('/pages/about-us')\n  }\n\n  // get's privacy policy information\n  public getPrivacyPolicyInformation():Observable<any>{\n    return this.crud.getData('/pages/privacy-policy')\n  }\n\n  // get's terms and condition information\n  public getTermsAndConditionInformation():Observable<any>{\n    return this.crud.getData('/pages/terms-and-conditions')\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgbModal, ModalDismissReasons, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { interval, Observable } from 'rxjs';\nimport { OrderListModel, OrderModel, RateModel } from '../../models/order.model';\nimport { CartModel } from '../../models/cart.model';\nimport { HelperService } from '../../../services/helper.service';\nimport * as moment from 'moment';\nimport { environment } from '../../../../environments/environment';\nimport { OrdersService } from \"./orders.service\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss'],\n})\nexport class OrdersComponent implements OnInit {\n  private readonly userId: string = null; // contains _id of logged in user\n  public rateData: RateModel; // contains order rate information\n  public orderList: Array<OrderModel> = []; // contains list of orders placed by users\n  private modalRef: NgbModalRef; // contains modal reference\n  public orderInfo: OrderListModel; // contains information about selected order\n  public orderDetailsInfoId: string = '';  // contains information of orderId\n  public currencyCode: string = null; // contains currency code\n  public deliveryDate: string = null; // contains order delivery date\n  public productImageUrl: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-176`; // contains optimized product image url\n  public productDetailImageUrl: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-100`; // contains optimized product image url\n  public isLoading: boolean = false;        // shows loader when true\n  constructor(\n    private modalService: NgbModal,\n    private helperService: HelperService,\n    private orderService: OrdersService,\n    private router: Router,\n  ) {\n    this.helperService.currency$.subscribe((currencyCode) => {\n      this.currencyCode = currencyCode;\n    });\n    this.userId = localStorage.getItem('id');\n    this.getUserOrders();\n  }\n\n  // sends request to get all user orders\n  private getUserOrders(): void {\n    const orders$: Observable<any> = this.orderService.getOrderHistory();\n    orders$.subscribe((res: any) => {\n      this.orderList = res.response_code === 200 ? res.response_data : [];\n    });\n  }\n\n  // opens order details modal\n  public openOrderDetailsModal(content, orderDetails: OrderModel): void {\n    this.orderService.getOrderDetails(orderDetails._id).subscribe((res: any) => {\n      this.orderDetailsInfoId = orderDetails._id\n      this.orderInfo = res.response_data.order;\n      this.orderInfo.cart = res.response_data.cart;\n      this.modalRef = this.modalService.open(content, {\n        ariaLabelledBy: 'modal-basic-title',\n        size: 'lg',\n        centered: true,\n      });\n      let cart = this.orderInfo.cart as CartModel;\n      this.orderInfo.cart = cart;\n    })\n\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  // cancels the order\n  public cancelOrder(): void {\n    this.orderService.cancelOrder(this.orderInfo._id).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.modalService.dismissAll();\n      this.getUserOrders();\n    });\n  }\n\n  //rate delivery boy\n  rateDeliveryBoy(orderId) {\n    this.router.navigate(['/rate-delivery/' + orderId])\n    this.modalService.dismissAll();\n\n  }\n\n  // open's product rate modal\n  public openRateModal(ratecontent, productId: string): void {\n    this.modalRef = this.modalService.open(ratecontent, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'sm',\n      centered: true,\n    });\n    this.rateData = {\n      description: '',\n      productId,\n      rate: 0,\n    };\n  }\n\n  //clear the popup\n  closeModal() {\n    this.modalService.dismissAll();\n    this.orderDetailsInfoId = '';\n  }\n\n  // sends request to rate product\n  public rateProduct(): void {\n    console.log(this.rateData);\n    this.isLoading = true;\n    this.orderService.rateproduct(this.rateData).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.closeRateModal();\n    })\n  }\n\n\n  //// closes rate modal\n  public closeRateModal() {\n    this.modalRef.close();\n    this.rateData = {\n      description: '',\n      rate: 0,\n      productId: null,\n    };\n  }\n\n\n\n  ngOnInit(): void {\n    this.helperService.scrollTop();\n    const getOrders = interval(10000);\n    getOrders.subscribe((res => {\n      if (this.orderDetailsInfoId != '') {\n        this.orderService.getOrderDetails(this.orderDetailsInfoId).subscribe((res: any) => {\n          this.orderInfo = res.response_data.order;\n          this.orderInfo.cart = res.response_data.cart;\n          let cart = this.orderInfo.cart as CartModel;\n          this.orderInfo.cart = cart;\n        })\n      }\n    }))\n\n  }\n\n}","<div class=\"container-fluid color-lightblue cart-page\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n\n    <div class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\">\n      <!-- <div class=\"app-bar\">\n        <app-header-component></app-header-component>\n      </div> -->\n      <!-- showing results -->\n\n      <br /><br />\n\n      <div class=\"bottom-border\">\n        <h5 class=\"barlow-bold text-normal color-b mt-5 pb-2 main-title\">\n          {{ \"MY_ORDERS\" | translate }}\n        </h5>\n      </div>\n      <h6 class=\"text-center color-green mt-3\" *ngIf=\"orderList.length === 0\">You have not placed any orders.</h6>\n      <ng-container>\n        <div class=\"row\" *ngFor=\"let order of orderList\">\n          <div class=\"col-md-12\">\n            <div class=\"bg-white radius-8 p-3 my-4\">\n              <div class=\"row\">\n                <div class=\"col-md-2 text-center col-6\">\n                  <div class=\"order-img pointer\">\n                    <ng-container *ngIf=\"order.product.imageUrl\">\n                      <img [src]=\"order.product.imageUrl\" class=\"img-fluid\" />\n                    </ng-container>\n                    <!--                    <ng-container *ngIf=\"!cart.filePath\">-->\n                    <!--                      <img [src]=\"cart.imageUrl\" class=\"img-fluid\"/>-->\n                    <!--                    </ng-container>-->\n                  </div>\n                </div>\n                <div class=\"col-md-6 col-6\">\n                  <h6 class=\"barlow-regular text-medium mb-1 pointer order-title\">\n                    {{order.totalProduct === 1 ? order.product.title : order.product.title + \" \" + (\"AND\" | translate) + \" \" + (order.totalProduct - 1) + \" \" + (\"ITEMS\" | translate)}}\n                  </h6>\n                  <h6 class=\"smaller-text color-b-c barlow-regular mt-2 small-title\">\n                    {{ \"ORDER_ID\" | translate }} &nbsp;\n                    <span> {{ order.orderID }}</span>\n                  </h6>\n                  <h4 class=\"barlow-bold h1sm my-1 prod-price\">\n                    {{order.usedWalletAmount && order.usedWalletAmount > 0 ? ((order.grandTotal + order.usedWalletAmount) | currency:currencyCode:'symbol':'1.2-2') : (order.grandTotal | currency: currencyCode:\"symbol\":\"1.2-2\")}}\n                  </h4>\n                  <h6 class=\"smaller-text color-b-c barlow-regular small-title\">\n                    {{ \"ORDERED\" | translate }}\n                    {{ order.createdAt | date: \"short\" }}\n                  </h6>\n                </div>\n                <div class=\"col-md-4\" *ngIf=\"order.orderStatus !== 'DELIVERED' && order.orderStatus !== 'CANCELLED'\">\n                  <div class=\"row\">\n                    <div class=\"col-md-1 col-1\">\n                      <div\n                        [ngClass]=\"order.orderStatus === 'CONFIRMED' || order.orderStatus === 'OUT_FOR_DELIVERY' ? 'dot' : 'grey-dot'\">\n                      </div>\n                      <div\n                        [ngClass]=\"order.orderStatus === 'CONFIRMED' || order.orderStatus === 'OUT_FOR_DELIVERY' ? 'vl' : 'grey-vl'\">\n                      </div>\n                    </div>\n                    &nbsp;\n                    <div class=\"col-md-6 col-8\">\n                      <h6 class=\"smaller-text barlow-regular\"\n                        [ngClass]=\"order.orderStatus === 'CONFIRMED' || order.orderStatus === 'OUT_FOR_DELIVERY' ? 'color-green' : 'color-grey'\">\n                        {{ \"ORDER_CONFIRMED\" | translate }}\n                      </h6>\n                      <h6 class=\"text-smaller barlow-regular color-grey\" *ngIf=\"order.orderStatus === 'CONFIRMED'\">\n                        <!--                        {{ order.updatedAt | date: \"medium\" }}-->\n                      </h6>\n                    </div>\n                    <div class=\"col-md-1 col-1\"\n                      *ngIf=\"order.orderStatus === 'CONFIRMED' || order.orderStatus === 'OUT_FOR_DELIVERY'\">\n                      <img src=\"assets/icons/confirm.png\" />\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-1 col-1\">\n                      <div [ngClass]=\"\n                          order.orderStatus === 'OUT_FOR_DELIVERY'\n                            ? 'dot'\n                            : 'grey-dot'\n                        \"></div>\n                      <div [ngClass]=\"\n                          order.orderStatus === 'OUT_FOR_DELIVERY'\n                            ? 'vl'\n                            : 'grey-vl'\n                        \"></div>\n                    </div>\n                    &nbsp;\n                    <div class=\"col-md-6 col-8\">\n                      <h6 class=\"smaller-text barlow-regular\" [ngClass]=\"\n                          order.orderStatus === 'OUT_FOR_DELIVERY'\n                            ? 'color-green'\n                            : 'color-grey'\n                        \">\n                        {{ \"OUT_FOR_DELIVERY\" | translate }}\n                      </h6>\n                    </div>\n                    <h6 class=\"text-smaller barlow-regular color-grey\" *ngIf=\"order.orderStatus === 'OUT_FOR_DELIVERY'\">\n                      <!--                      {{ order.updatedAt | date: \"medium\" }}-->\n                    </h6>\n                    <div class=\"col-md-1 col-1\" *ngIf=\"order.orderStatus === 'OUT_FOR_DELIVERY'\">\n                      <img src=\"assets/icons/confirm.png\" />\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-1 col-1\">\n                      <div class=\"grey-dot\"></div>\n                    </div>\n                    &nbsp;\n                    <div class=\"col-md-6 col-8\">\n                      <h6 class=\"color-rey smaller-text barlow-regular\">\n                        {{ \"ORDER_DELIVERED\" | translate }}\n                      </h6>\n                    </div>\n                    <!--                    <div class=\"col-md-1 col-1\" *ngIf=\"order.orderStatus === 'OUT_FOR_DELIVERY'\">-->\n                    <!--                      <img src=\"assets/icons/confirm.png\"/>-->\n                    <!--                    </div>-->\n                  </div>\n                </div>\n                <div class=\"col-md-2\">\n                  <button class=\"btn btn-warning w-100 barlow-medium text-smaller\" type=\"button\"\n                    (click)=\"openOrderDetailsModal(orderDetailsModal, order)\">\n                    {{ \"ORDER_DETAILS\" | translate }}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n      <br /><br />\n      <app-footer></app-footer>\n    </div>\n  </div>\n\n  <!-- REORDER MODAL -->\n  <ng-template #orderDetailsModal let-modal>\n\n    <div id=\"popup\">\n      <div class=\"modal-body\">\n        <div class=\"row close-button\">\n          <div class=\"col-md-6\">\n\n          </div>\n          <div class=\"col-md-6 close \">\n            <!-- <button type=\"button\" class=\"close-btn\" aria-label=\"Close\"></button>\n          <span aria-hidden=\"true\">&times;</span> -->\n\n            <button (click)=\" closeModal()\" type=\"button\" class=\"close\"><i class=\"fa fa-close\"></i></button>\n          </div>\n\n        </div>\n\n        <div class=\"row\">\n\n          <div class=\"col-md-6\">\n            <span>\n              <h6 class=\"barlow-regular text-normal mt-4 main-title\">\n                {{ \"ORDER_ID\" | translate }}\n                {{ orderInfo.orderID }}\n              </h6>\n              <h6 class=\"barlow-regular text-normal mt-3 main-title\">\n                {{ \"DATE\" | translate }}\n                {{ orderInfo.createdAt | date }}\n              </h6>\n              <h6 class=\"barlow-regular text-normal mt-3 main-title\">\n                {{ \"PAYMENT_TYPE\" | translate }}\n                {{ orderInfo.paymentType }}\n              </h6>\n              <h6 class=\"barlow-regular text-normal mt-3 main-title\">\n                {{ \"DELIVERY_DATE\" | translate }}:\n                {{ orderInfo.deliveryDate }}\n              </h6>\n              <h6 class=\"barlow-regular text-normal mt-3 main-title\">\n                {{ \"TIME_SLOT\" | translate }}:\n                {{ orderInfo.deliveryTime }}\n              </h6>\n              <h6 class=\"barlow-regular text-normal mt-3 main-title\">\n                {{ \"PAYMENT_STATUS\" | translate }}:\n                <span class=\"color-green\">\n                  {{orderInfo.paymentStatus | translate}}</span>\n              </h6>\n              <h6 class=\"barlow-regular text-normal mt-3 main-title\">\n                {{ \"ORDER_STATUS\" | translate }}\n                <span class=\"color-green\">\n                  {{ orderInfo.orderStatus | titlecase }}</span>\n              </h6>\n              <h6 class=\"barlow-regular text-normal mt-3 main-title\">\n                {{ \"ADDRESS\" | translate }}\n                {{ orderInfo.address.address | titlecase }}\n              </h6>\n              <button class=\"btn btn-warning w-100 barlow-medium text-smaller\" type=\"button\" (click)=\"cancelOrder()\"\n                *ngIf=\"orderInfo.orderStatus === 'PENDING' &&  orderInfo.paymentType !== 'WALLET'\">\n                {{ \"CANCEL_ORDER\" | translate }}\n              </button>\n              <button class=\"btn btn-warning w-100 barlow-medium text-smaller\" type=\"button\"\n                (click)=\"rateDeliveryBoy(orderInfo._id)\"\n                *ngIf=\"orderInfo.orderStatus === 'DELIVERED' && orderInfo.isDeliveryBoyRated===false\">\n                {{ \"RATE_DELIVERY_BOY\" | translate }}\n              </button>\n            </span>\n          </div>\n          <div class=\"col-md-6 all-products\">\n            <span>\n              <div class=\"row\" *ngFor=\"let cart of orderInfo.cart.products\">\n                <div class=\"col-md-4 col-5\">\n                  <ng-container *ngIf=\"cart.filePath\">\n                    <img [src]=\"productDetailImageUrl + cart.filePath\" class=\"img-fluid\" />\n                  </ng-container>\n                  <ng-container *ngIf=\"!cart.filePath\">\n                    <img [src]=\"cart.imageUrl\" class=\"img-fluid\" />\n                  </ng-container>\n                </div>\n\n                <div class=\"col-md-7 col-7\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <h6 class=\"barlow-semibold text-medium col-md-9 main-title\">\n                        {{ cart.productName }}\n                      </h6>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <button class=\"btn btn-warning w-100 barlow-medium text-smaller\" type=\"button\"\n                        (click)=\"openRateModal(ratecontent,cart.productId)\"\n                        *ngIf=\"orderInfo.orderStatus === 'DELIVERED' && cart['isRated'] === false\">\n                        {{ \"RATINGS\" | translate }}\n                      </button>\n                      <!-- <button class=\"btn btn-warning w-100 barlow-medium text-smaller\" type=\"button\"\n                        (click)=\"openRateModal(ratecontent,cart.productId)\"\n                        *ngIf=\"orderInfo.orderStatus === 'DELIVERED' && cart.isRated === true\">\n                        {{ \"UPDATE_RATINGS\" | translate }}\n                      </button> -->\n                      <div class=\"col-md-12\" *ngIf=\"cart['isRated'] ===true && orderInfo.orderStatus === 'DELIVERED'\">\n                        <ngb-rating [(ngModel)]=\"cart.rating\" [max]=\"5\"\n                          (click)=\"openRateModal(ratecontent,cart.productId)\"></ngb-rating>\n                      </div>\n                    </div>\n                  </div>\n                  <h6 class=\"text-small color-b-c barlow-regular prod-price\">\n                    {{ cart.unit }} ({{ cart.quantity }}) *\n                    {{ cart.price | currency: currencyCode:\"symbol\":\"1.2-2\" }}\n                    <ng-container *ngIf=\"cart.isDealAvailable\">\n                      <p class=\"color-b-d mt-1 prod-price\">\n                        {{ \"DEAL_OFFER\" | translate }} :\n                        {{cart.dealTotalAmount | currency: currencyCode:\"symbol\":\"1.2-2\"\n                        }}\n                      </p>\n                    </ng-container>\n                  </h6>\n                  <h4 class=\"barlow-bold text-normal text-right prod-price\">\n                    {{cart.productTotal | currency: currencyCode:\"symbol\":\"1.2-2\"}}\n                  </h4>\n                </div>\n\n              </div>\n\n              <hr />\n            </span>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n\n          </div>\n\n          <div class=\"col-md-6 mt-5\">\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"row\">\n                  <div class=\"col-md-7\">\n                    <h6 class=\"text-md color-b barlow-medium prod-price\">\n                      {{ \"SUB_TOTAL\" | translate }}\n                    </h6>\n                  </div>\n                  <div class=\"col-md-5 text-right\">\n                    <h4 class=\"barlow-bold text-normal prod-price\">\n                      {{orderInfo.cart.subTotal | currency: currencyCode:\"symbol\":\"1.2-2\"}}\n                    </h4>\n                  </div>\n                </div>\n\n                <div class=\"row\" *ngIf=\"orderInfo.cart.tax > 0\">\n                  <div class=\"col-md-7\">\n                    <h6 class=\"text-md color-b barlow-medium prod-price\">\n                      {{ \"TAX\" | translate }}\n                    </h6>\n                  </div>\n                  <div class=\"col-md-5 text-right\">\n                    <h4 class=\"barlow-bold text-normal prod-price\">\n                      {{orderInfo.cart.tax | currency: currencyCode:\"symbol\":\"1.2-2\"}}\n                    </h4>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-md-7\">\n                    <h6 class=\"text-md color-b barlow-medium prod-price\">\n                      {{ \"DELIVERY_CHARGES\" | translate }}\n                    </h6>\n                  </div>\n                  <div class=\"col-md-5 text-right\">\n                    <h4 class=\"barlow-bold text-normal prod-price\">\n                      {{orderInfo.cart.deliveryCharges > 0 ? (orderInfo.cart.deliveryCharges | currency: currencyCode:\"symbol\":\"1.2-2\") : (\"FREE\" | translate)}}\n                    </h4>\n                  </div>\n                </div>\n                <div class=\"row\" *ngIf=\"orderInfo.cart.couponCode\">\n                  <div class=\"col-md-7\">\n                    <h6 class=\"text-md color-b barlow-medium prod-price\">\n                      {{ \"DISCOUNT\" | translate }}:\n                    </h6>\n                  </div>\n                  <div class=\"col-md-5 text-right\">\n                    <h4 class=\"barlow-bold text-normal prod-price\">\n                      {{orderInfo.cart.couponAmount | currency: currencyCode:\"symbol\":\"1.2-2\"}}\n                    </h4>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col-md-7\">\n                    <h6 class=\"text-md color-b barlow-medium prod-price\">\n                      {{ \"USED_WALLET_AMOUNT\" | translate }}:\n                    </h6>\n                  </div>\n                  <div class=\"col-md-5 text-right\">\n                    <h4 class=\"barlow-bold text-normal prod-price\">\n                      {{orderInfo.cart.walletAmount | currency: currencyCode:\"symbol\":\"1.2-2\"}}\n                    </h4>\n                  </div>\n                </div>\n                <hr />\n                <div class=\"row\">\n                  <div class=\"col-md-7\">\n                    <h6 class=\"text-md color-b barlow-medium prod-price\">\n                      {{ \"TOTAL_AMOUNT\" | translate }}\n                    </h6>\n                  </div>\n                  <div class=\"col-md-5\">\n                    <h4 class=\"barlow-bold text-normal text-right prod-price\">\n                      {{orderInfo.cart.walletAmount && orderInfo.cart.walletAmount > 0 ? ((orderInfo.cart.grandTotal + orderInfo.cart.walletAmount) | currency:currencyCode:'symbol':'1.2-2') : (orderInfo.cart.grandTotal | currency: currencyCode:\"symbol\":\"1.2-2\")}}\n                    </h4>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template #ratecontent let-modal>\n    <div class=\"modal-body\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <h6 class=\"barlow-medium color-red text-big text-center\">\n            {{ \"RATE_PRODUCT\" | translate }}\n          </h6>\n          <div class=\"row text-center my-2\">\n            <div class=\"col-md-12\">\n              <ngb-rating class=\"ngb-ratingbar\" [(rate)]=\"rateData.rate\" [max]=\"5\"></ngb-rating>\n            </div>\n          </div>\n          <div class=\"row text-center my-2\">\n            <div class=\"col-md-12\">\n              <textarea class=\"form-control custom-textarea barlow-regular smaller-text color-b-c\" rows=\"5\"\n                placeholder=\"{{'TELL_US_YOUR_EXPERIENCE'|translate}}\" [(ngModel)]=\"rateData.description\"></textarea>\n            </div>\n          </div>\n          <div class=\"row mt-3\">\n            <div class=\"col-md-6\">\n              <button class=\"btn btn-outline-dark w-100 barlow-medium text-smaller mb-3\" type=\"button\"\n                (click)=\"closeRateModal()\">\n                {{ \"CANCEL\" | translate }}\n              </button>\n            </div>\n            <div class=\"col-md-6\">\n              <button class=\"btn btn-warning w-100 barlow-medium text-smaller\" type=\"button\"\n                [disabled]=\"rateData.rate === 0 ||rateData.description===''\" (click)=\"rateProduct()\">\n                {{ \"SUBMIT\" | translate }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n  <!-- rating modal -->\n</div>","import { Injectable } from \"@angular/core\";\nimport { CrudService } from \"../../../services/crud.service\";\nimport { Observable } from \"rxjs\";\nimport { RateModel } from \"../../models/order.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  constructor(private crud: CrudService) {\n  }\n\n  // get's users orders\n  public getOrderHistory(): Observable<any> {\n    return this.crud.getData(`/orders/list?page=0&limit=100000`);\n  }\n\n  // get's order details\n  public getOrderDetails(orderId: string): Observable<any> {\n    return this.crud.getData(`/orders/detail/${orderId}`);\n  }\n\n  // sends request to cancel the order\n  public cancelOrder(orderId: string): Observable<any> {\n    return this.crud.updateData(`/orders/cancel/${orderId}`, undefined);\n  }\n\n  // places new order\n  public placeOrder(orderData): Observable<any> {\n    return this.crud.saveData('/orders/create', orderData);\n  }\n\n  //rate product\n  public rateproduct(rateData): Observable<any> {\n    return this.crud.saveData('/ratings/rate', rateData);\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { NgbModal, ModalDismissReasons, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { CardModel, PlaceOrderModel } from '../../models/order.model';\nimport { Store } from '@ngrx/store';\nimport { CartState } from '../../store/cart.reducer';\nimport { CartModel, OutOfStockData, PaymentMethodEnum } from '../../models/cart.model';\nimport { HelperService } from '../../../services/helper.service';\nimport { Router } from '@angular/router';\nimport { ActiveToast } from 'ngx-toastr';\nimport { environment } from \"../../../../environments/environment\";\nimport { CheckoutService } from \"../checkout/checkout.service\";\nimport { CartService } from \"../cart/cart.service\";\nimport { OrdersService } from \"../orders/orders.service\";\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.scss'],\n})\nexport class PaymentComponent implements OnInit {\n  closeResult = '';\n  public cartInfo: CartModel; // contains user's cart information\n  public orderData: PlaceOrderModel; // contains order information\n  public cardData: CardModel; // contains card information to make payment\n  public currencyCode: string = null; // contains currency code\n  public outOfStockData: Array<OutOfStockData> = [];        // contains list of out of stock data\n  private modalRef: NgbModalRef;        // contains reference to out of stock modal\n  @ViewChild('outOfStockModal', { static: false }) public outOfStockModal: TemplateRef<any>;        // contains reference to ot of stock mda\n  public businessInfo;      // contains business info modal\n  public minimumOrderAmount: number = 0;        // contains minimum order amount\n  public isStripe = false;      // enables stripe option when true\n  public paymentMethods: Array<string> = [];      // shows payment method set by admin\n  public walletBalance: number = 0;     // contains user's wallet balance\n  public grandTotal: number = 0;        // contains cart grand total\n  public isWalletUsed: boolean = false;     // set to true when user uses his wallet to make payment\n  public isCODAvailable: boolean = false;   // show's COD if COD payment is available\n  public isStripeAvailable: boolean = false;   // show's STRIPE payment if STRIPE payment is available\n\n  constructor(private modalService: NgbModal, private store: Store<CartState>, private helperService: HelperService, private router: Router, private checkoutService: CheckoutService, private cartService: CartService, private orderService: OrdersService) {\n    this.checkoutService.wallet$.subscribe(walletBalance => {\n      this.walletBalance = walletBalance;\n    });\n    this.checkoutService.paymentMethod$.subscribe(paymentMethod => {\n      this.paymentMethods = paymentMethod;\n      if (this.paymentMethods.length > 0) {\n        this.isCODAvailable = this.paymentMethods.includes(PaymentMethodEnum.COD);\n        this.isStripeAvailable = this.paymentMethods.includes(PaymentMethodEnum.STRIPE);\n      }\n\n    });\n    this.helperService.currency$.subscribe((currencyCode) => {\n      this.currencyCode = currencyCode;\n    });\n    this.getMinimumOrderAmount();\n    this.getBusinessInfo();\n    this.cardData = this.getDefaultCardValues();\n\n    if (environment.STRIPE_PUBLISHABLE_KEY) this.isStripe = true;\n\n    this.store.select('cartInfo').subscribe((state) => {\n      if (state) {\n        this.cartInfo = state;\n        this.grandTotal = this.cartInfo.grandTotal;\n        this.isWalletUsed = this.cartInfo.walletAmount && this.cartInfo.walletAmount > 0 ? true : false;\n        if (localStorage.getItem('orderData')) {\n          this.orderData = JSON.parse(atob(atob(atob(localStorage.getItem('orderData')))));\n          \n        } else {\n          this.router.navigate(['home']);\n        }\n      } else {\n        this.router.navigate(['home']);\n      }\n    });\n  }\n\n  // contains minimum order amount\n  private getMinimumOrderAmount(): void {\n    this.cartService.getDeliverySettings().subscribe((res: any) => {\n      this.minimumOrderAmount = res.response_data.minimumOrderAmountToPlaceOrder;\n    });\n  }\n\n  // get's business info\n  public getBusinessInfo(): void {\n    this.helperService.businessInfo$.subscribe(businessInfo => {\n      if (businessInfo) {\n        this.businessInfo = businessInfo;\n      }\n    })\n  }\n\n  open(content) {\n    this.modalService\n      .open(content, { ariaLabelledBy: 'modal-basic-title' })\n      .result.then(\n        (result) => {\n          this.closeResult = `Closed with: ${result}`;\n        },\n        (reason) => {\n          this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        }\n      );\n  }\n\n  // opens out of stock modal\n  public openOutOfStockModal(): void {\n    this.modalRef = this.modalService.open(this.outOfStockModal, {\n      ariaLabelledBy: 'modal-basic-title',\n      centered: true,\n      backdrop: false,\n      keyboard: false\n    });\n  }\n\n  // get default card values\n  public getDefaultCardValues(): CardModel {\n    return {\n      cardHolderName: '',\n      cardNumber: '',\n      expiryMonth: null,\n      expiryYear: null,\n      cvv: null,\n    };\n  }\n\n  // sets wallet amount and updates grand total\n  public setWalletAmount(): void {\n    if (this.isWalletUsed) {\n      this.checkoutService.applyWalletPayment().subscribe((res: any) => {\n        this.orderData.paymentType = 'COD';\n        this.updateOrderData();\n        this.cartService.checkCartFormat(res);\n      });\n    } else {\n      this.checkoutService.removeWalletPayment().subscribe((res: any) => {\n        this.orderData.paymentType = '';\n        this.updateOrderData();\n        this.cartService.checkCartFormat(res);\n      });\n    }\n  }\n\n  // update order data\n  private updateOrderData(): void {\n    const encodedData = btoa(btoa(btoa(JSON.stringify(this.orderData))));\n    localStorage.setItem('orderData', encodedData);\n  }\n\n  // sets payment type\n  public setPaymentType(type: string): void {\n    this.orderData.paymentType = type;\n    this.cardData = this.getDefaultCardValues();\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  ngOnInit(): void {\n    this.helperService.scrollTop();\n  }\n\n  // sends's request to place order\n  public placeOrder(): void | ActiveToast<any> {\n    if (this.cartInfo.subTotal < this.minimumOrderAmount) {\n      return this.helperService.infoToast(\"MIN_ORDER\", false, this.minimumOrderAmount);\n    }\n    this.orderService.placeOrder(this.orderData).subscribe((res: any) => {\n      if (res.response_code !== 200) {\n        this.outOfStockData = res.response_data;\n        this.openOutOfStockModal();\n      } else {\n        this.helperService.successToast(res.response_data, true);\n        this.cartService.clearCart();\n        localStorage.removeItem('orderData');\n        localStorage.removeItem('address');\n        this.router.navigate(['thank-you']);\n      }\n    });\n  }\n\n  // closes out of stock modal\n  public closeModal(): void {\n    this.modalRef.close();\n    this.outOfStockData = [];\n    this.router.navigate(['cart']);\n  }\n\n  // opens stripe checkout\n  public openStripeCheckout() {\n    if (this.cartInfo.subTotal < this.minimumOrderAmount) {\n      return this.helperService.infoToast(\"MIN_ORDER\", false, this.minimumOrderAmount);\n    }\n    let that = this;\n    const key = environment.STRIPE_PUBLISHABLE_KEY;\n    var handler = (<any>window).StripeCheckout.configure({\n      key: key,\n      locale: 'auto',\n      currency: this.currencyCode,\n      image: 'assets/images/thumbnail.png',\n      token: function (paymentResponse: any) {\n        // You can access the token ID with `token.id`.\n        // Get the token ID to your server-side code for use.\n        that.orderData.paymentId = paymentResponse.id;\n        that.placeOrder();\n      }\n    });\n    handler.open({\n      name: this.businessInfo.storeName,\n      description: `Order payment - ${this.currencyCode}${this.grandTotal}`,\n      amount: this.grandTotal * 100,\n      // shippingAddress: true,\n      billingAddress: false\n    });\n  }\n}\n","<div class=\"container-fluid color-lightblue payment\">\n  <div class=\"row color-lightblue\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n\n    <div class=\"col-md-10 col-lg-9 col-xl-10 bg-color-lightblue mt-4 main-bar\">\n      <!-- <div class=\"app-bar\">\n        <app-header-component></app-header-component>\n      </div> -->\n\n      <br /><br />\n      <br /><br />\n\n      <div class=\"row\">\n        <div class=\"col-md-7\">\n          <h5 class=\"barlow-bold text-normal color-b prod-name\">\n            {{ \"CHOOSE_PAYMENT_MODE\" | translate }}\n            <span class=\"color-red\">*</span>\n          </h5>\n        </div>\n        <div class=\"col-md-2 col-5\">\n          <h5 class=\"text-normal barlow-medium color-b main-title\">\n            {{ \"SUB_TOTAL\" | translate }}&nbsp;({{cartInfo.products.length}}{{ \"ITEMS\" | translate }})\n          </h5>\n        </div>\n        <div class=\"col-md-2 text-right col-7\">\n          <h5 class=\"text-normal barlow-bold prod-name\">\n            {{ cartInfo.subTotal | currency: currencyCode:\"symbol\":\"1.2-2\" }}\n          </h5>\n        </div>\n      </div>\n\n      <div class=\"row mb-5\" *ngIf=\"paymentMethods.length > 0\">\n        <div class=\"col-md-7\">\n          <div class=\"bg-white p-3 my-5 radius-10\" *ngIf=\"walletBalance > 0\">\n            <div class=\"row\">\n              <div class=\"col-md-10\">\n                <div class=\"custom-control\">\n                  <input type=\"checkbox\" id=\"payWithWallet\" name=\"payWithWallet\" class=\"custom-control-input\"\n                    [(ngModel)]=\"isWalletUsed\" (change)=\"setWalletAmount()\" />\n                  <label class=\"custom-control-label barlow-regular color-b-c text-md\" for=\"payWithWallet\">\n                    <h6 class=\"h1sm barlow-regular color-b main-title\">\n                      {{\"WALLET_PAY\" | translate}}\n                    </h6>\n                    <h6 class=\"text-normal barlow-regular color-b-c prod-desc\">\n                      {{\"BALANCE_IS\" | translate}} {{walletBalance | currency:currencyCode:'symbol':'1.2-2'}}\n                    </h6>\n                  </label>\n                </div>\n              </div>\n              <p class=\"barlow-regular color-green prod-desc\" style=\"margin-left: 2.5em;\" *ngIf=\"isWalletUsed\">\n                {{cartInfo.walletAmount | currency:currencyCode:'symbol':'1.2-2'}} {{\"DEDUCTED_BY\" | translate}}\n              </p>\n              <div class=\"col-md-3 offset-md-9 pt-3\">\n                <button class=\"btn btn-warning w-100 text-normal barlow-regular\" type=\"button\" (click)=\"placeOrder()\"\n                  *ngIf=\"isWalletUsed && grandTotal === 0\">\n                  {{ \"PAY_NOW\" | translate }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"cart-summary radius-10 bg-white p-3\" *ngIf=\"isStripeAvailable &&  grandTotal != 0\">\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"custom-control custom-radio\">\n                  <input type=\"radio\" id=\"payWithCard\" name=\"payWithCard\" class=\"custom-control-input\"\n                    (change)=\"setPaymentType('STRIPE')\" [disabled]=\"isWalletUsed && grandTotal === 0\"\n                    [checked]=\"orderData.paymentType === 'STRIPE'\" />\n                  <label class=\"custom-control-label barlow-regular color-b-c text-md\" for=\"payWithCard\">\n                    <h6 class=\"h1sm barlow-regular color-b main-title\">\n                      {{ \"PAY_WITH_CARD\" | translate }}\n                    </h6>\n                  </label>\n                </div>\n              </div>\n              <div class=\"col-md-3 offset-md-3\" *ngIf=\"orderData.paymentType === 'STRIPE' &&  grandTotal != 0\">\n                <button class=\"btn btn-warning w-100 text-normal barlow-regular mt-3\" type=\"button\"\n                  (click)=\"openStripeCheckout()\">\n                  {{ \"PAY_NOW\" | translate }}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"bg-white p-3 my-5 radius-10\" *ngIf=\"isCODAvailable  &&  grandTotal != 0\">\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"custom-control custom-radio\">\n                  <input type=\"radio\" id=\"payWithCOD\" name=\"payWithCOD\" class=\"custom-control-input\"\n                    (change)=\"setPaymentType('COD')\" [disabled]=\"isWalletUsed && grandTotal === 0\"\n                    [checked]=\"orderData.paymentType === 'COD'\" />\n                  <label class=\"custom-control-label barlow-regular color-b-c text-md\" for=\"payWithCOD\">\n                    <h6 class=\"h1sm barlow-regular color-b main-title\">\n                      {{ \"CASH_ON_DELIVERY\" | translate }}\n                    </h6>\n                    <h6 class=\"text-normal barlow-regular color-b-c prod-desc\">\n                      {{\"PLEASE_PROVIDE_EXACT_CHANGE\" | translate}}\n                    </h6>\n                  </label>\n                </div>\n              </div>\n              <div class=\"col-md-3 offset-md-3 pt-3\" *ngIf=\"orderData.paymentType === 'COD' && grandTotal != 0\">\n                <button class=\"btn btn-warning w-100 text-normal barlow-regular\" type=\"button\" (click)=\"placeOrder()\">\n                  {{ \"PAY_NOW\" | translate }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-5\">\n          <div class=\"row\">\n            <div class=\"col-md-7\">\n              <h5 class=\"text-normal barlow-medium color-b main-title\">\n                {{ \"TAX\" | translate }}\n              </h5>\n            </div>\n            <div class=\"col-md-2 text-right col-7\">\n              <h5 class=\"text-normal barlow-bold prod-name\">\n                {{ cartInfo.tax | currency: currencyCode:\"symbol\":\"1.2-2\" }}\n              </h5>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-7\">\n              <h5 class=\"text-normal barlow-medium color-b main-title\">\n                {{ \"DELIVERY_CHARGES\" | translate }}\n              </h5>\n            </div>\n            <div class=\"col-md-2 text-right col-7\">\n              <h5 class=\"text-normal barlow-bold prod-name\">\n                {{ cartInfo.deliveryCharges | currency: currencyCode:\"symbol\":\"1.2-2\" }}\n              </h5>\n            </div>\n          </div>\n          <div class=\"row\" *ngIf=\"isWalletUsed\">\n            <div class=\"col-md-7\">\n              <h5 class=\"text-normal barlow-medium color-b main-title\">\n                {{ \"PAID_FROM_WALLET\" | translate }}\n              </h5>\n            </div>\n            <div class=\"col-md-2 text-right col-7\">\n              <h5 class=\"text-normal barlow-bold prod-name\">\n                -{{ cartInfo.walletAmount | currency: currencyCode:\"symbol\":\"1.2-2\" }}\n              </h5>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-7\">\n              <h5 class=\"text-normal barlow-medium color-b main-title\">\n                {{ \"GRAND_TOTAL\" | translate }}\n              </h5>\n            </div>\n            <div class=\"col-md-2 text-right col-7\">\n              <h5 class=\"text-normal barlow-bold prod-name\">\n                {{ cartInfo.grandTotal | currency: currencyCode:\"symbol\":\"1.2-2\" }}\n              </h5>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-7\">\n              <h5 class=\"text-normal barlow-medium color-b main-title\">\n                {{ \"PAYABLE_AMOUNT\" | translate }}\n              </h5>\n            </div>\n            <div class=\"col-md-2 text-right col-7\">\n              <h5 class=\"text-normal barlow-bold prod-name\">\n                {{ cartInfo.grandTotal | currency: currencyCode:\"symbol\":\"1.2-2\" }}\n              </h5>\n            </div>\n          </div>\n        </div>\n      </div>\n      <app-footer></app-footer>\n    </div>\n  </div>\n\n  <ng-template #outOfStockModal let-modal>\n    <div class=\"row py-3 px-3\">\n      <div class=\"col-md-12\">\n        <h4 class=\"barlow-semibold prod-name\">\n          {{\"PRODUCT_OUT_OF_STOCK\" | translate}}\n        </h4>\n        <p>{{\"OUT_OF_STOCK_MESSAGE\" | translate}}</p>\n      </div>\n    </div>\n    <div class=\"modal-body\">\n      <h5 class=\"barlow-medium main-title\" *ngFor=\"let product of outOfStockData;index as i\">\n        {{i + 1}}.&nbsp;{{ product.productName }}\n      </h5>\n    </div>\n\n    <div class=\"row px-3 py-4\">\n      <div class=\"col-md-6 text-right\">\n        <button type=\"button\" (click)=\"closeModal()\" class=\"btn btn-warning w-100 barlow-medium\">\n          {{\"REMOVE\" | translate}}\n        </button>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #content let-modal>\n    <div class=\"modal-body\">\n      <img src=\"assets/images/thankyou.png\" />\n    </div>\n  </ng-template>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HelperService } from \"../../../services/helper.service\";\nimport { PrivacyModel } from \"../../models/about-us.model\";\nimport { MyStoreService } from \"../my-store/my-store.service\";\n\n@Component({\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n  styleUrls: ['./privacy-policy.component.scss']\n})\nexport class PrivacyPolicyComponent implements OnInit {\n  public pageData = {\n    title: '',\n    description: ''\n  };      // contains information about the store\n\n  constructor(private helperService: HelperService, private myStoreService: MyStoreService) {\n    this.getPrivacyPolicyInfo();\n  }\n\n  // get's privacy policy information\n  public getPrivacyPolicyInfo(): void {\n    this.myStoreService.getPrivacyPolicyInformation().subscribe((res: any) => {\n      this.pageData = res.response_data;\n    })\n  }\n\n  ngOnInit(): void {\n    this.helperService.scrollTop();\n  }\n\n}\n","<div class=\"container-fluid color-lightblue footer-link\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n    <div class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\">\n      <br/><br/>\n      <br/><br/>\n      <div class=\"bottom-border\">\n        <h5><h5>{{ pageData.title}}</h5></h5>\n      </div>\n\n      <p [innerHTML]=\"pageData.description\"></p>\n      <app-footer></app-footer>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { OwlOptions } from 'ngx-owl-carousel-o';\nimport { ProductsModel, VariantModel } from '../../models/category.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { HelperService } from '../../../services/helper.service';\nimport { CartState } from '../../store/cart.reducer';\nimport { Store } from '@ngrx/store';\nimport * as _ from 'lodash';\nimport { ActiveToast } from 'ngx-toastr';\nimport { AuthGuardService } from 'src/app/services/auth-guard.service';\nimport { CartModel } from '../../models/cart.model';\nimport { environment } from '../../../../environments/environment';\nimport { CartService } from '../cart/cart.service';\nimport { ProductsService } from '../products/products.service';\nimport { RateModel } from '../../models/order.model';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.scss'],\n})\nexport class ProductDetailsComponent implements OnInit {\n  limitedOffers: OwlOptions = {\n    loop: true,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 500,\n    autoplay: true,\n    autoplaySpeed: 500,\n    navText: ['', ''],\n    responsive: {\n      0: {\n        items: 1,\n      },\n      400: {\n        items: 3,\n      },\n      740: {\n        items: 2,\n      },\n      940: {\n        items: 3,\n      },\n      1024: {\n        items: 4,\n      },\n    },\n    nav: true,\n  };\n  customOptions: OwlOptions = {\n    loop: true,\n    mouseDrag: false,\n    touchDrag: false,\n    pullDrag: false,\n    dots: false,\n    autoplay: true,\n    navSpeed: 700,\n    navText: ['', ''],\n    responsive: {\n      0: {\n        items: 1,\n      },\n      400: {\n        items: 1,\n      },\n      740: {\n        items: 1,\n      },\n      940: {\n        items: 1,\n      },\n    },\n    nav: true,\n  };\n  private productId: string = null; // contains product id from route\n  public selectedQuantity: number = 1; // contains selected quantity\n  public selectedVariant: VariantModel; // contains selected variant\n  public grandTotal: number; // contains grand total of variant and quantity\n  public isLoggedIn: boolean = false;\n  public relatedProducts: Array<ProductsModel> = []; // contains list of related products\n  public currencyCode: string = null; // contains currency code\n  private userId: string = null; // contains id of logged in user\n  private cartInfo: CartModel; // contains cart information\n  public productImageUrl: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-800`; // contains optimized product image url\n  public productCarouselImageUrl: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-93`; // contains optimized product image url\n\n  public productData: ProductsModel = {\n    status: null,\n    variant: [],\n    title: '',\n    description: null,\n    category: null,\n    isCategoryBasedOffer: null,\n    imageUrl: null,\n    _id: null,\n    imageId: null,\n    createdAt: null,\n    updatedAt: null,\n    user: null,\n    type: null,\n    averageRating: 0,\n    noOfUsersRated: 0,\n    totalRating: 0,\n    isFavourite: false,\n    isRated: false,\n    categoryId: null,\n    productImages: []\n  };\n\n  public rateData: RateModel = {\n    productId: this.productId,\n    rate: 0,\n    description: ' ',\n  };\n\n  constructor(\n    private route: ActivatedRoute,\n    private helperService: HelperService,\n    private store: Store<CartState>,\n    private router: Router,\n    private authService: AuthGuardService,\n    private cartService: CartService,\n    private productsService: ProductsService,\n    private modalService: NgbModal\n  ) {\n    this.helperService.currency$.subscribe((currencyCode) => {\n      this.currencyCode = currencyCode;\n    });\n    this.store.select('cartInfo').subscribe((state) => {\n      if (state) {\n        this.cartInfo = state;\n      }\n    });\n    this.userId = localStorage.getItem('id');\n    this.route.params.subscribe((params) => {\n      this.productId = params.id;\n      this.selectedQuantity = 1;\n      this.getProductDetails();\n      this.getRelatedProducts();\n      this.isLoggedIn = this.userId ? true : false;\n    });\n  }\n\n  ngOnInit(): void {\n    this.helperService.scrollTop();\n  }\n\n  // get's related products\n  private getRelatedProducts(): void {\n    const products$ = this.productsService.getRelatedProducts();\n    products$.subscribe((res: any) => {\n      let productsId = [{ _id: this.productId }];\n      let products: Array<any> = _.differenceBy(\n        res.response_data,\n        productsId,\n        '_id'\n      );\n      if (products.length > 0) {\n        this.relatedProducts = products.slice(0, 11);\n      }\n    });\n  }\n\n  // open's product rate modal\n  public openRateModal(rateContent: TemplateRef<any>): void {\n    this.modalService.open(rateContent, {\n      ariaLabelledBy: 'modal-basic-title',\n      size: 'sm',\n      centered: true,\n    });\n  }\n\n  // sends request to rate product\n  public rateProduct(): void {\n    this.productsService\n      .saveProductRating(this.rateData)\n      .subscribe((res: any) => {\n        this.helperService.successToast(res.response_data, true);\n        this.closeRateModal();\n        this.getProductDetails();\n      });\n  }\n\n  // closes rate modal\n  public closeRateModal() {\n    this.modalService.dismissAll();\n  }\n\n  // get's product details\n  private getProductDetails(): void {\n    this.productsService\n      .getProductDetails(this.productId)\n      .subscribe((res: any) => {\n        this.productData = res.response_data;\n        if (this.productData.isDealAvailable) {\n          this.productData.variant.forEach((variant) => {\n            variant.discountAmount =\n              Number(variant.price) -\n              Number(variant.price) * (this.productData.dealPercent / 100);\n          });\n        }\n        if (this.productData.isAddedToCart) {\n          this.selectedQuantity = this.productData.quantityToCart;\n        }\n        this.selectedVariant =\n          this.productData.variant[0].productStock > 0\n            ? this.productData.variant[0]\n            : undefined;\n        this.calculateGrandTotal();\n      });\n  }\n\n  // sets selected variant\n  public setSelectedVariant(\n    checked: boolean,\n    variant: VariantModel\n  ): void | ActiveToast<any> {\n    if (checked && variant.productStock === 0) {\n      return this.helperService.infoToast('PRODUCT_OUT_STOCK');\n    }\n    this.selectedVariant = checked ? variant : undefined;\n    this.calculateGrandTotal();\n  }\n\n  // calculates grand total\n  public calculateGrandTotal(): void {\n    if (this.selectedVariant) {\n      this.grandTotal = this.productData.isDealAvailable\n        ? Number(this.selectedVariant.discountAmount) * this.selectedQuantity\n        : Number(this.selectedVariant.price) * this.selectedQuantity;\n    }\n  }\n\n  // increases/decreases quantity\n  public changeQuantity(type: string): void {\n    switch (type) {\n      case 'increment':\n        this.selectedQuantity += 1;\n        this.calculateGrandTotal();\n        break;\n      case 'decrement':\n        if (this.selectedQuantity > 1) {\n          this.selectedQuantity -= 1;\n          this.calculateGrandTotal();\n        }\n        break;\n    }\n  }\n\n  // add's product to favourite\n  public addToFavourite() {\n    this.productsService.addToWishList(this.productId).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.productData.isFavourite = true;\n    });\n  }\n\n  // removes product from favourite\n  public removeFromFavourite() {\n    this.productsService\n      .removeProductFromWishList(this.productId)\n      .subscribe((res: any) => {\n        this.helperService.successToast(res.response_data, true);\n        this.productData.isFavourite = false;\n      });\n  }\n\n  // sends request to add item to cart\n  public addToCart() {\n    if (this.isLoggedIn === true) {\n      if (this.cartInfo && this.cartInfo.products.length > 0) {\n        const data = this.cartInfo.products.find(\n          (cart) => cart.productId === this.productId\n        );\n        if (data && data.unit !== this.selectedVariant.unit) {\n          this.cartService\n            .deleteProductFromCart(this.productId)\n            .subscribe((res: any) => {\n              this.cartService.prepareCartData(\n                this.productData,\n                this.selectedVariant,\n                this.selectedQuantity\n              );\n            });\n        } else {\n          this.cartService.prepareCartData(\n            this.productData,\n            this.selectedVariant,\n            this.selectedQuantity\n          );\n        }\n      } else {\n        this.cartService.prepareCartData(\n          this.productData,\n          this.selectedVariant,\n          this.selectedQuantity\n        );\n      }\n    } else {\n      this.helperService.infoToast('AUTH_REQ');\n      this.router.navigate(['login'], {\n        queryParams: { redirectTo: `product-details/${this.productId}` },\n      });\n    }\n  }\n}\n","<div class=\"container-fluid color-lightblue product-details\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n\n    <div class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\">\n      <br />\n      <br />\n      <div class=\"bottom-border\"></div>\n\n      <br /><br />\n      <!-- product details page -->\n\n      <div class=\"product-page\">\n        <div class=\"row\">\n          <div class=\"col-md-6 col-lg-12 col-xl-6\">\n            <div class=\"row\">\n              <div class=\"col-md-12 mb-4\">\n                <div class=\"row\">\n                  <div class=\"col-md-12\">\n                    <div class=\"product-image\">\n                      <div class=\"row\">\n                        <div class=\"col-md-12 col-12\">\n                          <ng-container *ngIf=\"!productData.productImages || productData.productImages.length === 0\">\n                            <img\n                              [src]=\"productData.filePath ? productImageUrl + productData.filePath : productData.imageUrl\"\n                              class=\"\" />\n                          </ng-container>\n\n                          <ng-container *ngIf=\"productData.productImages && productData.productImages.length > 0\">\n                            <owl-carousel-o [options]=\"customOptions\">\n                              <ng-container *ngFor=\"let image of productData.productImages\">\n                                <ng-template carouselSlide>\n                                  <img [src]=\"image.filePath ? productImageUrl + image.filePath : image.imageUrl\" />\n                                </ng-template>\n                              </ng-container>\n                            </owl-carousel-o>\n                          </ng-container>\n                        </div>\n                        <div class=\"col-md-12 col-4\">\n                          <div class=\"row\" *ngIf=\"isLoggedIn\">\n                            <div class=\"col-md-2 offset-md-10 text-right mt-4\">\n                              <ng-container class=\"text-center pt-3 product-image\" *ngIf=\"productData.isFavourite\">\n                                <a class=\"showPointer favourite\" (click)=\"removeFromFavourite()\">\n                                  <i class=\"fa fa-heart pt-2 color-red\"></i></a>\n                              </ng-container>\n                              <ng-container class=\"text-center pt-3\" *ngIf=\"productData.isFavourite === false\">\n                                <a class=\"showPointer favourite\" (click)=\"addToFavourite()\"><i\n                                    class=\"fa fa-heart-o\"></i></a>\n                              </ng-container>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"col-md-12\">\n                <div class=\"product-name\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6 col-9\">\n                      <h2 class=\"h1sm barlow-medium color-b prod-name\">\n                        {{\n                          productData.title.length > 16\n                            ? (productData.title | slice: 0:16) + \"...\"\n                            : productData.title\n                        }}\n                      </h2>\n                      <h6 class=\"barlow-regular color-b-c text-md prod-desc\">\n                        {{ productData.description }}\n                      </h6>\n                    </div>\n\n                    <div class=\"col-md-6 text-right col-3\">\n                      <h6 *ngIf=\"productData.averageRating\">\n                        <ngb-rating [rate]=\"productData.averageRating\" [readonly]=\"true\" [max]=\"5\">\n                          <ng-template let-fill=\"fill\" let-index=\"index\">\n                            <span class=\"star\" [class.full]=\"fill === 100\">\n                              <span class=\"half\" [style.width.%]=\"fill\">&#9733;</span>&#9733;\n                            </span>\n                          </ng-template>\n                        </ngb-rating>\n\n                        ({{ productData.noOfUsersRated }})\n                      </h6>\n                      <ng-container *ngIf=\"\n                          productData.isDealAvailable &&\n                          productData.variant.length > 0\n                        \">\n                        <ng-container *ngIf=\"!selectedVariant\">\n                          <h5 class=\"color-b-c barlow-regular text-big prod-price\">\n                            <del>{{\n                              productData.variant[0].price\n                                | currency: currencyCode:\"symbol\":\"1.2-2\"\n                            }}</del>\n                            &nbsp;\n                            <span class=\"color-green barlow-bold text-big prod-price\"\n                              *ngIf=\"productData.variant.length > 0\">\n                              {{\n                                productData.variant[0].discountAmount\n                                  | currency: currencyCode:\"symbol\":\"1.2-2\"\n                              }}\n                            </span>\n                          </h5>\n                        </ng-container>\n                        <ng-container *ngIf=\"selectedVariant\">\n                          <h5 class=\"color-b-c barlow-regular text-big prod-price\">\n                            <del>{{\n                              selectedVariant.price\n                                | currency: currencyCode:\"symbol\":\"1.2-2\"\n                            }}</del>\n                            &nbsp;\n\n                            <span class=\"color-green barlow-bold text-big prod-price\"\n                              *ngIf=\"productData.variant.length > 0\">\n                              {{\n                                selectedVariant.discountAmount\n                                  | currency: currencyCode:\"symbol\":\"1.2-2\"\n                              }}\n                            </span>\n                          </h5>\n                        </ng-container>\n                      </ng-container>\n                      <ng-container *ngIf=\"\n                          !productData.isDealAvailable &&\n                          productData.variant.length > 0\n                        \">\n                        <ng-container *ngIf=\"!selectedVariant\">\n                          <h5 class=\"color-green barlow-bold text-big prod-price\"\n                            *ngIf=\"productData.variant.length > 0\">\n                            {{\n                              productData.variant[0].price\n                                | currency: currencyCode:\"symbol\":\"1.2-2\"\n                            }}\n                          </h5>\n                        </ng-container>\n                        <ng-container *ngIf=\"selectedVariant\">\n                          <h5 class=\"color-green barlow-bold text-big prod-price\"\n                            *ngIf=\"productData.variant.length > 0\">\n                            {{\n                              selectedVariant.price\n                                | currency: currencyCode:\"symbol\":\"1.2-2\"\n                            }}\n                          </h5>\n                        </ng-container>\n                      </ng-container>\n                    </div>\n                  </div>\n                  <!--                  <div class=\"row\" *ngIf=\"isLoggedIn && productData.isRated === false\">-->\n                  <!--                    <div class=\"col-md-4\">-->\n                  <!--                      <button class=\"btn btn-warning w-100 barlow-medium text-smaller\" type=\"button\"-->\n                  <!--                              (click)=\"openRateModal(ratecontent)\">-->\n                  <!--                        {{ \"RATE_PRODUCT\" | translate }}-->\n                  <!--                      </button>-->\n                  <!--                    </div>-->\n                  <!--                  </div>-->\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-md-4 offset-md-2 col-lg-8 col-xl-4\">\n            <div class=\"quantity-block\">\n              <h6 class=\"barlow-bold text-normal prod-name\">\n                {{ \"CHOOSE_QUANTITY\" | translate }}\n              </h6>\n              <div class=\"row\" *ngFor=\"let variant of productData.variant\">\n                <div class=\"col-md-4 col-4\">\n                  <h5 class=\"barlow-regular color-b-c text-medium prod-price\">\n                    {{ variant.unit }}\n                  </h5>\n                </div>\n                <div class=\"col-md-8 col-8\">\n                  <p *ngIf=\"variant.productStock === 0\" class=\"color-red mt-1\">\n                    {{ \"OUT_OF_STOCK\" | translate }}\n                  </p>\n                  <label class=\"container customcheck text-medium color-b-c barlow-regular pointer prod-price\"\n                    *ngIf=\"variant.productStock > 0\">\n                    (\n                    {{\n                      (productData.isDealAvailable\n                        ? variant.discountAmount\n                        : variant.price\n                      ) | currency: currencyCode:\"symbol\":\"1.2-2\"\n                    }}\n                    )\n                    <input type=\"checkbox\" (change)=\"setSelectedVariant(checked.checked, variant)\" [checked]=\"\n                        selectedVariant\n                          ? variant._id === selectedVariant._id\n                          : false\n                      \" #checked />\n                    <span class=\"checkmark\"></span>\n                  </label>\n                </div>\n              </div>\n\n              <div class=\"row mt-4\">\n                <div class=\"col-md-12 col-6\">\n                  <div class=\"quantity mb-4\">\n                    <a class=\"showPointer\" (click)=\"changeQuantity('decrement')\"><img\n                        src=\"assets/icons/minus.svg\" /></a>\n                    <h6 class=\"barlow-regular text-smallest color-b pt-1\">\n                      {{ selectedQuantity }}\n                    </h6>\n                    <a class=\"showPointer\" (click)=\"changeQuantity('increment')\"><img src=\"assets/icons/plus.svg\" /></a>\n                  </div>\n                </div>\n                <div class=\"col-md-12 col-6\">\n                  <div class=\"\" *ngIf=\"selectedVariant\">\n                    <div class=\"row\">\n                      <div class=\"col-md-9 col-lg-12 col-xl-9\">\n                        <div class=\"checkout-button\">\n                          <div class=\"row checkout-block\">\n                            <div class=\"col-md-4 col-5 checkout-subtotal checkout-sections\">\n                              <div class=\"bg-color-b subtotal-price text-center\">\n                                <h6 class=\"barlow-regular color-w smaller-text m-0 pt-1\">\n                                  1\n                                  {{ \"ITEM\" | translate }}\n                                </h6>\n                                <p class=\"barlow-bold color-w smaller-text m-0\">\n                                  {{\n                                    grandTotal\n                                      ? (grandTotal\n                                        | currency\n                                          : currencyCode\n                                          : \"symbol\"\n                                          : \"1.2-2\")\n                                      : null\n                                  }}<span class=\"barlow-medium\"></span>\n                                </p>\n                              </div>\n                            </div>\n                            <div class=\"col-md-8 col-6 mt-1 pt-2 pointer checkout-subtotal checkout-sections add-cart\">\n                              <h6 class=\"smaller-text barlow-regular text-center\" (click)=\"addToCart()\">\n                                {{ \"ADD_TO_CART\" | translate }}\n                                &nbsp;<span><img src=\"assets/icons/cart.png\" class=\"small-cart\" /></span>\n                              </h6>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <hr />\n\n      <div class=\"text-center carosuel-list mt-4 pb-4\">\n        <owl-carousel-o [options]=\"limitedOffers\">\n          <ng-container *ngFor=\"let product of relatedProducts\">\n            <ng-template carouselSlide>\n              <div class=\"row py-2\">\n                <div class=\"col-md-11\">\n                  <div class=\"bg-white radius-10 p-2\">\n                    <div class=\"row\" [routerLink]=\"['/product-details', product._id]\">\n                      <div class=\"col-md-5 col-4\">\n                        <div class=\"frequent-img showPointer\">\n                          <ng-container>\n                            <img\n                              [src]=\"product.productImages && product.productImages.length > 0 ? (product.productImages[0].filePath ? productCarouselImageUrl+product.productImages[0].filePath : product.productImages[0].imageUrl) : (product.filePath ? productCarouselImageUrl+product.filePath : product.imageUrl)\" />\n                          </ng-container>\n\n                        </div>\n                        <div class=\"user-ratings\" *ngIf=\"product.averageRating\">\n                          <span class=\"\">\n                            <h6 class=\"barlow-medium\">\n                              {{ product.averageRating.toFixed(1) }}\n                              <span><i class=\"fa fa-star\"></i> </span>\n                            </h6>\n                          </span>\n                        </div>\n                      </div>\n\n                      <div class=\"col-md-7 col-8 text-left\">\n                        <h6 class=\"text-md barlow-semibold showPointer m-0 product-details-title main-title\">\n                          {{ product.title }}\n                        </h6>\n                        <!--                        <h6 class=\"barlow-regular color-b-c text-14 showPointer m-0 prod-desc product-details-description\">-->\n                        <!--                          {{-->\n                        <!--                          product.description.length < 25-->\n                        <!--                            ? product.description-->\n                        <!--                            : (product.description | slice: 0:25) + \"...\"-->\n                        <!--                          }}-->\n                        <!--                        </h6>-->\n\n                        <p class=\"color-green barlow-bold text-normal m-0 prod-price\">\n                          {{\n                            product.variant[0].price\n                              | currency: currencyCode:\"symbol\":\"1.2-2\"\n                          }}\n                          <span class=\"barlow-medium\"></span>\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-template>\n          </ng-container>\n        </owl-carousel-o>\n      </div>\n      <app-footer></app-footer>\n    </div>\n  </div>\n</div>\n<ng-template #ratecontent let-modal>\n  <div class=\"modal-body\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <h6 class=\"barlow-medium color-red text-big text-center\">\n          {{ \"RATE_PRODUCT\" | translate }}\n        </h6>\n        <div class=\"row text-center my-2\">\n          <div class=\"col-md-12\">\n            <ngb-rating class=\"ngb-ratingbar\" [(rate)]=\"rateData.rate\" [max]=\"5\" required></ngb-rating>\n          </div>\n        </div>\n        <div class=\"row text-center my-2\">\n          <div class=\"col-md-12\">\n            <textarea class=\"form-control\" [(ngModel)]=\"rateData.description\" name=\"description\"></textarea>\n          </div>\n        </div>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-6\">\n            <button class=\"btn btn-outline-dark w-100 barlow-medium text-smaller mb-3\" type=\"button\"\n              (click)=\"closeRateModal()\">\n              {{ \"CANCEL\" | translate }}\n            </button>\n          </div>\n          <div class=\"col-md-6\">\n            <button class=\"btn btn-warning w-100 barlow-medium text-smaller\" type=\"button\"\n              [disabled]=\"rateData.rate === 0\" (click)=\"rateProduct()\">\n              {{ \"SUBMIT\" | translate }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Observable } from 'rxjs';\nimport { ProductsModel, SubCategoryModel, VariantModel } from '../../models/category.model';\nimport { HelperService } from '../../../services/helper.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from \"@ngrx/store\";\nimport { CartState } from \"../../store/cart.reducer\";\nimport { environment } from \"../../../../environments/environment\";\nimport { ProductsService } from \"./products.service\";\nimport { CartService } from \"../cart/cart.service\";\nimport * as _ from 'lodash';\n\ndeclare let $: any;\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n  closeResult = '';\n  public productsList: Array<ProductsModel> = [];     // contains list of products\n  public selectedProduct: ProductsModel;      // contains selected product information\n  public selectedVariant: VariantModel;   // contains variant information\n  public categoryId: string = null;      // contains category id from route\n  public currencyCode: string = null;     // contains currency code\n  public isLoading: boolean = false;        // shows loader when true\n  public selectedQuantity: number = 1;      // contains selected quantity\n  public subCategories: Array<SubCategoryModel> = [];     // contains list of sub-categories\n  private subCategoryId: string = null;     // contains selected subcategory id\n  private userId: string = null;      // contains id of logged in user\n  private productIndex: number = 0;     // contains product index\n  public productImageUrl: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-173`;      // contains optimized product image url\n  public subCatFilterApplied: boolean = false;      // set to true when sub-category response is saved\n\n  constructor(private modalService: NgbModal, private helperService: HelperService, private route: ActivatedRoute, private store: Store<CartState>, private router: Router, private productsService: ProductsService, private cartService: CartService) {\n    this.store.select('cartInfo').subscribe(state => {\n      if (state && state.products.length > 0) {\n        state.products.forEach(cart => {\n          const index = this.productsList.findIndex(product => product._id === cart.productId);\n          if (index !== -1) {\n            this.productsList[index].isAddedToCart = true;\n            this.productsList[index].quantityToCart = cart.quantity;\n            this.productsList[index].cartId = state._id;\n            this.productsList[index].unitInCart = cart.unit;\n          }\n        });\n      }\n    });\n    this.helperService.currency$.subscribe(currencyCode => {\n      this.currencyCode = currencyCode;\n    });\n    this.route.params.subscribe(params => {\n      this.categoryId = params.id ? params.id : null;\n      if (this.categoryId) {\n        this.productIndex = 0;\n        this.subCatFilterApplied = false;\n      }\n    });\n    this.userId = localStorage.getItem('id');\n    this.getProductList();\n  }\n\n  ngOnInit(): void {\n    this.helperService.scrollTop();\n  }\n\n  // opens add to cart modal\n  public openAddToCartModal(content: TemplateRef<any>, product: ProductsModel): void {\n    if (localStorage.getItem('token') && localStorage.getItem('id')) {\n      this.selectedProduct = product;\n      this.selectedProduct.variant.forEach(variant => {\n        variant.quantity = 1;\n      });\n      this.selectedQuantity = 1;\n      this.selectedVariant = product.variant.length === 1 ? product.variant[0] : undefined;\n      if (this.selectedProduct.variant.length > 1) {\n        this.modalService\n          .open(content, { ariaLabelledBy: 'modal-basic-title', centered: true })\n          .result.then(\n            result => {\n              this.closeResult = `Closed with: ${result}`;\n            },\n            reason => {\n              this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n            });\n      } else {\n        this.addToCart();\n      }\n    } else {\n      this.helperService.infoToast(\"AUTH_REQ\");\n      this.router.navigate(['login'], { queryParams: { redirectTo: this.router.url } })\n    }\n  }\n\n  // closes add to cart modal\n  public closeAddToCartModal(): void {\n    this.modalService.dismissAll();\n    this.selectedProduct = undefined;\n    this.selectedVariant = undefined;\n    this.selectedQuantity = 1;\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  // checks cart state\n  private checkCartState(): void {\n    this.store.select('cartInfo').subscribe(state => {\n      if (state && state.products.length > 0) {\n        state.products.forEach(cart => {\n          const index = this.productsList.findIndex(product => product._id === cart.productId);\n          if (index !== -1) {\n            this.productsList[index].isAddedToCart = true;\n            this.productsList[index].quantityToCart = cart.quantity;\n            this.productsList[index].cartId = state._id;\n          }\n        });\n      }\n    });\n  }\n\n  // called when tab is changed\n  public tabChangeEvent(event): void {\n    this.productIndex = 0;\n    if (event.nextId === 'All') {\n      this.subCategoryId = null;\n      this.subCatFilterApplied = false;\n      this.productsList = [];\n      this.getProductList();\n    } else {\n      this.subCategoryId = event.nextId;\n      this.productsList = [];\n      this.getProductBySubCategory();\n    }\n  }\n\n  // get's products list. shows only 10 products\n  private getProductList(): void {\n    this.isLoading = true;\n    let product$: Observable<Array<ProductsModel>> = this.categoryId ? this.productsService.getProductByCategory(this.categoryId, this.productIndex) : this.productsService.getAllProducts(this.productIndex);\n    product$.subscribe((res: any) => {\n      this.isLoading = false;\n      if (this.productsList.length === 0) {\n        this.productsList = Array.isArray(res.response_data) ? res.response_data : res.response_data.products;\n      } else {\n        const newProducts = res.response_data.products && Array.isArray(res.response_data.products) ? res.response_data.products : Array.isArray(res.response_data) ? res.response_data : [];\n        if (newProducts.length > 0) {\n          this.productsList = this.productsList.concat(newProducts);\n        }\n      }\n      this.productsList = _.uniqBy(this.productsList, '_id');\n      this.calculateDealAmount();\n      if (this.categoryId) {\n        this.subCategories = res.response_data.subCategories;\n      }\n    }, error => {\n      this.isLoading = false;\n    });\n  }\n\n  // fetches product by sub-category\n  private getProductBySubCategory(): void {\n    if (!this.subCatFilterApplied) {\n      this.productsList = [];\n    }\n    const products$ = this.productsService.getProductBySubCategory(this.subCategoryId, this.productIndex);\n    products$.subscribe((res: any) => {\n      this.isLoading = false;\n      if (Array.isArray(res.response_data) && res.response_data.length > 0) {\n        this.subCatFilterApplied = true;\n        this.productsList = this.productsList.concat(res.response_data);\n        this.productsList = _.uniqBy(this.productsList, '_id');\n        this.calculateDealAmount();\n        this.checkCartState();\n      }\n    });\n  }\n\n\n  // calculates deal amount\n  private calculateDealAmount(): void {\n    this.productsList.forEach(product => {\n      if (product.isDealAvailable) {\n        product.variant.forEach(variant => {\n          variant.discountAmount = Number(variant.price) - (Number(variant.price) * (product.dealPercent / 100));\n        });\n      }\n    });\n  }\n\n  // called when window is scrolled down\n  public windowScrolledDown(): void {\n    this.productIndex += 1;\n    if (!this.subCategoryId) {\n      this.getProductList();\n    } else {\n      this.getProductBySubCategory();\n    }\n  }\n\n  // called when window is scrolled up\n  public windowScrolledUp(): void {\n    // this.productIndex += 10;\n    this.getProductList();\n  }\n\n  // increments/decrements quantity\n  public changeQuantity(type: string, product: ProductsModel): void {\n    if (type === 'increment') {\n      let quantity = product.quantityToCart;\n      quantity += 1;\n      // this.store.dispatch(new CartActions.UpdateCartAction({cartId: product.cartId, productId: product._id, quantity}));\n      this.updateCartData(product, quantity);\n    } else {\n      if (product.quantityToCart > 1) {\n        let quantity = product.quantityToCart;\n        quantity -= 1;\n        this.updateCartData(product, quantity);\n      } else {\n        this.cartService.deleteProductFromCart(product._id).subscribe((res: any) => {\n          product.isAddedToCart = false;\n          product.quantityToCart = undefined;\n          product.cartId = undefined;\n          product.unitInCart = undefined;\n          this.cartService.checkCartFormat(res, 'delete');\n        });\n      }\n    }\n  }\n\n  // updates cart data\n  private updateCartData(product, quantity) {\n    this.cartService.updateCart({\n      cartId: product.cartId, productId: product._id, quantity, unit: product.variant[0].unit\n    }).subscribe((res: any) => {\n      this.cartService.checkCartFormat(res, 'update');\n    });\n  }\n\n  // this event is called when a variant is selected\n  public variantSelectionEvent(event, variant: VariantModel): void {\n    this.selectedVariant = event.target.checked ? variant : undefined;\n    this.selectedQuantity = 1;\n  }\n\n  // increment quantity\n  public incrementQuantity(): void {\n    this.selectedQuantity += 1\n  }\n\n  // decrement quantity\n  public decrementQuantity(): void {\n    if (this.selectedQuantity > 1) {\n      this.selectedQuantity -= 1;\n    }\n  }\n\n\n  // sends request to add to cart\n  public addToCart(): void {\n    this.cartService.prepareCartData(this.selectedProduct, this.selectedVariant, this.selectedQuantity);\n    this.closeAddToCartModal();\n  }\n}\n","<div class=\"container-fluid color-lightblue product-page\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n\n    <div class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\">\n      <br /><br />\n\n      <!-- showing results -->\n\n      <div class=\"bottom-border\">\n        <h5 class=\"barlow-bold text-normal color-b mt-5 pb-2 main-title\">\n          {{ \"PRODUCTS\" | translate }}\n        </h5>\n      </div>\n      <br /><br />\n\n      <ngb-tabset type=\"pills\" class=\"nav-block\" *ngIf=\"categoryId\" (tabChange)=\"tabChangeEvent($event)\">\n        <ngb-tab [id]=\"'All'\" title=\"{{ 'ALL' | translate }}\" class=\"nav-block\">\n          <ng-template ngbTabContent>\n            <ng-container *ngTemplateOutlet=\"\n                productsList.length > 0 ? productListTemplate : noData\n              \"></ng-container>\n          </ng-template>\n        </ngb-tab>\n\n        <ngb-tab class=\"nav-block\" *ngFor=\"let subCategory of subCategories\" [title]=\"subCategory.title\"\n          [id]=\"subCategory._id\">\n          <ng-template ngbTabContent>\n            <ng-container *ngTemplateOutlet=\"\n                productsList.length > 0 ? productListTemplate : noData\n              \"></ng-container>\n          </ng-template>\n        </ngb-tab>\n      </ngb-tabset>\n\n      <ng-container *ngIf=\"!categoryId\">\n        <div *ngTemplateOutlet=\"productListTemplate\"></div>\n      </ng-container>\n\n      <br /><br />\n      <app-footer></app-footer>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <ng-template #productListTemplate>\n        <div class=\"row mt-4 mb-4 mx-1\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollUpDistance]=\"2\"\n          [infiniteScrollThrottle]=\"1000\" (scrolled)=\"windowScrolledDown()\" (scrolledUp)=\"windowScrolledUp()\">\n          <div class=\"col-md-4 pointer col-xl-4 col-lg-6\" *ngFor=\"let product of productsList\">\n            <div class=\"products bg-white radius-8\">\n              <div class=\"row\">\n                <div class=\"col-md-6 col-6\">\n                  <ng-container>\n                    <img [src]=\"product.productImages && product.productImages.length > 0 ? (product.productImages[0].filePath ? productImageUrl+product.productImages[0].filePath : product.productImages[0].imageUrl) : (product.filePath ? productImageUrl+product.filePath : product.imageUrl)\"\n                      \n                      class=\"product-img relative\" [routerLink]=\"['/product-details', product._id]\" />\n                  </ng-container>\n                  <!-- <ng-container *ngIf=\"!product.filePath\">\n                    <img [src]=\"product.imageUrl\" class=\"product-img relative\"\n                      [routerLink]=\"['/product-details', product._id]\" />\n                  </ng-container> -->\n                  <div class=\"rating-badge absolute\">\n                    <span class=\"badge badge-success\">\n                      <ngb-rating *ngIf=\"product.averageRating\" [rate]=\"product.averageRating\" [readonly]=\"true\"\n                        [max]=\"5\">\n                        <ng-template let-fill=\"fill\" let-index=\"index\">\n                          <span class=\"star\" [class.full]=\"fill === 100\">\n                            <span class=\"half\" [style.width.%]=\"fill\">&#9733;</span>&#9733;\n                          </span>\n                        </ng-template>\n                      </ngb-rating>\n                    </span>\n                  </div>\n\n                  <span class=\"badge badge badge-warning offer-badge\">\n                    <div class=\"off\" *ngIf=\"product.isDealAvailable\">\n                      <h6 class=\"color-w text-center m-0 text-small barlow-medium\">\n                        {{ product.dealPercent }}% {{ \"OFF\" | translate }}\n                      </h6>\n                    </div>\n                  </span>\n                </div>\n                <div class=\"col-md-6 col-6\">\n                  <h6 class=\"text-med barlow-medium\" [routerLink]=\"['/product-details', product._id]\">\n                    {{\n                      product.title.length > 22\n                        ? (product.title | slice: 0:18) + \"...\"\n                        : product.title\n                    }}\n                  </h6>\n                  <h6 class=\"smaller-text barlow-regular color-b-c\" [routerLink]=\"['/product-details', product._id]\">\n                    {{ product.description | slice: 0:25 }}\n                  </h6>\n\n                  <div class=\"add-button pt-2\" *ngIf=\"!product.isAddedToCart\">\n                    <button class=\"btn btn-warning barlow-medium text-small btn-sm add-btn pointer\" type=\"button\"\n                      (click)=\"openAddToCartModal(content, product)\">\n                      {{ \"ADD_TO_CART\" | translate }}\n                    </button>\n                  </div>\n                  <div class=\"cart-quantity \" *ngIf=\"product.isAddedToCart\">\n                    <p class=\"pointer\" (click)=\"changeQuantity('decrement', product)\">\n                      <img src=\"assets/icons/minus.svg\" />\n                    </p>\n                    <h6 class=\"barlow-regular text-smallest color-b pt-1\">\n                      {{ product.quantityToCart }}\n                    </h6>\n                    <p class=\"pointer\" (click)=\"changeQuantity('increment', product)\">\n                      <img src=\"assets/icons/plus.svg\" class=\"pointer\" />\n                    </p>\n                  </div>\n                  <div class=\"row pt-1\">\n                    <ng-container *ngIf=\"product.isDealAvailable\">\n                      <div class=\"col-md-12\">\n                        <div class=\"row mt-2 pt-1\">\n                          <div class=\"col-md-8\">\n                            <h6 class=\"text-smallest barlow-regular color-b-c mb-0 word-b\">\n                              <del>{{\n                                product.variant[0].price\n                                  | currency: currencyCode:\"symbol\":\"1.2-2\"\n                              }}</del>\n\n                              <span class=\"color-green barlow-bold text-smaller mb-0 word-b\">\n                                {{\n                                  product.variant[0].discountAmount\n                                    | currency: currencyCode:\"symbol\":\"1.2-2\"\n                                }}\n                              </span>\n                            </h6>\n\n\n                          </div>\n                          <div class=\"col-md-4 pl-0\">\n                            <h6 class=\"barlow-medium text-smallest\">\n                              {{ product.variant[0].unit }}\n                            </h6>\n                          </div>\n                        </div>\n                      </div>\n                      <!-- <div class=\"col-md-12\">\n                      {{product.variant[0].unit}}\n                    </div> -->\n                    </ng-container>\n                    <ng-container *ngIf=\"!product.isDealAvailable\">\n                      <div class=\"col-md-8 mt-3\">\n                        <h6 class=\"color-green barlow-bold text-smaller mb-0 word-b\">\n                          {{\n                            product.variant[0].price\n                              | currency: currencyCode:\"symbol\":\"1.2-2\"\n                          }}\n                        </h6>\n                      </div>\n                      <div class=\"col-md-4  mt-3\">\n                        <h6 class=\"barlow-medium text-smaller\">\n                          {{ product.variant[0].unit }}\n                        </h6>\n                      </div>\n                    </ng-container>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"products-outstock\" *ngIf=\"\n                product.variant.length === 1 &&\n                product.variant[0].productStock === 0\n              \">\n              <h6 class=\"barlow-medium color-w\">\n                {{ \"OUT_OF_STOCK\" | translate }}\n              </h6>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n\n  <ng-template #noData>\n    <h5 class=\"color-green text-center\">\n      {{ \"NO_PRODUCTS_FOUND\" | translate }}\n    </h5>\n  </ng-template>\n  <!-- modal -->\n\n  <ng-template #content let-modal>\n    <div class=\"\">\n      <div class=\"row px-3 pt-3\">\n        <div class=\"col-md-8 col-7\">\n          <h4 class=\"modal-title h1md barlow-bold prod-name\" id=\"modal-basic-title\">\n            {{ \"CHOOSE_QUANTITY\" | translate }}\n          </h4>\n        </div>\n        <div class=\"col-md-4 col-5\">\n          <div *ngIf=\"selectedVariant\">\n            <div class=\"cart-quantity\">\n              <p class=\"pointer\" (click)=\"decrementQuantity()\">\n                <img src=\"assets/icons/minus.svg\" />\n              </p>\n              <h6 class=\"barlow-regular text-smallest color-b pt-1\">\n                {{ selectedQuantity }}\n              </h6>\n              <p class=\"pointer\" (click)=\"incrementQuantity()\">\n                <img src=\"assets/icons/plus.svg\" class=\"pointer\" />\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"row\" *ngFor=\"let variant of selectedProduct.variant\">\n        <div class=\"col-md-3 col-4\">\n          <h5 class=\"barlow-regular color-b-c text-medium main-title\">\n            {{ variant.unit }}\n          </h5>\n        </div>\n        <div class=\"col-md-8 col-8\">\n          <label class=\"container customcheck text-medium color-b-c barlow-regular pointer\">\n            <ng-container *ngIf=\"!selectedProduct.isDealAvailable\">\n              <strong class=\"price color-green prod-price\">\n                {{ variant.price | currency: currencyCode:\"symbol\":\"1.2-2\" }}\n              </strong>\n            </ng-container>\n            <ng-container *ngIf=\"selectedProduct.isDealAvailable\">\n              <strong class=\"price prod-price\">\n                <del>{{\n                  variant.price | currency: currencyCode:\"symbol\":\"1.2-2\"\n                }}</del>\n              </strong>\n              <strong class=\"price color-green ml-1 prod-price\">\n                {{\n                  variant.discountAmount\n                    | currency: currencyCode:\"symbol\":\"1.2-2\"\n                }}\n              </strong>\n            </ng-container>\n            <input type=\"checkbox\" [checked]=\"\n                selectedVariant ? variant._id === selectedVariant._id : false\n              \" (change)=\"variantSelectionEvent($event, variant)\" [disabled]=\"variant.productStock === 0\" />\n            <span class=\"checkmark\" style=\"right: 0rem !important\"></span>\n          </label>\n        </div>\n      </div>\n      <div class=\"row text-center\">\n        <div class=\"col-md-6 col-6\">\n          <button type=\"button\" class=\"btn btn-light w-100 mt-4 cancel-btn barlow-regular h1sm\"\n            (click)=\"closeAddToCartModal()\">\n            {{ \"CANCEL\" | translate }}\n          </button>\n        </div>\n        <div class=\"col-md-6 col-6\">\n          <button type=\"button\" class=\"btn btn-warning w-100 mt-4 cart-btn barlow-regular h1sm pointer\"\n            [disabled]=\"!selectedVariant\" (click)=\"addToCart()\">\n            {{ \"ADD_TO_CART\" | translate }} &nbsp;\n            <img src=\"assets/icons/cart.png\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</div>","import { Injectable } from \"@angular/core\";\nimport { CrudService } from \"../../../services/crud.service\";\nimport { Observable } from \"rxjs\";\nimport { RateModel } from \"../../models/order.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private crud: CrudService) {\n  }\n\n  // get's all products\n  public getAllProducts(page: number): Observable<any> {\n    return this.crud.getData(`/products/list?limit=10&page=${page}`);\n  }\n\n  // searches product with product name\n  public searchProduct(page, input: string): Observable<any> {\n    return this.crud.getData(`/products/search?q=${input}&page=${page}&limit=10`)\n  }\n\n  // get's product by category\n  public getProductByCategory(categoryId: string, page: number): Observable<any> {\n    return this.crud.getData(`/products/category/${categoryId}?page=${page}&limit=10`)\n  }\n\n  // get's product by sub-category\n  public getProductBySubCategory(subCategoryId: string, page: number): Observable<any> {\n    return this.crud.getData(`/products/sub-category/${subCategoryId}?page=${page}&limit=10`);\n  }\n\n  // get's products details\n  public getProductDetails(productId: string): Observable<any> {\n    return this.crud.getData(`/products/detail/${productId}`)\n  }\n\n  // get's related products\n  public getRelatedProducts(): Observable<any> {\n    return this.crud.getData('/products/related')\n  }\n\n  // get's users wishlist\n  public getWishList(): Observable<any> {\n    return this.crud.getData(`/favourites/list`);\n  }\n\n  // adds' product to wishlist\n  public addToWishList(productId: string): Observable<any> {\n    return this.crud.saveData(`/favourites/add/${productId}`, undefined);\n  }\n\n  // removes product from wishlist\n  public removeProductFromWishList(productId: string): Observable<any> {\n    return this.crud.deleteData(`/favourites/remove/${productId}`);\n  }\n\n  // saves product rating\n  public saveProductRating(ratingData: RateModel): Observable<any> {\n    return this.crud.saveData('/ratings/rate', ratingData);\n  }\n}\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { NgbModal, ModalDismissReasons, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { HelperService } from '../../../services/helper.service';\nimport { MessageModel } from '../../models/chat.model';\nimport { Router } from '@angular/router';\nimport { OTPModel, UserInfoModel } from '../../models/auth.model';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { environment } from '../../../../environments/environment';\nimport { AddressModel } from '../../models/order.model';\nimport { LanguagesModel } from \"../../models/category.model\";\nimport { CartService } from \"../cart/cart.service\";\nimport { SocketService } from \"../../../services/socket.service\";\nimport { CheckoutService } from \"../checkout/checkout.service\";\nimport { ProfileService } from \"./profile.service\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  public verifyMobileNumber: boolean = false    //set to true when otp of mobileNumber updation is sent\n  public profileUpdateForm: FormGroup;      // create a reactive form for profile update section\n  private modalRef: NgbModalRef;      // contains modal update profile reference\n  public addressList: Array<AddressModel> = [];        // contains list of addresses\n  public addressData: AddressModel;     // contains address information\n  public addressId: string = null;      // contains address id of selected address\n  public selectedAddress: AddressModel;     // contains information of selected address\n  public defaultProfilePic: string = 'assets/images/default_user.png';        // user default profile picture\n  public profileImage: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-160`;      // contains optimized profile image url\n  public isDisabled: boolean = false;     // disables button when true\n  public languageList: Array<LanguagesModel> = [];      // contains list of language set by admin\n  public showMap: boolean = false;     //    set to true when address is fetched from the geocoding api\n  public hideEdit: boolean = false;     //    set to true when address is fetched from the geocoding api\n  public mapAddress: string = null;      // contains map address\n  public location = {\n    lat: null,\n    lng: null\n  };      // contains current and updated location information\n  public adminLocation: Array<number> = [];     // contains store location information\n  public walletBalance: number = 0;       // contains user's wallet balance\n  public currencyCode: string = null;     // contains users currency code\n  public changePasswordForm: FormGroup;     // contains change password form instance\n  public addressTypes: Array<string> = [];      // contains list of address types\n  public otpInfo: OTPModel = {\n    mobileNumber: '',\n    sId: '',\n    otp: '',\n  }                      // contains otp \n\n  public profileInfo: UserInfoModel = {\n    location: {\n      type: null,\n      coordinates: []\n    },\n    _id: null,\n    deliveryAreaCode: [],\n    firstName: null,\n    lastName: null,\n    email: null,\n    mobileNumber: null,\n    role: null,\n    freeDeliveryDistance: null,\n    deliveryCharge: null,\n    deliveryDistanceUnit: null,\n    registrationDate: null,\n    emailVerified: null,\n    verificationId: null,\n    deliverytimingslot: null,\n    createdAt: null,\n    updatedAt: null,\n    imageUrl: null,\n    filePath: null,\n    language: ''\n  }\n\n  constructor(private modalService: NgbModal, private helperService: HelperService, private router: Router, private cartService: CartService, private socketService: SocketService, private checkoutService: CheckoutService, private profileService: ProfileService) {\n    this.helperService.currency$.subscribe(currency => {\n      this.currencyCode = currency;\n    });\n    this.checkoutService.wallet$.subscribe(walletBalance => {\n      if (walletBalance) {\n        this.walletBalance = walletBalance;\n      }\n    });\n    this.checkoutService.store$.subscribe(data => {\n      if (data) {\n        this.adminLocation = data;\n      }\n    });\n\n    if (localStorage.getItem('languageList')) {\n      this.languageList = JSON.parse(atob(localStorage.getItem('languageList')));\n    }\n    this.addressData = this.getDefaultAddressValues();\n    this.buildChangePasswordForm();\n    this.getUserProfileInfo();\n    this.getUserAddressList();\n  }\n\n  // opens change password modal\n  public openChangePasswordModal(modalRef: TemplateRef<any>): void {\n    this.modalService.open(modalRef, { ariaLabelledBy: 'modal-basic-title', centered: true });\n  }\n\n  // sends request to change password\n  public changePassword(): void {\n    this.profileService.changePassword(this.changePasswordForm.value).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.clearSessionAndLogout();\n    });\n  }\n\n  // closes change password modal\n  public closeChangePasswordModal(): void {\n    this.modalService.dismissAll();\n    this.changePasswordForm.reset();\n  }\n\n  // build change password form instance\n  private buildChangePasswordForm(): void {\n    this.changePasswordForm = new FormGroup({\n      currentPassword: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(35)]),\n      newPassword: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(35)]),\n      confirmPassword: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(35)])\n    });\n  }\n\n  // get's default address values\n  private getDefaultAddressValues(address?: AddressModel): AddressModel {\n    return {\n      address: address ? address.address : '',\n      flatNo: address ? address.flatNo : '',\n      mobileNumber: address ? address.mobileNumber : '',\n      user: address ? address.user : '',\n      postalCode: address ? address.postalCode : '',\n      addressType: address ? address.addressType : '',\n      apartmentName: address ? address.apartmentName : '',\n      landmark: address ? address.landmark : '',\n      location: address ? address.location : { latitude: null, longitude: null }\n    };\n  }\n\n  // builds profile update form\n  public buildProfileUpdateForm(): void {\n    this.profileUpdateForm = new FormGroup({\n      firstName: new FormControl(this.profileInfo.firstName, [Validators.required]),\n      lastName: new FormControl(this.profileInfo.lastName, [Validators.required]),\n      email: new FormControl(this.profileInfo.email),\n      imageUrl: new FormControl(this.profileInfo.imageUrl),\n      filePath: new FormControl(this.profileInfo.filePath ? this.profileInfo.filePath : ''),\n      mobileNumber: new FormControl(this.profileInfo.mobileNumber, [Validators.required])\n    });\n  }\n\n  // get's user address list\n  private getUserAddressList(): void {\n    const address$ = this.checkoutService.getAddress();\n    const addressTypes$ = this.checkoutService.getAddressTypeList();\n    this.addressTypes = [];\n    address$.subscribe((res: any) => {\n      this.addressList = res.response_data;\n      this.selectedAddress = undefined;\n    });\n    addressTypes$.subscribe((res: any) => {\n      if (res.response_code === 200) {\n        for (let val in res.response_data) {\n          this.addressTypes.push(res.response_data[val]);\n        }\n      }\n    })\n  }\n\n  // contains user's profile information\n  private getUserProfileInfo(): void {\n    this.profileService.getUserProfileInformation().subscribe((res: any) => {\n      this.profileInfo = res.response_data.userInfo ? res.response_data.userInfo : res.response_data;\n      if (this.profileInfo.filePath && !this.profileInfo.imageUrl) {\n        this.profileInfo.imageUrl = `${this.profileImage}/${this.profileInfo.filePath}`\n      }\n    });\n  }\n\n  // opens profile update modal\n  public openProfileUpdateModal(content: TemplateRef<any>): void {\n    this.buildProfileUpdateForm();\n    this.modalRef = this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title', centered: true });\n  }\n\n  // opens profile update modal\n  public openProfileMobileNumberUpdateModal(content: TemplateRef<any>): void {\n    this.buildProfileUpdateForm();\n    this.modalRef = this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title', centered: true });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  // opens file picker\n  public openFilePicker(): void {\n    const inputEle = document.getElementById('file-picker');\n    if (inputEle) {\n      inputEle.click();\n    }\n  }\n\n  // read's selected file\n  public readImage(event): void {\n    if (event.target.files.length > 0) {\n      this.isDisabled = true;\n      let formData = new FormData();\n      formData.append('file', event.target.files[0]);\n      this.profileService.uploadImage(formData).subscribe((res: any) => {\n        this.isDisabled = false;\n        if (res.response_code === 200) {\n          this.profileUpdateForm.controls['imageUrl'].patchValue(res.response_data.url);\n          this.profileUpdateForm.controls['filePath'].patchValue(res.response_data.filePath);\n        }\n      }, () => {\n        this.isDisabled = false;\n        this.helperService.errorToast(\"IMG_UP_FAIL\");\n      })\n    }\n  }\n\n  // sends request to update profile\n  public updateProfile() {\n    this.profileInfo.firstName = this.profileUpdateForm.value.firstName;\n    this.profileInfo.lastName = this.profileUpdateForm.value.lastName;\n    this.profileInfo.mobileNumber = String(this.profileUpdateForm.value.mobileNumber);\n    this.profileInfo.imageUrl = this.profileUpdateForm.value.imageUrl;\n    this.profileInfo.filePath = this.profileUpdateForm.value.filePath;\n    this.profileInfo.email = this.profileUpdateForm.value.email;\n    this.profileService.updateUserProfile(this.profileInfo).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.closeModal();\n      this.helperService.getUserProfileInformation();\n      this.getUserProfileInfo();\n    });\n  }\n\n  // geo-coders address by co-ordinates\n  private fetchAddress(latitude: number, longitude: number, content?: TemplateRef<any>): void {\n    if (!latitude || !longitude) {\n      latitude = this.adminLocation[0];\n      longitude = this.adminLocation[1];\n    }\n    this.helperService.getLocationInfoByCoOrdinates(latitude, longitude).subscribe((res: any) => {\n      if (res.status === 'OK') {\n        if (content) {\n          this.modalRef = this.modalService.open(content, { backdrop: false, keyboard: false });\n        }\n        this.mapAddress = res.results[0].formatted_address;\n        const postalCode = res.results[0].address_components.find(data => data.types.includes('postal_code'));\n        this.addressData.postalCode = postalCode ? postalCode.long_name : '';\n        this.showMap = true;\n      } else {\n        if (res.error_message) {\n          return this.helperService.errorToast(res.error_message, true);\n        }\n        this.showMap = true;\n        this.helperService.errorToast(\"MAP_ERROR\");\n      }\n    }, () => {\n      this.showMap = true;\n      this.helperService.errorToast(\"MAP_ERROR\");\n    });\n  }\n\n  // sets map show status\n  public setMapShowStatus(): void {\n    this.showMap = !this.showMap;\n    this.mapAddress = this.addressData.address;\n    this.location = { lat: this.addressData.location.latitude, lng: this.addressData.location.longitude };\n    this.hideEdit = this.showMap === false;\n  }\n\n  // opens address modal\n  public openAddressModal(content: TemplateRef<string>) {\n    navigator.geolocation.getCurrentPosition(coOrdinates => {\n      let address;\n      if (this.selectedAddress) {\n        address = this.addressList.find(a => a._id === this.selectedAddress._id)\n      }\n      this.addressData = this.getDefaultAddressValues(address);\n      if (address) {\n        this.addressId = address._id;\n        this.mapAddress = this.addressData.address;\n        this.showMap = false;\n        this.hideEdit = false;\n        this.modalRef = this.modalService.open(content, { keyboard: false, backdrop: false });\n      } else {\n        this.location.lat = coOrdinates.coords.latitude;\n        this.location.lng = coOrdinates.coords.longitude;\n        this.fetchAddress(this.location.lat, this.location.lng, content);\n        this.mapAddress = null;\n        this.showMap = true;\n      }\n      this.hideEdit = false;\n    }, error => {\n      let address;\n      if (this.selectedAddress) {\n        address = this.addressList.find(a => a._id === this.selectedAddress._id)\n      }\n      if (!address) {\n        this.addressData = this.getDefaultAddressValues();\n        this.location.lat = this.adminLocation[0];\n        this.location.lng = this.adminLocation[1];\n        this.mapAddress = null;\n        this.fetchAddress(this.location.lat, this.location.lng, content);\n      } else {\n        this.addressData = this.getDefaultAddressValues(address);\n        this.mapAddress = this.addressData.address;\n        this.showMap = false;\n        this.hideEdit = false;\n        this.addressId = address._id;\n        this.modalRef = this.modalService.open(content, { keyboard: false, backdrop: false });\n      }\n    });\n  }\n\n  // navigates to chat page\n  public navigateToChat(): void {\n    window.location.href = 'chat';\n  }\n\n  // calls when map marker is dragged\n  public markerDraggedEvent(data): void {\n    this.location.lat = data.lat;\n    this.location.lng = data.lng;\n    this.fetchAddress(data.lat, data.lng);\n  }\n\n  // check's operation type before making the api call\n  private checkOperationType() {\n    this.addressData.user = this.profileInfo._id;\n    if (!this.addressId) {\n      this.saveAddress();\n    } else {\n      this.updateAddress();\n    }\n  }\n\n  // set's map address\n  public setMapAddress(): void {\n    this.addressData.address = this.mapAddress;\n    this.addressData.location.latitude = this.location.lat;\n    this.addressData.location.longitude = this.location.lng;\n    this.showMap = false;\n    this.hideEdit = false;\n  }\n\n  // sends request to save address\n  private saveAddress(): void {\n    this.checkoutService.saveAddress(this.addressData).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.closeAddressModal();\n      this.getUserAddressList();\n    });\n  }\n\n  // sends request to update address\n  private updateAddress(): void {\n    this.checkoutService.updateAddress(this.addressId, this.addressData).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.closeAddressModal();\n      this.getUserAddressList();\n    });\n  }\n\n  // sends request to delete address\n  public deleteAddress(): void {\n    this.checkoutService.deleteAddress(this.selectedAddress._id).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.getUserAddressList();\n    });\n  }\n\n  // closes address model\n  public closeAddressModal(): void {\n    this.modalService.dismissAll();\n    this.addressData = this.getDefaultAddressValues(undefined);\n    this.addressId = null;\n    this.selectedAddress = undefined;\n  }\n\n  // closes profile update modal\n  public closeModal(): void {\n    this.modalRef.close();\n    this.profileUpdateForm.reset();\n  }\n\n  // cleans the session and logs out the user\n  public clearSessionAndLogout(): void {\n    this.cartService.clearCart();\n    localStorage.clear();\n    window.location.href = 'home';\n  }\n\n  // sends request to save address\n  public geoCodeAddress(): void {\n    this.checkOperationType();\n  }\n\n  // update mobile Number\n  updateMobileNumber() {\n    const body = {\n      mobileNumber: String(this.profileUpdateForm.value.mobileNumber)\n    }\n    this.profileService.updateMobileNumber(body).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.otpInfo.mobileNumber = String(this.profileUpdateForm.value.mobileNumber);\n      this.otpInfo.sId = res.sId;\n      this.verifyMobileNumber = true;\n    })\n  }\n  // verify otp\n  public verifyOTPNumber(): void {\n    this.profileService.otpVerify(this.otpInfo).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.profileInfo.mobileNumber = String(this.profileUpdateForm.value.mobileNumber);\n      this.closeModal()\n      this.router.navigate(['profile']);\n    });\n  }\n\n  ngOnInit(): void {\n    this.helperService.scrollTop();\n  }\n}\n","<div class=\"container-fluid color-lightblue saved-items-page\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n\n    <div class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\">\n      <!-- <div class=\"app-bar\">\n        <app-header-component></app-header-component>\n      </div> -->\n\n      <br /><br />\n      <br /><br />\n\n      <div class=\"row\">\n        <div class=\"col-md-6 col-xl-6 col-lg-12 mb-5\">\n          <div class=\"profile-block radius-8 bg-white p-4\">\n            <div class=\"row mt-4\">\n              <div class=\"col-md-4 col-6\" *ngIf=\"profileInfo.imageUrl\">\n                <div class=\"profile-img\">\n                  <ng-container *ngIf=\"!profileInfo.filePath\">\n                    <img [src]=\"profileInfo.imageUrl\" (error)=\"profileInfo.imageUrl = defaultProfilePic\"\n                      class=\"avatar\" />\n                  </ng-container>\n                  <ng-container *ngIf=\"profileInfo.filePath\">\n                    <img [src]=\"profileImage + profileInfo.filePath\" class=\"avatar\" />\n                  </ng-container>\n                </div>\n              </div>\n              <div class=\"col-md-7 col-6\">\n                <h6 class=\"barlow-medium text-big prod-name\">\n                  {{ profileInfo.firstName }}&nbsp;{{ profileInfo.lastName }}\n                </h6>\n                <h6 class=\"barlow-medium text-normal color-b-c emailblock prod-desc\">\n                  {{ profileInfo.email }}\n                </h6>\n                <h6 class=\"barlow-medium text-normal color-b-c\">\n                  {{ profileInfo.mobileNumber }}\n                </h6>\n                <button type=\"button\" class=\"btn btn-outline-dark w-100 mt-4 text-small main-title\"\n                  [routerLink]=\"['/wallet']\">\n                  {{ \"WALLET\" | translate }}\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-dark w-100 mt-4 text-small main-title\"\n                  (click)=\"openProfileUpdateModal(content)\">\n                  {{ \"EDIT_PROFILE\" | translate }}\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-dark w-100 mt-4 text-small main-title\"\n                  (click)=\"openProfileMobileNumberUpdateModal(mobileNumber)\">\n                  {{ \"EDIT_MOBILE_NUMBER\" | translate }}\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-dark w-100 mt-4 text-small main-title\"\n                  (click)=\"openChangePasswordModal(changePasswordModal)\">\n                  {{ \"CHANGE_PASSWORD\" | translate }}\n                </button>\n              </div>\n            </div>\n            <br />\n            <hr />\n            <br />\n            <div class=\"row\">\n              <div class=\"col-md-4 col-4 text-center showPointer\" routerLink=\"/orders\">\n                <div class=\"profile-settings\">\n                  <img src=\"assets/icons/clock.png\" />\n                </div>\n                <h6 class=\"barlow-regular text-normal main-title\">\n                  {{ \"ORDER_HISTORY\" | translate }}\n                </h6>\n              </div>\n              <div class=\"col-md-4 col-4 text-center showPointer\" (click)=\"navigateToChat()\">\n                <div class=\"profile-settings-card\">\n                  <img src=\"assets/icons/card.png\" />\n                </div>\n                <h6 class=\"barlow-regular text-normal main-title\">\n                  {{ \"CHAT\" | translate }}\n                </h6>\n              </div>\n              <div class=\"col-md-4 col-4 text-center showPointer\" (click)=\"clearSessionAndLogout()\">\n                <div class=\"profile-settings-logout\">\n                  <img src=\"assets/icons/lgout.png\" />\n                </div>\n                <h6 class=\"barlow-regular text-normal main-title\">\n                  {{ \"LOG_OUT\" | translate }}\n                </h6>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-4 col-xl-4 col-lg-6\">\n          <div class=\"delievry-address radius-10 bg-white p-3\">\n            <h6 class=\"text-normal barlow-bold mb-3 main-title\">\n              {{ \"SAVED_ADDRESSES\" | translate }}\n            </h6>\n            <h6 class=\"text-center color-green\" *ngIf=\"addressList.length === 0\">{{\"NO_ADDRESS\" | translate}}</h6>\n            <ng-container *ngFor=\"let address of addressList\">\n              <div class=\"custom-control custom-radio\">\n                <input type=\"radio\" [id]=\"address._id\" [name]=\"address._id\" class=\"custom-control-input\"\n                  (change)=\"selectedAddress = address\"\n                  [checked]=\"selectedAddress ? selectedAddress._id === address._id : false\" />\n                <label class=\"custom-control-label barlow-regular color-b-c smaller-text pointer\" [for]=\"address._id\">\n                  {{address.flatNo}},{{address.apartmentName}},{{ address.address }}\n                </label>\n              </div>\n              <br />\n            </ng-container>\n            <div class=\"row text-center\" *ngIf=\"addressList.length > 0\">\n              <div class=\"col-md-5 offset-md-1 col-6\">\n                <button type=\"button\" class=\"btn btn-outline-dark w-100 mt-4 text-small\" [disabled]=\"!selectedAddress\"\n                  (click)=\"openAddressModal(addressModal)\">\n                  {{ \"EDIT\" | translate }}\n                </button>\n              </div>\n              <div class=\"col-md-5 col-6\">\n                <button type=\"button\" class=\"btn btn-outline-dark w-100 mt-4 text-small\" [disabled]=\"!selectedAddress\"\n                  (click)=\"deleteAddress()\">\n                  {{ \"DELETE\" | translate }}\n                </button>\n              </div>\n            </div>\n            <hr />\n\n            <br />\n            <br /><br />\n            <button type=\"button\" class=\"btn btn-outline-dark w-100 mb-4 barlow-regular color-b-b\"\n              (click)=\"selectedAddress = undefined;openAddressModal(addressModal)\">\n              {{ \"ADD_NEW_ADDRESS\" | translate }}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <br /><br />\n\n      <br /><br />\n      <app-footer></app-footer>\n    </div>\n  </div>\n\n  <!-- edit profile modal -->\n  <br /><br /><br /><br />\n\n  <ng-template #content let-modal>\n    <br />\n    <br />\n    <br /><br /><br /><br />\n    <div class=\"modal-body\">\n      <div class=\"row add-profile\">\n        <div class=\"col-md-5\">\n          <div class=\"profile-img\">\n            <img [src]=\"profileUpdateForm.controls['imageUrl'].value\"\n              *ngIf=\"profileUpdateForm.controls['imageUrl'].value\" class=\"prof-img\" />\n            <a class=\"showPointer\" (click)=\"openFilePicker()\"><img src=\"assets/icons/camera.png\" class=\"camera\" /></a>\n            <input type=\"file\" accept=\"image/*\" style=\"display: none;\" id=\"file-picker\" (change)=\"readImage($event)\" />\n          </div>\n          <h6 class=\"barlow-regular color-b-c text-normal text-center mt-4\">\n            <!--            {{profileInfo.email}}-->\n          </h6>\n        </div>\n\n        <div class=\"col-md-7\">\n          <form (ngSubmit)=\"updateProfile()\" [formGroup]=\"profileUpdateForm\">\n            <div class=\"form-group mx-2\">\n              <label for=\"exampleInputEmail1\" class=\"barlow-regular color-b-c text-small\">\n                {{ \"FIRST_NAME\" | translate }}\n              </label>\n              <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\n                placeholder=\"{{ 'F_NAME' | translate }}\" formControlName=\"firstName\" />\n            </div>\n            <div class=\"form-group mx-2\">\n              <label for=\"exampleInputEmail1\" class=\"barlow-regular color-b-c text-small\">{{ \"LAST_NAME\" | translate }}\n              </label>\n              <input type=\"email\" class=\"form-control\" id=\"exampleInpsutEmail1\" aria-describedby=\"emailHelp\"\n                placeholder=\"{{ 'L_NAME' | translate }}\" formControlName=\"lastName\" />\n            </div>\n            <div class=\"form-group mx-2\">\n              <label for=\"exampleInputEmail1\" class=\"barlow-regular color-b-c text-small\">{{ \"EMAIL\" | translate }}\n              </label>\n              <input type=\"email\" class=\"form-control\" id=\"exampleInpsutEmail1\" aria-describedby=\"emailHelp\"\n                placeholder=\"{{ 'EMAIL' | translate }}\" formControlName=\"email\" />\n            </div>\n            <!-- <div class=\"form-group mx-2\">\n              <label for=\"exampleInputEmail1\"\n                class=\"barlow-regular color-b-c text-small\">{{ \"MOBILE_NUMBER\" | translate }}\n              </label>\n              <input type=\"number\" class=\"form-control\" id=\"exampleInpsutEmasasil1\" aria-describedby=\"emailHelp\"\n                placeholder=\"{{ 'M_NUM' | translate }}\" formControlName=\"mobileNumber\" />\n            </div> -->\n\n            <br />\n            <div class=\"row\">\n              <div class=\"col-md-5 mb-4 col-6\">\n                <button type=\"button\" class=\"btn btn-outline-dark w-100\" (click)=\"closeModal()\">\n                  {{ \"CANCEL\" | translate }}\n                </button>\n              </div>\n              <div class=\"col-md-7 col-6\">\n                <button type=\"submit\" [disabled]=\"profileUpdateForm.invalid || isDisabled\"\n                  class=\"btn btn-warning w-100\">\n                  {{ \"SAVE\" | translate }}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n    <br /><br />\n  </ng-template>\n  <br /><br /><br /><br />\n  <br /><br /><br /><br />\n\n  <ng-template #mobileNumber let-modal>\n    <br />\n    <br />\n    <br /><br /><br /><br />\n    <div class=\"modal-body\">\n      <div class=\"row add-profile\">\n\n        <div class=\"col-md-7\">\n          <form (ngSubmit)=\"updateMobileNumber()\" [formGroup]=\"profileUpdateForm\">\n            <div class=\"form-group mx-2\" *ngIf=\"verifyMobileNumber===false\">\n              <label for=\"exampleInputEmail1\"\n                class=\"barlow-regular color-b-c text-small\">{{ \"MOBILE_NUMBER\" | translate }}\n              </label>\n              <input type=\"number\" class=\"form-control\" id=\"exampleInpsutEmasasil1\" aria-describedby=\"emailHelp\"\n                placeholder=\"{{ 'M_NUM' | translate }}\" formControlName=\"mobileNumber\" />\n            </div>\n            <br />\n            <div class=\"row\" *ngIf=\"verifyMobileNumber===false\">\n              <div class=\"col-md-5 mb-4 col-6\">\n                <button type=\"button\" class=\"btn btn-outline-dark w-100\" (click)=\"closeModal()\">\n                  {{ \"CANCEL\" | translate }}\n                </button>\n              </div>\n              <div class=\"col-md-7 col-6\">\n                <button type=\"submit\" [disabled]=\"profileUpdateForm.invalid || isDisabled\"\n                  class=\"btn btn-warning w-100\">\n                  {{ \"SAVE\" | translate }}\n                </button>\n              </div>\n            </div>\n          </form>\n          <form (ngSubmit)=\"verifyOTPNumber()\" #otpForm=\"ngForm\" autocomplete=\"off\" *ngIf=\"verifyMobileNumber\">\n            <p class=\"color-green\" translate>{{ \"OTP_SENT\" | translate }}</p>\n            <div class=\"form-group\">\n              <label for=\"exampleInputEmail1\">{{ \"OTP_ENTER\" | translate }}<span\n                  style=\"color: #ff0000;\">*</span></label>\n              <input type=\"text\" class=\"form-control  barlow-regular text-normal color-b\" id=\"otpInput\"\n                aria-describedby=\"emailHelp\" placeholder=\"{{ 'OTP_ENTER' | translate }}\" required name=\"OTP\"\n                [maxLength]=\"6\" [minLength]=\"4\" [(ngModel)]=\"otpInfo.otp\" />\n\n            </div>\n\n            <br /><br />\n            <button type=\"submit\" [disabled]=\"otpForm.invalid\" class=\"btn btn-warning sign-btn\">\n              {{ \"VERIFY_OTP\" | translate }}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n    <br /><br />\n  </ng-template>\n  <br /><br /><br /><br />\n  <br /><br /><br /><br />\n  <ng-template #addressModal let-modal>\n    <br /><br /><br /><br />\n\n    <div class=\"modal-body\">\n      <div class=\"row add-profile\">\n        <div class=\"col-md-12\">\n          <h6 class=\"barlow-medium color-b-c text-big text-center main-title\">\n            {{addressId ? (\"UPDATE_DELIVERY_ADDRESS\" | translate) : (\"ADD_NEW_DELIVERY_ADDRESS\" | translate)}}\n          </h6>\n          <p class=\"text-info mt-2\" *ngIf=\"showMap\">{{\"MARKER_NOTE\" | translate}}</p>\n          <agm-map [latitude]=\"location.lat\" [longitude]=\"location.lng\" [zoom]=\"17\" [mapDraggable]=\"true\"\n            *ngIf=\"showMap\">\n            <agm-marker [latitude]=\"location.lat\" [longitude]=\"location.lng\"\n              (dragEnd)=\"markerDraggedEvent($event.coords)\" [markerDraggable]=\"true\">\n              <agm-info-window>\n                {{mapAddress}}\n              </agm-info-window>\n            </agm-marker>\n          </agm-map>\n          <p class=\"mt-3\" *ngIf=\"showMap\">{{mapAddress}}</p>\n          <form (ngSubmit)=\"geoCodeAddress()\" #addressForm=\"ngForm\" class=\"mx-4 mt-5\" *ngIf=\"!showMap\">\n            <div class=\"row form-group\">\n              <input type=\"text\" name=\"address\" class=\"form-control\" [(ngModel)]=\"addressData.address\"\n                placeholder=\"{{ 'ENTER_YOUR_ADDRESS' | translate }}\" required />\n              <p class=\"showPointer text-info\" (click)=\"setMapShowStatus()\" *ngIf=\"!hideEdit\">\n                {{\"EDIT\" | translate}}\n              </p>\n            </div>\n            <div class=\"row form-group\">\n              <input type=\"text\" name=\"flatNo\" class=\"form-control\" [(ngModel)]=\"addressData.flatNo\"\n                placeholder=\"{{ 'ENTER_YOUR_FLAT_NUMBER' | translate }}\" required />\n            </div>\n            <div class=\"row form-group\">\n              <input type=\"text\" name=\"apartmentName\" class=\"form-control\" [(ngModel)]=\"addressData.apartmentName\"\n                placeholder=\"{{ 'ENTER_YOUR_APARTMENT_NAME' | translate }}\" required />\n            </div>\n            <div class=\"row form-group\">\n              <input type=\"text\" name=\"landmark\" class=\"form-control\" [(ngModel)]=\"addressData.landmark\"\n                placeholder=\"{{ 'ENTER_THE_NEAREST_LANDMARK' | translate }}\" required />\n            </div>\n            <div class=\"row form-group\">\n              <input type=\"text\" name=\"postalCode\" class=\"form-control\" [(ngModel)]=\"addressData.postalCode\"\n                placeholder=\"{{ 'ENTER_YOUR_POSTAL_CODE' | translate }}\" required />\n            </div>\n            <div class=\"row form-group mt-3\">\n              <input type=\"text\" name=\"contactNumber\" class=\"form-control\" [(ngModel)]=\"addressData.mobileNumber\"\n                placeholder=\"{{ 'ENTER_YOUR_CONTACT_NUMBER' | translate }}\" required />\n            </div>\n\n            <div class=\"row\">\n              <div class=\"custom-control custom-radio ml-5\" *ngFor=\"let type of addressTypes\">\n                <input type=\"radio\" [id]=\"type\" name=\"home\" [(ngModel)]=\"addressData.addressType\" [value]=\"type\"\n                  class=\"custom-control-input\" />\n                <label class=\"custom-control-label barlow-regular color-b-c text-md\" [for]=\"type\">{{type}}\n                </label>\n              </div>\n            </div>\n            <div class=\"row mt-3\">\n              <div class=\"col-md-6 mb-0\">\n                <button class=\"btn btn-outline-dark w-100 barlow-medium text-smaller mb-3\" type=\"button\"\n                  (click)=\"closeAddressModal()\">\n                  {{ \"CANCEL\" | translate }}\n                </button>\n              </div>\n              <div class=\"col-md-6\" *ngIf=\"!showMap\">\n                <button class=\"btn btn-warning w-100 barlow-medium text-smaller\" type=\"submit\"\n                  [disabled]=\"addressForm.invalid\">\n                  {{ \"SUBMIT\" | translate }}\n                </button>\n              </div>\n            </div>\n          </form>\n          <div class=\"row mt-3\" *ngIf=\"showMap\">\n            <div class=\"col-md-6 mb-0\" *ngIf=\"addressId\">\n              <button class=\"btn btn-outline-dark w-100 barlow-medium text-smaller mb-3\" type=\"button\"\n                (click)=\"showMap = !showMap;hideEdit = false\">\n                {{ \"CANCEL\" | translate }}\n              </button>\n            </div>\n            <div class=\"col-md-6 float-right\">\n              <button class=\"btn btn-warning w-100 barlow-medium text-smaller\" type=\"button\" (click)=\"setMapAddress()\">\n                {{ \"PROCEED\" | translate }}\n              </button>\n            </div>\n            <div class=\"col-md-6 float-right\">\n              <button class=\"btn btn-warning w-100 barlow-medium text-smaller\" type=\"button\"\n                (click)=\"closeAddressModal()\">\n                {{ \"CANCEL\" | translate }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template #changePasswordModal let-modal>\n    <div class=\"modal-body\">\n      <div class=\"row add-profile\">\n        <div class=\"col-md-12\">\n          <form (ngSubmit)=\"changePassword()\" [formGroup]=\"changePasswordForm\">\n            <div class=\"form-group mx-2\">\n              <label for=\"exampleInputEmail1\"\n                class=\"barlow-regular color-b-c text-small\">{{ \"CURRENT_PASSWORD\" | translate }}\n              </label>\n              <input type=\"password\" class=\"form-control\" aria-describedby=\"emailHelp\"\n                formControlName=\"currentPassword\" />\n              <span class=\"help-block\"\n                *ngIf=\"changePasswordForm.controls['currentPassword'].dirty && changePasswordForm.controls['currentPassword'].errors?.minlength\">\n                <small class=\"text-danger\">\n                  {{\"MIN_PASS\" | translate}}\n                </small>\n              </span>\n              <span class=\"help-block\"\n                *ngIf=\"changePasswordForm.controls['currentPassword'].dirty && changePasswordForm.controls['currentPassword'].errors?.maxlength\">\n                <small class=\"text-danger\">\n                  {{\"MAX_PASS\" | translate}}\n                </small>\n              </span>\n            </div>\n            <div class=\"form-group mx-2\">\n              <label for=\"exampleInputEmail1\" class=\"barlow-regular color-b-c text-small\">{{ \"PASSWORD\" | translate }}\n              </label>\n              <input type=\"password\" class=\"form-control\" aria-describedby=\"emailHelp\" formControlName=\"newPassword\" />\n              <span class=\"help-block\"\n                *ngIf=\"changePasswordForm.controls['newPassword'].dirty && changePasswordForm.controls['newPassword'].errors?.minlength\">\n                <small class=\"text-danger\">\n                  {{\"MIN_PASS\" | translate}}\n                </small>\n              </span>\n              <span class=\"help-block\"\n                *ngIf=\"changePasswordForm.controls['newPassword'].dirty && changePasswordForm.controls['newPassword'].value === changePasswordForm.controls['currentPassword'].value\">\n                <small class=\"text-danger\">\n                  {{\"SAME_PASS_ISSUE\" | translate}}\n                </small>\n              </span>\n              <span class=\"help-block\"\n                *ngIf=\"changePasswordForm.controls['newPassword'].dirty && changePasswordForm.controls['newPassword'].errors?.maxlength\">\n                <small class=\"text-danger\">\n                  {{\"MAX_PASS\" | translate}}\n                </small>\n              </span>\n            </div>\n            <div class=\"form-group mx-2\" *ngIf=\"changePasswordForm.controls['newPassword']?.value?.length > 0\">\n              <label for=\"exampleInputEmail1\"\n                class=\"barlow-regular color-b-c text-small\">{{ \"CONFIRM_YOUR_PASSWORD\" | translate }}\n              </label>\n              <input type=\"password\" class=\"form-control\" aria-describedby=\"emailHelp\"\n                formControlName=\"confirmPassword\" />\n              <span class=\"help-block\"\n                *ngIf=\"changePasswordForm.controls['confirmPassword'].dirty && changePasswordForm.controls['confirmPassword'].value !== changePasswordForm.controls['newPassword'].value\">\n                <small class=\"text-danger\">\n                  {{\"PASSWORD_DO_NOT_MATCH\" | translate}}\n                </small>\n              </span>\n            </div>\n\n            <br />\n            <div class=\"row\">\n              <div class=\"col-md-5 mb-4 col-6\">\n                <button type=\"button\" class=\"btn btn-outline-dark w-100\" (click)=\"closeChangePasswordModal()\">\n                  {{ \"CANCEL\" | translate }}\n                </button>\n              </div>\n              <div class=\"col-md-7 col-6\">\n                <button type=\"submit\"\n                  [disabled]=\"changePasswordForm.invalid || isDisabled || changePasswordForm.controls['newPassword'].value === changePasswordForm.controls['currentPassword'].value || changePasswordForm.controls['confirmPassword'].dirty && changePasswordForm.controls['confirmPassword'].value !== changePasswordForm.controls['newPassword'].value\"\n                  class=\"btn btn-warning w-100\">\n                  {{ \"SAVE\" | translate }}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</div>","import { Injectable } from \"@angular/core\";\nimport { CrudService } from \"../../../services/crud.service\";\nimport { Observable } from \"rxjs\";\nimport { Http, RequestOptions, Headers } from \"@angular/http\";\nimport { environment } from \"../../../../environments/environment\";\nimport { map } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n  constructor(private crud: CrudService, private http: Http) {\n  }\n\n  // get's user profile information\n  public getUserProfileInformation(): Observable<any> {\n    return this.crud.getData('/users/me');\n  }\n\n  // get's users chat history\n  public getChatHistory(): Observable<any> {\n    return this.crud.getData('/chats/list?page=0&limit=100000');\n  }\n\n  // updates user's profile information\n  public updateUserProfile(profileInfo): Observable<any> {\n    return this.crud.updateData('/users/update/profile', profileInfo);\n  }\n\n  // change password\n  public changePassword(passwordData): Observable<any> {\n    return this.crud.saveData('/users/change-password', passwordData);\n  }\n\n  // set's users default language\n  public setDefaultLanguage(body): Observable<any> {\n    return this.crud.updateData('/users/language/update', body);\n  }\n\n  // update users mobileNumber\n  public updateMobileNumber(body): Observable<any> {\n    return this.crud.updateData('/users/update/mobile-verify', body);\n  }\n\n  // verify otp \n  public otpVerify(otpVerify): Observable<any> {\n    return this.crud.updateData('/users/update/mobile', otpVerify);\n  }\n  // uploads image\n  public uploadImage(formData: FormData): Observable<any> {\n    let headers = new Headers({ 'Authorization': 'Bearer ' + this.crud.getAuthToken });\n    let requestOptions = new RequestOptions({ headers: headers });\n    return this.http.post(`${environment.API_ENDPOINT}/users/upload/image`, formData, requestOptions).pipe(map(res => res.json()));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HelperService } from 'src/app/services/helper.service';\nimport { Deliveryboy, OrderListModel, OrderModel, RateModel, RateModelDeliveryBoy } from '../../models/order.model';\nimport { OrdersService } from '../orders/orders.service';\nimport { RateDeliveryService } from './rate-delivery.service';\n\n@Component({\n  selector: 'app-rate-delivery',\n  templateUrl: './rate-delivery.component.html',\n  styleUrls: ['./rate-delivery.component.scss']\n})\nexport class RateDeliveryComponent implements OnInit {\n  public rateData: RateModelDeliveryBoy = {\n    rate: 0,\n    description: '',\n    orderId: '',\n    deliveryBoyId: '',\n  }; // contains order rate information\n  public orderId: string;\n  public orderInfo: Deliveryboy = {\n    assignedToName: '',\n    assignedToId: ''\n  }; // contains information about selected order\n  constructor(private orderService: OrdersService, private router: Router, private activatedRoute: ActivatedRoute, private ratedeliveryService: RateDeliveryService, private helperService: HelperService) {\n    this.activatedRoute.params.subscribe(params => {\n      this.orderId = params['id'];\n      this.getOrderDetails();\n    })\n  }\n\n\n  ngOnInit(): void {\n  }\n\n  // order details list\n  public getOrderDetails(): void {\n    this.orderService.getOrderDetails(this.orderId).subscribe((res: any) => {\n      this.orderInfo.assignedToName = res.response_data.order.assignedToName;\n      this.orderInfo.assignedToId = res.response_data.order.assignedToId;\n    })\n\n  }\n  //rate delivery boy\n  rateDelivaryBoy() {\n    this.rateData.orderId = this.orderId;\n    this.rateData.deliveryBoyId = this.orderInfo.assignedToId;\n    this.ratedeliveryService.saveDeliveryData(this.rateData).subscribe((res: any) => {\n      this.helperService.successToast(res.response_data, true);\n      this.router.navigate(['/orders'])\n    })\n  }\n}\n","<div class=\"container-fluid color-lightblue rating-section\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n    <div class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\">\n      <br /><br />\n      <br /><br />\n\n      <div class=\"row\">\n        <div class=\"col-md-9 text-center\">\n          <div class=\"delivery-block\">\n            <img src=\"assets/images/delivery.png\" class=\"delivery-img\" />\n            <br />\n\n            <div class=\"row\">\n              <div class=\"col-md-8 offset-md-2\">\n                <h6 class=\"barlow-medium text-md mt-4\">\n                  {{\"YOUR_ORDER_WAS_DELIVERED_BY\"|translate}}{{orderInfo.assignedToName}}\n                </h6>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-3\">\n          <div class=\"feedback-block\">\n            <h6 class=\"barlow-bold text-md p-3\">\n              {{\"PLEASE_SUBMIT_YOUR_FEEDBACK\"|translate}}\n            </h6>\n            <hr class=\"m-0\" />\n            <div class=\"ratings my-4 text-center\">\n              <ngb-rating class=\"ngb-ratingbar\" [(rate)]=\"rateData.rate\" [max]=\"5\"></ngb-rating>\n            </div>\n            <div class=\"form-group px-3\">\n              <textarea class=\"form-control custom-textarea barlow-regular smaller-text color-b-c\" rows=\"8\"\n                placeholder=\"{{'TELL_US_YOUR_EXPERIENCE'|translate}}\" [(ngModel)]=\"rateData.description\"></textarea>\n            </div>\n            <div class=\"submit-button px-3 mt-5\">\n              <button class=\"btn feedback-btn\" type=\"button\"\n                [disabled]=\"rateData.rate === 0 ||rateData.description===''\" (click)=\"rateDelivaryBoy()\">\n                {{ \"SUBMIT\" | translate }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <app-footer></app-footer>\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CrudService } from 'src/app/services/crud.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RateDeliveryService {\n\n  constructor(private crud: CrudService) { }\n\n  // // save delivery boy ratings\n  public saveDeliveryData(ratedata): Observable<any> {\n    return this.crud.saveData(`/delivery-boy-ratings/rate`, ratedata);\n  }\n}\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FavouritesModel, ProductsModel, VariantModel } from '../../models/category.model';\nimport { HelperService } from \"../../../services/helper.service\";\nimport { Store } from \"@ngrx/store\";\nimport { CartState } from \"../../store/cart.reducer\";\nimport { ModalDismissReasons, NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { environment } from \"../../../../environments/environment\";\nimport { CartService } from \"../cart/cart.service\";\nimport { ProductsService } from \"../products/products.service\";\n\n@Component({\n  selector: 'app-saved-items',\n  templateUrl: './saved-items.component.html',\n  styleUrls: ['./saved-items.component.scss']\n})\nexport class SavedItemsComponent implements OnInit {\n  public closeResult = '';\n  public favourites: Array<ProductsModel> = [];     // contains list of products added by user\n  public currencyCode: string = null;     // contains currency code\n  public selectedProduct: ProductsModel;      // contains selected product information\n  public selectedVariant: VariantModel;   // contains variant information\n  public selectedQuantity: number = 1;      // contains selected quantity\n  public productImageUrl: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-168`;      // contains optimized product image url\n  constructor(private productsService: ProductsService, private helperService: HelperService, private store: Store<CartState>, private modalService: NgbModal, private cartService: CartService) {\n    this.helperService.currency$.subscribe(currencyCode => {\n      this.currencyCode = currencyCode;\n    });\n    this.store.select('cartInfo').subscribe(state => {\n      if (state && state.products.length > 0) {\n        this.checkCartState();\n      }\n    });\n    this.getUserFavourites();\n  }\n\n  ngOnInit(): void {\n    this.helperService.scrollTop();\n  }\n\n  // get's all user favourites\n  private getUserFavourites(): void {\n    const favourites$ = this.productsService.getWishList();\n    favourites$.subscribe((res: any) => {\n      this.favourites = res.response_data;\n      this.calculateDealAmount();\n      this.checkCartState();\n    });\n  }\n\n  // calculates deal amount\n  private calculateDealAmount(): void {\n    this.favourites.forEach(favourite => {\n      if (favourite.isDealAvailable) {\n        favourite.variant.forEach(variant => {\n          variant.discountAmount = Number(variant.price) - (Number(variant.price) * (favourite.dealPercent / 100));\n        });\n      }\n    });\n  }\n\n  // increments/decrements quantity\n  public changeQuantity(type: string, product: ProductsModel): void {\n    if (type === 'increment') {\n      let quantity = product.quantityToCart;\n      quantity += 1;\n      // this.store.dispatch(new CartActions.UpdateCartAction({cartId: product.cartId, productId: product._id, quantity}));\n      this.updateCartData(product, quantity);\n    } else {\n      if (product.quantityToCart > 1) {\n        let quantity = product.quantityToCart;\n        quantity -= 1;\n        this.updateCartData(product, quantity);\n      } else {\n        this.cartService.deleteProductFromCart(product._id).subscribe((res: any) => {\n          product.isAddedToCart = false;\n          product.quantityToCart = undefined;\n          product.cartId = undefined;\n          product.unitInCart = undefined;\n          this.cartService.checkCartFormat(res, 'delete');\n        });\n      }\n    }\n  }\n\n  // updates cart data\n  private updateCartData(product, quantity) {\n    this.cartService.updateCart({\n      cartId: product.cartId,\n      productId: product._id,\n      quantity,\n      unit: product.variant[0].unit\n    }).subscribe((res: any) => {\n      this.cartService.checkCartFormat(res, 'update');\n    });\n  }\n\n  public openAddToCartModal(content: TemplateRef<any>, product: ProductsModel): void {\n    if (localStorage.getItem('token') && localStorage.getItem('id')) {\n      this.selectedProduct = product;\n      this.selectedProduct.variant.forEach(variant => {\n        variant.quantity = 1;\n      });\n      this.selectedQuantity = 1;\n      this.selectedVariant = product.variant.length === 1 ? product.variant[0] : undefined;\n      if (this.selectedProduct.variant.length > 1) {\n        this.modalService\n          .open(content, {ariaLabelledBy: 'modal-basic-title', centered: true})\n          .result.then(\n          result => {\n            this.closeResult = `Closed with: ${result}`;\n          },\n          reason => {\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n          }\n        );\n      } else {\n        this.addToCart();\n      }\n    } else {\n      this.helperService.infoToast(\"AUTH_REQ\");\n    }\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  // sends request to add to cart\n  public addToCart(): void {\n    this.cartService.prepareCartData(this.selectedProduct, this.selectedVariant, this.selectedQuantity);\n    this.closeAddToCartModal();\n  }\n\n  // this event is called when a variant is selected\n  public variantSelectionEvent(event, variant: VariantModel): void {\n    this.selectedVariant = event.target.checked ? variant : undefined;\n    this.selectedQuantity = 1;\n  }\n\n  // checks cart state\n  private checkCartState(): void {\n    this.store.select('cartInfo').subscribe(state => {\n      if (state && state.products.length > 0) {\n        state.products.forEach(cart => {\n          const index = this.favourites.findIndex(favourite => favourite._id === cart.productId);\n          if (index !== -1) {\n            this.favourites[index].isAddedToCart = true;\n            this.favourites[index].quantityToCart = cart.quantity;\n            this.favourites[index].cartId = state._id;\n            let variantData = this.favourites[index].variant.find(variant => variant.unit === cart.unit);\n            if (variantData) {\n              this.favourites[index].variant.unshift(variantData);\n            }\n          }\n        });\n      }\n    });\n  }\n\n  // increment quantity\n  public incrementQuantity(): void {\n    this.selectedQuantity += 1\n  }\n\n  // decrement quantity\n  public decrementQuantity(): void {\n    if (this.selectedQuantity > 1) {\n      this.selectedQuantity -= 1;\n    }\n  }\n\n  // closes add to cart modal\n  public closeAddToCartModal(): void {\n    this.modalService.dismissAll();\n    this.selectedProduct = undefined;\n    this.selectedVariant = undefined;\n    this.selectedQuantity = 1;\n  }\n\n}\n","<div class=\"container-fluid color-lightblue show-result-page\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n\n    <div class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\">\n      <!-- <div class=\"app-bar\">\n        <app-header-component></app-header-component>\n      </div> -->\n\n      <br />\n      <br /><br />\n\n      <!-- showing results -->\n\n      <div class=\"bottom-border\">\n        <h5\n          class=\"barlow-bold text-normal color-b mt-4 pb-2 main-title\"\n          translate\n        >\n          FAVOURITES\n        </h5>\n      </div>\n      <div class=\"show-result\">\n        <!--        <h5 class=\"color-green text-center\" *ngIf=\"!isLoading && productsList.length === 0\">No products found</h5>-->\n        <div class=\"\">\n          <div class=\"result-block p-3\">\n            <h6 class=\"text-center color-green\" *ngIf=\"favourites.length === 0\">\n              {{ \"NO_FAVOURITES\" | translate }}\n            </h6>\n            <div class=\"row\">\n              <div\n                class=\"col-md-4 col-xl-4 col-lg-6\"\n                *ngFor=\"let favourite of favourites\"\n              >\n                <div class=\"bg-white p-2 search-block\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6 col-6\">\n                      <div class=\"searched-img\">\n                        <ng-container>\n                          <img\n                          [src]=\"favourite.productImages && favourite.productImages.length > 0 ? (favourite.productImages[0].filePath ? productImageUrl+favourite.productImages[0].filePath : favourite.productImages[0].imageUrl) : (favourite.filePath ? productImageUrl+favourite.filePath : favourite.imageUrl)\"\n                            class=\"pointer\"\n                            [routerLink]=\"['/product-details/', favourite._id]\"\n                          />\n                        </ng-container>\n                        <!-- <ng-container *ngIf=\"!favourite.filePath\">\n                          <img\n                            [src]=\"favourite.imageUrl\"\n                            class=\"pointer\"\n                            [routerLink]=\"['/product-details/', favourite._id]\"\n                          />\n                        </ng-container> -->\n                        <span class=\"badge badge-warning off\">\n                          <div class=\"\" *ngIf=\"favourite.isDealAvailable\">\n                            <h6\n                              class=\"color-w text-center m-0 text-small barlow-medium\"\n                            >\n                              {{ favourite.dealPercent }}% Off\n                            </h6>\n                          </div>\n                        </span>\n                      </div>\n                      <div class=\"rating-badge absolute rating-badges\">\n                        <span class=\"badge badge-success\">\n                          <ngb-rating\n                            *ngIf=\"favourite.averageRating\"\n                            [rate]=\"favourite.averageRating\"\n                            [readonly]=\"true\"\n                            [max]=\"5\"\n                          >\n                            <ng-template let-fill=\"fill\" let-index=\"index\">\n                              <span class=\"star\" [class.full]=\"fill === 100\">\n                                <span class=\"half\" [style.width.%]=\"fill\"\n                                  >&#9733;</span\n                                >&#9733;\n                              </span>\n                            </ng-template>\n                          </ngb-rating>\n                        </span>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6 col-6\">\n                      <h6\n                        class=\"text-med barlow-medium color-b pointer\"\n                        [routerLink]=\"['/product-details/', favourite._id]\"\n                      >\n                        {{\n                          favourite.title.length > 22\n                            ? (favourite.title | slice: 0:18) + \"...\"\n                            : favourite.title\n                        }}\n                      </h6>\n                      <h6 class=\"text-smallest color-b-c barlow-regular\">\n                        {{ favourite.description }}\n                      </h6>\n                      <!-- <h6>Rating here........</h6> -->\n\n                      <div class=\"quantity\" *ngIf=\"favourite.isAddedToCart\">\n                        <a\n                          class=\"pointer\"\n                          (click)=\"changeQuantity('decrement', favourite)\"\n                          ><img src=\"assets/icons/minus.svg\"\n                        /></a>\n                        <h6 class=\"barlow-regular text-smallest color-b pt-1\">\n                          {{ favourite.quantityToCart }}\n                        </h6>\n                        <a\n                          class=\"pointer\"\n                          (click)=\"changeQuantity('increment', favourite)\"\n                          ><img src=\"assets/icons/plus.svg\" />\n                        </a>\n                      </div>\n\n                      <div\n                        class=\"cart-btn barlow-regular color-b text-smaller\"\n                        *ngIf=\"!favourite.isAddedToCart\"\n                      >\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-warning barlow-medium btn-sm text-small\"\n                          (click)=\"openAddToCartModal(content, favourite)\"\n                        >\n                          {{ \"ADD_TO_CART\" | translate }}\n                        </button>\n                      </div>\n                      <ng-container *ngIf=\"favourite.isDealAvailable\">\n                        <div class=\"row\">\n                          <div class=\"col-md-12 pt-2\">\n                            <h6\n                              class=\"text-smallest barlow-regular color-b-c mb-0 pt-1\"\n                            >\n                              <del>{{\n                                favourite.variant[0].price\n                                  | currency: currencyCode:\"symbol\":\"1.2-2\"\n                              }}</del>\n                              <span\n                                class=\"color-green barlow-bold text-smallermb-0 pt-1\"\n                              >\n                                {{\n                                  favourite.variant[0].discountAmount\n                                    | currency: currencyCode:\"symbol\":\"1.2-2\"\n                                }}</span\n                              >\n                            </h6>\n                          </div>\n                        </div>\n                      </ng-container>\n                      <ng-container *ngIf=\"!favourite.isDealAvailable\">\n                        <h6\n                          class=\"color-green barlow-bold text-smaller mb-0 pt-3\"\n                        >\n                          {{\n                            favourite.variant[0].price\n                              | currency: currencyCode:\"symbol\":\"1.2-2\"\n                          }}\n                        </h6>\n                      </ng-container>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  class=\"products-outstock\"\n                  *ngIf=\"\n                    favourite.variant.length === 1 &&\n                    favourite.variant[0].productStock === 0\n                  \"\n                >\n                  <h6 class=\"barlow-medium color-w\">\n                    {{ \"OUT_OF_STOCK\" | translate }}\n                  </h6>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <br /><br />\n      <app-footer></app-footer>\n    </div>\n  </div>\n</div>\n<ng-template #content let-modal>\n  <div class=\"\">\n    <div class=\"row px-3\">\n      <div class=\"col-md-8\">\n        <h4 class=\"modal-title h1md barlow-bold\" id=\"modal-basic-title\">\n          {{ \"CHOOSE_QUANTITY\" | translate }}\n        </h4>\n      </div>\n      <div class=\"col-md-4 pt-3\">\n        <div *ngIf=\"selectedVariant\">\n          <div class=\"cart-quantity\">\n            <p class=\"pointer\" (click)=\"decrementQuantity()\">\n              <img src=\"assets/icons/minus.svg\" />\n            </p>\n            <h6 class=\"barlow-regular text-smallest color-b pt-1\">\n              {{ selectedQuantity }}\n            </h6>\n            <p class=\"pointer\" (click)=\"incrementQuantity()\">\n              <img src=\"assets/icons/plus.svg\" class=\"pointer\" />\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"row\" *ngFor=\"let variant of selectedProduct.variant\">\n      <div class=\"col-md-3\">\n        <h5 class=\"barlow-regular color-b-c text-medium\">\n          {{ variant.unit }}\n        </h5>\n      </div>\n      <div class=\"col-md-8\">\n        <label\n          class=\"container customcheck text-medium color-b-c barlow-regular pointer\"\n        >\n          <ng-container *ngIf=\"!selectedProduct.isDealAvailable\">\n            <strong class=\"price color-green\">\n              {{ variant.price | currency: currencyCode:\"symbol\":\"1.2-2\" }}\n            </strong>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProduct.isDealAvailable\">\n            <strong class=\"price\">\n              <del>{{\n                variant.price | currency: currencyCode:\"symbol\":\"1.2-2\"\n              }}</del>\n            </strong>\n            <strong class=\"price color-green ml-1\">\n              {{\n                variant.discountAmount | currency: currencyCode:\"symbol\":\"1.2-2\"\n              }}\n            </strong>\n          </ng-container>\n          <input\n            type=\"checkbox\"\n            [checked]=\"\n              selectedVariant ? variant._id === selectedVariant._id : false\n            \"\n            (change)=\"variantSelectionEvent($event, variant)\"\n            [disabled]=\"variant.productStock === 0\"\n          />\n          <span class=\"checkmark\" style=\"right: 0rem !important\"></span>\n        </label>\n      </div>\n    </div>\n    <div class=\"row text-center\">\n      <div class=\"col-md-6\">\n        <button\n          type=\"button\"\n          class=\"btn btn-light w-100 mt-4 cancel-btn barlow-regular h1sm\"\n          (click)=\"closeAddToCartModal()\"\n        >\n          {{ \"CANCEL\" | translate }}\n        </button>\n      </div>\n      <div class=\"col-md-6\">\n        <button\n          type=\"button\"\n          class=\"btn btn-warning w-100 mt-4 cart-btn barlow-regular h1sm\"\n          [disabled]=\"!selectedVariant\"\n          (click)=\"addToCart()\"\n        >\n          {{ \"ADD_TO_CART\" | translate }} &nbsp;\n          <img src=\"assets/icons/cart.png\" />\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { Store } from \"@ngrx/store\";\nimport { CartState } from \"../../store/cart.reducer\";\nimport { ProductsModel, VariantModel } from \"../../models/category.model\";\nimport { HelperService } from \"../../../services/helper.service\";\nimport { ModalDismissReasons, NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { environment } from \"../../../../environments/environment\";\nimport { CartService } from \"../cart/cart.service\";\nimport { ProductsService } from \"../products/products.service\";\nimport * as _ from 'lodash';\n\n\n@Component({\n  selector: 'app-show-result',\n  templateUrl: './show-result.component.html',\n  styleUrls: ['./show-result.component.scss'],\n})\nexport class ShowResultComponent implements OnInit {\n  closeResult = '';\n  public searchInput: string = '';      // contains product name to search\n  public productsList: Array<ProductsModel> = [];     // contains list of products\n  private userId: string = null;      // contains id of logged in user\n  public currencyCode: string = null;     // contains currency code\n  public selectedProduct: ProductsModel;      // contains selected product information\n  public selectedVariant: VariantModel;   // contains variant information\n  public selectedQuantity: number = 1;      // contains selected quantity\n  public isLoading: boolean = false;        // shows loader when true\n  private productIndex: number = 0;     // contains product index\n  public productImageUrl: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-168`;      // contains optimized product image url\n\n  constructor(private store: Store<CartState>, private helperService: HelperService, private modalService: NgbModal, private cartService: CartService, private productsService: ProductsService) {\n    this.userId = localStorage.getItem('id');\n    this.store.select('cartInfo').subscribe(state => {\n      if (state && state.products.length > 0) {\n        this.checkCartState();\n      }\n    });\n    this.helperService.currency$.subscribe(currencyCode => {\n      this.currencyCode = currencyCode;\n    });\n  }\n\n  ngOnInit(): void {\n    this.helperService.scrollTop();\n  }\n\n  // calculates deal amount\n  private calculateDealAmount(): void {\n    this.productsList.forEach(product => {\n      if (product.isDealAvailable) {\n        product.variant.forEach(variant => {\n          variant.discountAmount = Number(variant.price) - (Number(variant.price) * (product.dealPercent / 100));\n        });\n      }\n    });\n  }\n\n  // checks cart state\n  private checkCartState(): void {\n    this.store.select('cartInfo').subscribe(state => {\n      if (state && state.products.length > 0) {\n        state.products.forEach(cart => {\n          const index = this.productsList.findIndex(product => product._id === cart.productId);\n          if (index !== -1) {\n            this.productsList[index].isAddedToCart = true;\n            this.productsList[index].quantityToCart = cart.quantity;\n            this.productsList[index].cartId = state._id;\n            let variantData = this.productsList[index].variant.find(variant => variant.unit === cart.unit);\n            if (variantData) {\n              this.productsList[index].variant.unshift(variantData);\n            }\n          }\n        });\n      }\n    });\n  }\n\n  // searches product by name,desc\n  public searchProduct(): void {\n    if (this.searchInput.length === 0) {\n      this.clearSearch();\n    } else {\n      if (this.searchInput.length <= 2) {\n        return;\n      }\n      this.isLoading = true;\n      this.productIndex = 0;\n      this.productsList = [];\n      const products$ = this.productsService.searchProduct(this.productIndex, this.searchInput);\n      products$.subscribe((res: any) => {\n        this.isLoading = false;\n        // if (this.productsList.length === 0) {\n          this.productsList = res.response_data;\n        // } else {\n        //   const newProducts = res.response_data.products && Array.isArray(res.response_data.products) ? res.response_data.products : Array.isArray(res.response_data) ? res.response_data : [];\n        //   if (newProducts.length > 0) {\n        //     this.productsList = this.productsList.concat(newProducts);\n        //   }\n        // }\n        // this.productsList = res.response_data;\n        this.checkCartState();\n        this.calculateDealAmount();\n      }, error => {\n        this.isLoading = false;\n      });\n    }\n  }\n\n  //window scrolled down\n  public windowScrolledDown(): void {\n    this.productIndex += 1;\n    const products$ = this.productsService.searchProduct(this.productIndex, this.searchInput);\n    products$.subscribe((res: any) => {\n      this.isLoading = false;\n      if (this.productsList.length === 0) {\n        this.productsList = Array.isArray(res.response_data) ? res.response_data : res.response_data.products;\n      } else {\n        const newProducts = res.response_data.products && Array.isArray(res.response_data.products) ? res.response_data.products : Array.isArray(res.response_data) ? res.response_data : [];\n        if (newProducts.length > 0) {\n          this.productsList = this.productsList.concat(newProducts);\n        }\n      }\n      // this.productsList = res.response_data;\n      this.checkCartState();\n      this.calculateDealAmount();\n    }, error => {\n      this.isLoading = false;\n    });\n  }\n\n\n  // called when window is scrolled up\n  public windowScrolledUp(): void {\n    // this.productIndex += 10;\n    this.searchProduct();\n  }\n\n  // clears search and resets products\n  public clearSearch(): void {\n    this.searchInput = '';\n    this.productsList = [];\n  }\n\n  // increments/decrements quantity\n  public changeQuantity(type: string, product: ProductsModel): void {\n    if (type === 'increment') {\n      let quantity = product.quantityToCart;\n      quantity += 1;\n      // this.store.dispatch(new CartActions.UpdateCartAction({cartId: product.cartId, productId: product._id, quantity}));\n      this.updateCartData(product, quantity);\n    } else {\n      if (product.quantityToCart > 1) {\n        let quantity = product.quantityToCart;\n        quantity -= 1;\n        this.updateCartData(product, quantity);\n      } else {\n        this.cartService.deleteProductFromCart(product._id).subscribe((res: any) => {\n          product.isAddedToCart = false;\n          product.quantityToCart = undefined;\n          product.cartId = undefined;\n          product.unitInCart = undefined;\n          this.cartService.checkCartFormat(res, 'delete');\n        });\n      }\n    }\n  }\n\n  // updates cart data\n  private updateCartData(product, quantity) {\n    this.cartService.updateCart({\n      cartId: product.cartId,\n      productId: product._id,\n      quantity,\n      unit: product.variant[0].unit\n    }).subscribe((res: any) => {\n      this.cartService.checkCartFormat(res, 'update');\n    });\n  }\n\n  // opens add to cart modal\n  public openAddToCartModal(content: TemplateRef<any>, product: ProductsModel): void {\n    if (localStorage.getItem('token') && localStorage.getItem('id')) {\n      this.selectedProduct = product;\n      this.selectedProduct.variant.forEach(variant => {\n        variant.quantity = 1;\n      });\n      this.selectedQuantity = 1;\n      this.selectedVariant = product.variant.length === 1 ? product.variant[0] : undefined;\n      if (this.selectedProduct.variant.length > 1) {\n        this.modalService\n          .open(content, { ariaLabelledBy: 'modal-basic-title', centered: true })\n          .result.then(\n            result => {\n              this.closeResult = `Closed with: ${result}`;\n            },\n            reason => {\n              this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n            }\n          );\n      } else {\n        this.addToCart();\n      }\n    } else {\n      this.helperService.infoToast(\"AUTH_REQ\");\n    }\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  // sends request to add to cart\n  public addToCart(): void {\n    this.cartService.prepareCartData(this.selectedProduct, this.selectedVariant, this.selectedQuantity);\n    this.closeAddToCartModal();\n  }\n\n  // this event is called when a variant is selected\n  public variantSelectionEvent(event, variant: VariantModel): void {\n    this.selectedVariant = event.target.checked ? variant : undefined;\n    this.selectedQuantity = 1;\n  }\n\n  // increment quantity\n  public incrementQuantity(): void {\n    this.selectedQuantity += 1\n  }\n\n  // decrement quantity\n  public decrementQuantity(): void {\n    if (this.selectedQuantity > 1) {\n      this.selectedQuantity -= 1;\n    }\n  }\n\n  // closes add to cart modal\n  public closeAddToCartModal(): void {\n    this.modalService.dismissAll();\n    this.selectedProduct = undefined;\n    this.selectedVariant = undefined;\n    this.selectedQuantity = 1;\n  }\n\n}\n","<div class=\"container-fluid color-lightblue show-result-page\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n\n    <div class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\">\n      <!-- <div class=\"app-bar\">\n        <app-header-component></app-header-component>\n      </div> -->\n\n      <br />\n      <br /><br />\n      <br />\n\n      <!-- showing results -->\n\n      <div class=\"search-box\">\n        <form>\n          <img src=\"assets/icons/search.svg\" class=\"form-search\" />\n          <div class=\"form-group\">\n            <input type=\"text\" name=\"searchinp\" [(ngModel)]=\"searchInput\"\n              class=\"form-control search-input barlow-medium text-normal\" aria-describedby=\"emailHelp\"\n              placeholder=\"{{ 'SEARCH_PRODUCT' | translate }}\" (input)=\"searchProduct()\" />\n          </div>\n          <a class=\"pointer\" (click)=\"clearSearch()\" *ngIf=\"searchInput.length > 0\">\n            <img src=\"assets/icons/close.png\" class=\"close-form\" /></a>\n        </form>\n      </div>\n\n      <div class=\"bottom-border\">\n        <h5 class=\"barlow-bold text-normal color-b mt-4 pb-2 main-title\" translate>\n          SHOWING_RESULT\n        </h5>\n      </div>\n      <div class=\"show-result\">\n        <div class=\"\">\n          <div class=\"result-block p-3\">\n            <h5 class=\"text-center color-green\" *ngIf=\"searchInput.length === 0\">\n              {{ \"SEARCH_PRODUCTS\" | translate }}\n            </h5>\n            <h5 class=\"text-center color-green\" *ngIf=\"searchInput.length > 0 && productsList.length === 0\">\n              {{ \"NO_PRODUCTS_EXISTS\" | translate }}\n            </h5>\n            <div class=\"row mt-4 mb-4 mx-1\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollUpDistance]=\"2\"\n              [infiniteScrollThrottle]=\"1000\" (scrolled)=\"windowScrolledDown()\" (scrolledUp)=\"windowScrolledUp()\">\n\n              <div class=\"row col-md-12\">\n                <div class=\"col-md-4 col-xl-4 col-lg-6\" *ngFor=\"let product of productsList\">\n                  <div class=\"bg-white p-2 search-block\">\n                    <div class=\"row\">\n                      <div class=\"col-md-6 col-6\">\n                        <div class=\"searched-img\">\n                          <ng-container>\n                            <img\n                              [src]=\"product.productImages && product.productImages.length > 0 ? (product.productImages[0].filePath ? productImageUrl+product.productImages[0].filePath : product.productImages[0].imageUrl) : (product.filePath ? productImageUrl+product.filePath : product.imageUrl)\"\n                              class=\"product-img relative\" [routerLink]=\"['/product-details/', product._id]\" class=\"pointer\" />\n                          </ng-container>\n                          <!-- <ng-container *ngIf=\"!product.filePath\">\n                            <img [src]=\"product.imageUrl\" [routerLink]=\"['/product-details/', product._id]\"\n                              class=\"pointer\" />\n                          </ng-container> -->\n                          <span class=\"badge badge-warning off\">\n                            <div class=\"\" *ngIf=\"product.isDealAvailable\">\n                              <h6 class=\"color-w text-center m-0 text-small barlow-medium\">\n                                {{ product.dealPercent }}% Off\n                              </h6>\n                            </div>\n                          </span>\n                        </div>\n                        <div class=\"rating-badge absolute rating-badges\">\n                          <span class=\"badge badge-success\">\n                            <ngb-rating *ngIf=\"product.averageRating\" [rate]=\"product.averageRating\" [readonly]=\"true\"\n                              [max]=\"5\">\n                              <ng-template let-fill=\"fill\" let-index=\"index\">\n                                <span class=\"star\" [class.full]=\"fill === 100\">\n                                  <span class=\"half\" [style.width.%]=\"fill\">&#9733;</span>&#9733;\n                                </span>\n                              </ng-template>\n                            </ngb-rating>\n                          </span>\n                        </div>\n                      </div>\n\n                      <div class=\"col-md-6 col-6\">\n                        <h6 class=\"text-med barlow-medium color-b pointer mb-2\"\n                          [routerLink]=\"['/product-details/', product._id]\">\n                          {{\n                          product.title.length > 22\n                            ? (product.title | slice: 0:18) + \"...\"\n                            : product.title\n                        }}\n                        </h6>\n                        <h6 class=\"smaller-text color-b-c barlow-regular\">\n                          {{ product.description }}\n                        </h6>\n                        <!-- <h6>Rating here........</h6> -->\n\n                        <div class=\"quantity\" *ngIf=\"product.isAddedToCart\">\n                          <a class=\"pointer\" (click)=\"changeQuantity('decrement', product)\"><img\n                              src=\"assets/icons/minus.svg\" /></a>\n                          <h6 class=\"barlow-regular text-smallest color-b pt-1\">\n                            {{ product.quantityToCart }}\n                          </h6>\n                          <a class=\"pointer\" (click)=\"changeQuantity('increment', product)\"><img\n                              src=\"assets/icons/plus.svg\" />\n                          </a>\n                        </div>\n\n                        <div class=\"cart-btn mt-3 barlow-regular color-b text-smaller\" *ngIf=\"!product.isAddedToCart\">\n                          <button type=\"button\" class=\"btn btn-warning barlow-medium btn-sm text-small\"\n                            (click)=\"openAddToCartModal(content, product)\">\n                            {{ \"ADD_TO_CART\" | translate }}\n                          </button>\n                        </div>\n                        <ng-container *ngIf=\"product.isDealAvailable\">\n                          <div class=\"row mt-3\">\n                            <div class=\"col-md-8\">\n                              <h6 class=\"text-smallest barlow-regular color-b-c mb-0 pt-1\">\n                                <del>{{\n                                product.variant[0].price\n                                  | currency: currencyCode:\"symbol\":\"1.2-2\"\n                              }}</del>\n\n                                <span class=\"color-green barlow-bold text-smaller mb-0 pt-1\">\n                                  {{\n                                  product.variant[0].discountAmount\n                                    | currency: currencyCode:\"symbol\":\"1.2-2\"\n                                }}</span>\n                              </h6>\n                            </div>\n                            <div class=\"col-md-4 pl-0\">\n                              <h6 class=\"text-smallest barlow-regular mb-0 pt-1\">\n                                {{ product.variant[0].unit }}\n                              </h6>\n                            </div>\n                          </div>\n                        </ng-container>\n                        <ng-container *ngIf=\"!product.isDealAvailable\">\n                          <div class=\"row mt-3\">\n                            <div class=\"col-md-8\">\n                              <h6 class=\"color-green barlow-bold text-smaller mb-0\">\n                                {{\n                                product.variant[0].price\n                                  | currency: currencyCode:\"symbol\":\"1.2-2\"\n                              }}\n                              </h6>\n                            </div>\n                            <div class=\"col-md-4\">\n                              <h6 class=\"text-smallest barlow-regular mb-01\">\n                                {{ product.variant[0].unit }}\n                              </h6>\n                            </div>\n                          </div>\n                        </ng-container>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"products-outstock\" *ngIf=\"\n                    product.variant.length === 1 &&\n                    product.variant[0].productStock === 0\n                  \">\n                    <h6 class=\"barlow-medium color-w\">\n                      {{ \"OUT_OF_STOCK\" | translate }}\n                    </h6>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- </div> -->\n        </div>\n      </div>\n\n      <br /><br />\n      <app-footer></app-footer>\n    </div>\n  </div>\n</div>\n<ng-template #content let-modal>\n  <div class=\"\">\n    <div class=\"row px-3\">\n      <div class=\"col-md-8\">\n        <h4 class=\"modal-title h1md barlow-bold\" id=\"modal-basic-title\">\n          {{ \"CHOOSE_QUANTITY\" | translate }}\n        </h4>\n      </div>\n      <div class=\"col-md-4 pt-3\">\n        <div *ngIf=\"selectedVariant\">\n          <div class=\"cart-quantity\">\n            <p class=\"pointer\" (click)=\"decrementQuantity()\">\n              <img src=\"assets/icons/minus.svg\" />\n            </p>\n            <h6 class=\"barlow-regular text-smallest color-b pt-1\">\n              {{ selectedQuantity }}\n            </h6>\n            <p class=\"pointer\" (click)=\"incrementQuantity()\">\n              <img src=\"assets/icons/plus.svg\" class=\"pointer\" />\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"row\" *ngFor=\"let variant of selectedProduct.variant\">\n      <div class=\"col-md-3\">\n        <h5 class=\"barlow-regular color-b-c text-medium\">\n          {{ variant.unit }}\n        </h5>\n      </div>\n\n      <div class=\"col-md-8\">\n        <label class=\"container customcheck text-medium color-b-c barlow-regular pointer\">\n          <ng-container *ngIf=\"!selectedProduct.isDealAvailable\">\n            <strong class=\"price color-green\">\n              {{ variant.price | currency: currencyCode:\"symbol\":\"1.2-2\" }}\n            </strong>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProduct.isDealAvailable\">\n            <strong class=\"price\">\n              <del>{{\n                variant.price | currency: currencyCode:\"symbol\":\"1.2-2\"\n              }}</del>\n            </strong>\n            <strong class=\"price color-green ml-1\">\n              {{\n                variant.discountAmount | currency: currencyCode:\"symbol\":\"1.2-2\"\n              }}\n            </strong>\n          </ng-container>\n          <input type=\"checkbox\" [checked]=\"\n              selectedVariant ? variant._id === selectedVariant._id : false\n            \" (change)=\"variantSelectionEvent($event, variant)\" [disabled]=\"variant.productStock === 0\" />\n          <span class=\"checkmark\" style=\"right: 0rem !important\"></span>\n        </label>\n      </div>\n    </div>\n    <div class=\"row text-center\">\n      <div class=\"col-md-6\">\n        <button type=\"button\" class=\"btn btn-light w-100 mt-4 cancel-btn barlow-regular h1sm\"\n          (click)=\"closeAddToCartModal()\">\n          {{ \"CANCEL\" | translate }}\n        </button>\n      </div>\n      <div class=\"col-md-6\">\n        <button type=\"button\" class=\"btn btn-warning w-100 mt-4 cart-btn barlow-regular h1sm\"\n          [disabled]=\"!selectedVariant\" (click)=\"addToCart()\">\n          {{ \"ADD_TO_CART\" | translate }} &nbsp;\n          <img src=\"assets/icons/cart.png\" />\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { CartState } from '../../store/cart.reducer';\nimport { Router } from '@angular/router';\nimport { HelperService } from '../../../services/helper.service';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { AuthGuardService } from '../../../services/auth-guard.service';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { CartService } from \"../cart/cart.service\";\nimport { LanguagesModel } from \"../../models/category.model\";\nimport * as CartActions from '../../store/cart.action';\nimport { CrudService } from \"../../../services/crud.service\";\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.scss'],\n  animations: [\n    trigger('sideMenuAnimation', [\n      state(\n        'hide',\n        style({\n          transform: 'translateX(0)',\n        })\n      ),\n      state(\n        'show',\n        style({\n          transform: 'translateX(-100%)',\n        })\n      ),\n      transition('hide <=> show', animate('.6s ease')),\n    ]),\n  ],\n})\nexport class SideMenuComponent implements OnInit {\n  public sideMenuState: string = 'show';\n  public isLoggedIn = false;      // contains user's authentication status\n  public cartLength: number = 0;      // contains length of cart items\n\n  constructor(\n    private store: Store<CartState>,\n    private router: Router,\n    private helperService: HelperService,\n    private authService: AuthGuardService,\n    private translate: TranslateService,\n    private cartService: CartService,\n    private crud: CrudService\n  ) {\n    this.store.select(\"cartInfo\").subscribe(state => {\n      if (state && state.products.length > 0) {\n        this.cartLength = state.products.length;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.authService.obs$.subscribe((state) => {\n      this.isLoggedIn = state;\n    });\n  }\n\n  // cleans the session and logs out the user\n  public clearSessionAndLogout(): void {\n    localStorage.removeItem('id');\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    const languages: Array<LanguagesModel> = JSON.parse(atob(localStorage.getItem('languageList')));\n    languages.forEach(language => {\n      if (language.isDefault === 1) {\n        localStorage.setItem('language', language.languageCode);\n        this.translate.use(language.languageCode);\n        this.translate.setDefaultLang(language.languageCode);\n\n      }\n    })\n    this.crud.setAuthToken = null;\n    this.cartService.clearCart();\n    this.helperService.successToast(\"LOGOUT\");\n    this.authService.activatedEmitter.next(false);\n    this.router.navigate(['home']);\n  }\n\n  public createSessionAndLogIn(): void {\n    this.router.navigate(['login']);\n  }\n\n  mobMenuToggle() {\n    this.sideMenuState = this.sideMenuState === 'hide' ? 'show' : 'hide';\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div class=\"row side side-menu-page\">\n      <div class=\"col-md-12 pl-0\">\n        <app-header-component></app-header-component>\n\n        <div class=\"categories\">\n          <div class=\"row\">\n            <div class=\"col-md-12 side-menu-width\">\n              <br />\n              <br />\n              <br />\n              <br />\n              <div class=\"mt-5 pointer\" [routerLink]=\"['/home']\" routerLinkActive=\"active\">\n                <div class=\"text-md barlow-medium color-b pointer title\">\n                  <img src=\"assets/sidebar/home.svg\"\n                    class=\"img-fluid category-icons\" />&nbsp;{{ \"HOME_PAGE\" | translate }}\n                </div>\n              </div>\n              <div class=\"pointer\" [routerLink]=\"['/categories']\" [routerLinkActive]=\"['active']\">\n                <div class=\"text-md barlow-medium color-b pointer title\">\n                  <img src=\"assets/sidebar/categories.svg\"\n                    class=\"img-fluid category-icons\" />&nbsp;{{ \"CATEGORIES\" | translate }}\n                </div>\n              </div>\n              <div class=\"pointer\" [routerLink]=\"['/products']\" [routerLinkActive]=\"['active']\">\n                <div class=\"text-md barlow-medium color-b pointer title\">\n                  <img src=\"assets/sidebar/products.svg\"\n                    class=\"img-fluid category-icons\" />&nbsp;{{ \"PRODUCTS\" | translate }}\n                </div>\n              </div>\n              <div>\n                <div class=\"pointer\" [routerLink]=\"['/search']\" [routerLinkActive]=\"['active']\">\n                  <div class=\"text-md barlow-medium color-b pointer title\">\n                    <img src=\"assets/sidebar/search.svg\"\n                      class=\"img-fluid category-icons\" />&nbsp;{{ \"SEARCH_PRODUCT\" | translate }}\n                  </div>\n                </div>\n              </div>\n              <div class=\"pointer\" [routerLink]=\"['/cart']\" [routerLinkActive]=\"['active', '/checkout']\"\n                *ngIf=\"isLoggedIn\">\n                <div class=\"text-md barlow-medium color-b pointer title\">\n                  <img src=\"assets/sidebar/cart.svg\"\n                    class=\"img-fluid category-icons\" />&nbsp;{{ \"MY_CART\" | translate }}\n                </div>\n              </div>\n              <div class=\"pointer\" [routerLink]=\"['/favourites']\" [routerLinkActive]=\"['active']\" *ngIf=\"isLoggedIn\">\n                <div class=\"text-md barlow-medium color-b pointer title\">\n                  <img src=\"assets/sidebar/fav.svg\"\n                    class=\"img-fluid category-icons\" />&nbsp;{{ \"FAVOURITES\" | translate }}\n                </div>\n              </div>\n              <div class=\"pointer\" [routerLink]=\"['/orders']\" [routerLinkActive]=\"['active']\" *ngIf=\"isLoggedIn\">\n                <div class=\"text-md barlow-medium color-b pointer title\">\n                  <img src=\"assets/sidebar/orders.svg\"\n                    class=\"img-fluid category-icons\" />&nbsp;{{ \"MY_ORDERS\" | translate }}\n                </div>\n              </div>\n              <div class=\"pointer\" [routerLink]=\"['/profile']\" [routerLinkActive]=\"['active']\" *ngIf=\"isLoggedIn\">\n                <div class=\"text-md barlow-medium color-b pointer title\">\n                  <img src=\"assets/sidebar/settings.svg\"\n                    class=\"img-fluid category-icons\" />&nbsp;{{ \"PROFILE\" | translate }}\n                </div>\n              </div>\n              <div class=\"row pointer\" [routerLink]=\"['/login']\" [routerLinkActive]=\"['active']\" *ngIf=\"isLoggedIn\"\n                (click)=\"clearSessionAndLogout()\">\n                <div class=\"col-md-12\">\n                  <div class=\"text-md barlow-medium color-b pointer title\">\n                    <a><img src=\"assets/sidebar/logout.svg\"\n                        class=\"img-fluid category-icons\" />&nbsp;{{ \"LOG_OUT\" | translate }}\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row pointer\" *ngIf=\"!isLoggedIn\">\n                <div class=\"col-md-12\">\n                  <div class=\"text-md barlow-medium color-b pointer title\">\n                    <a (click)=\"createSessionAndLogIn()\"><img src=\"assets/sidebar/login.svg\"\n                        class=\"img-fluid category-icons\" />&nbsp;{{ \"SIGN_IN\" | translate }}\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- <app-footer></app-footer> -->\n  </div>\n</div>\n\n<div class=\"row py-2 sidemenu-header\">\n  <div class=\"col-md-1 col-8\">\n    <button class=\"btn mobile-menu\" name=\"btnMobileMenu\" type=\"button\" id=\"btnMobileMenu\" (click)=\"mobMenuToggle()\">\n      <i class=\"fa fa-bars fa-2x\"></i>\n    </button>\n  </div>\n\n  <div class=\"col-md-4 col-2 mt-2\">\n    <div class=\"pointer\" [routerLink]=\"['/search']\" [routerLinkActive]=\"['active']\">\n      <div class=\"text-md barlow-medium color-b pointer title\">\n        <img src=\"assets/sidebar/search.svg\" class=\"img-fluid category-icons\" />\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-4 col-2\">\n    <div class=\"pointer\" [routerLink]=\"['/cart']\" [routerLinkActive]=\"['active', '/checkout']\" *ngIf=\"isLoggedIn\">\n      <div class=\"text-md barlow-medium color-b pointer title\">\n        <img src=\"assets/icons/cart.svg\" class=\"img-fluid category-icons\" />\n        <span class=\"badge badge-pill badge-dark cart-items counter\" *ngIf=\"cartLength > 0\">{{ cartLength }}</span>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"side-menus\" [@sideMenuAnimation]=\"sideMenuState\">\n  <!-- <div class=\"logo\">\n    <img src=\"assets/img/logo.png\" alt=\"ionicfirebaseapp\" class=\"banner-img\" />\n  </div> -->\n  <div class=\"link-wrapper\">\n    <div class=\"categories\">\n      <div class=\"row\">\n        <div class=\"col-md-12 side-menu-width pl-0\">\n          <img src=\"assets/images/webapp.png\" class=\"side-logo-mobile\" />\n          <!-- <img [src]=\"logoUrl\" class=\"side-logo-mobile\" *ngIf=\"logoUrl\" /> -->\n          <div class=\"mt-5 pointer\" [routerLink]=\"['/home']\" routerLinkActive=\"active\" (click)=\"mobMenuToggle()\">\n            <div class=\"text-normal barlow-semibold color-w pointer title pl-3 main-title\">\n              <img src=\"assets/sidebar-icons/my-store.svg\" class=\"img-fluid\" />&nbsp; &nbsp; {{\n              \"HOME\" | translate\n              }}\n            </div>\n          </div>\n          <div class=\"pointer\" [routerLink]=\"['/categories']\" [routerLinkActive]=\"['active']\" (click)=\"mobMenuToggle()\">\n            <div class=\"text-normal barlow-semibold color-w pointer title mt-3 pl-3  main-title\">\n              <img src=\"assets/sidebar-icons/categories.svg\" class=\"img-fluid\" />&nbsp; &nbsp;\n              {{ \"CATEGORIES\" | translate }}\n            </div>\n          </div>\n          <div class=\"pointer\" [routerLink]=\"['/products']\" [routerLinkActive]=\"['active']\" (click)=\"mobMenuToggle()\">\n            <div class=\"text-normal barlow-semibold color-w pointer title mt-3 pl-3  main-title\">\n              <img src=\"assets/sidebar-icons/products.svg \" class=\"img-fluid\" />&nbsp;\n              &nbsp; {{ \"PRODUCTS\" | translate }}\n            </div>\n          </div>\n          <div class=\"pointer\" [routerLink]=\"['/search']\" [routerLinkActive]=\"['active']\">\n            <div class=\"text-normal barlow-semibold color-w pointer title mt-3 pl-3  main-title\">\n              <img src=\"assets/sidebar-icons/search.svg\" class=\"img-fluid category-icons\" />&nbsp; &nbsp;\n              {{ \"SEARCH_PRODUCT\" | translate }}\n            </div>\n          </div>\n          <div class=\"pointer\" [routerLink]=\"['/cart']\" [routerLinkActive]=\"['active', '/checkout']\"\n            (click)=\"mobMenuToggle()\" *ngIf=\"isLoggedIn\">\n            <div class=\"text-normal barlow-semibold color-w pointer title mt-3 pl-3  main-title\">\n              <img src=\"assets/sidebar-icons/cart.svg\" class=\"img-fluid\" />&nbsp; &nbsp; {{\n              \"MY_CART\" | translate\n              }}\n            </div>\n          </div>\n          <div class=\"pointer\" [routerLink]=\"['/favourites']\" [routerLinkActive]=\"['active']\" (click)=\"mobMenuToggle()\"\n            *ngIf=\"isLoggedIn\">\n            <div class=\"text-normal barlow-semibold color-w pointer title mt-3 pl-3  main-title\">\n              <img src=\"assets/sidebar-icons/fav.svg\" class=\"img-fluid\" />&nbsp; &nbsp; {{\n              \"FAVOURITES\" | translate\n              }}\n            </div>\n          </div>\n          <div class=\"pointer\" [routerLink]=\"['/orders']\" [routerLinkActive]=\"['active']\" (click)=\"mobMenuToggle()\"\n            *ngIf=\"isLoggedIn\">\n            <div class=\"text-normal barlow-semibold color-w pointer title mt-3 pl-3  main-title\">\n              <img src=\"assets/sidebar-icons/my-orders.svg\" class=\"img-fluid\" />&nbsp; &nbsp; {{\n              \"MY_ORDERS\" | translate\n              }}\n            </div>\n          </div>\n\n          <div class=\"pointer\" [routerLink]=\"['/profile']\" [routerLinkActive]=\"['active']\" *ngIf=\"isLoggedIn\">\n            <div class=\"text-normal barlow-semibold color-w pointer title mt-3 pl-3  main-title\">\n              <img src=\"assets/sidebar-icons/settings.svg\" class=\"img-fluid category-icons\" />&nbsp; &nbsp;\n              {{ \"PROFILE\" | translate }}\n            </div>\n          </div>\n          <div class=\"pointer\" [routerLink]=\"['/login']\" [routerLinkActive]=\"['active']\" *ngIf=\"isLoggedIn\">\n            <div class=\"text-normal barlow-semibold color-w pointer title logout-btn mt-3 mb-3 pl-3  main-title\">\n              <a (click)=\"clearSessionAndLogout()\"><img src=\"assets/sidebar/logout.svg\" class=\"img-fluid\" />&nbsp;\n                &nbsp; {{ \"LOG_OUT\" | translate }}\n              </a>\n            </div>\n          </div>\n          <div class=\"pointer\" *ngIf=\"!isLoggedIn\">\n            <div class=\"text-normal barlow-semibold color-w pointer title logout-btn mt-3 pl-3 mb-3  main-title\">\n              <a (click)=\"createSessionAndLogIn()\"><img src=\"assets/sidebar/login.svg\"\n                  class=\"img-fluid category-icons\" />&nbsp; &nbsp; {{ \"SIGN_IN\" | translate }}\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TermsandConditionsModel } from \"../../models/about-us.model\";\nimport { HelperService } from \"../../../services/helper.service\";\nimport { MyStoreService } from \"../my-store/my-store.service\";\n\n@Component({\n  selector: 'app-terms-conditions',\n  templateUrl: './terms-conditions.component.html',\n  styleUrls: ['./terms-conditions.component.scss']\n})\nexport class TermsConditionsComponent implements OnInit {\n  public pageData = {\n    title: '',\n    description: ''\n  };      // contains information about the store\n\n  constructor(private helperService: HelperService, private myStoreService: MyStoreService) {\n    this.getTermsAndConditionInfo();\n  }\n\n  // get's terms and condition information\n  public getTermsAndConditionInfo(): void {\n    this.myStoreService.getTermsAndConditionInformation().subscribe((res: any) => {\n      this.pageData = res.response_data;\n    })\n  }\n\n  ngOnInit(): void {\n    this.helperService.scrollTop();\n  }\n\n}\n","<div class=\"container-fluid color-lightblue footer-link\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n    <div class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\">\n      <br/><br/>\n      <br/><br/>\n      <div class=\"bottom-border\">\n        <h5>{{ pageData.title }}</h5>\n      </div>\n      <p [innerHTML]=\"pageData.description\"></p>\n      <app-footer></app-footer>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-thankyou-page',\n  templateUrl: './thankyou-page.component.html',\n  styleUrls: ['./thankyou-page.component.scss']\n})\nexport class ThankyouPageComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      window.location.href = 'home';\n    }, 3000);\n  }\n\n}\n","<div class=\"thank-you\">\n  <div class=\"container\">\n    <div class=\"row mt-5\">\n      <div class=\"col-md-12 text-center mt-5\">\n        <img src=\"assets/images/thankyou.png\" class=\"img-fluid\" />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { CrudService } from \"../../../services/crud.service\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DealsService {\n  constructor(private crud: CrudService) {\n  }\n\n  // get's deals list\n  public getDealList(): Observable<any> {\n    return this.crud.getData(`/deals/top`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DealsModel, DealTypeEnum } from \"../../models/category.model\";\nimport { Router } from \"@angular/router\";\nimport { environment } from \"../../../../environments/environment\";\nimport { DealsService } from \"./deals.service\";\n\n@Component({\n  selector: 'app-top-deals',\n  templateUrl: './top-deals.component.html',\n  styleUrls: ['./top-deals.component.scss']\n})\nexport class TopDealsComponent implements OnInit {\n  public dealList: Array<DealsModel> = [];      // contains list of  deals\n  public dealImageUrl: string = `${environment.IMAGEKIT_URL}tr:dpr-auto,tr:w-181`;      // contains optimized product image url\n  constructor(private dealsService: DealsService, private router: Router) {\n    this.getTopDeals();\n  }\n\n  ngOnInit(): void {\n  }\n\n  // fetches list of all top deals\n  public getTopDeals(): void {\n    this.dealsService.getDealList().subscribe((res: any) => {\n      this.dealList = res.response_data;\n    });\n  }\n\n  // navigate to product of category based on deal type\n  public checkDealTypeAndNavigate(deal: DealsModel): void {\n    if (deal.dealType === DealTypeEnum.PRODUCT) {\n      this.router.navigate(['product-details/', deal.productId]);\n    } else {\n      this.router.navigate(['products/by/category/', deal.categoryId]);\n    }\n  }\n\n}\n","<div class=\"container-fluid color-lightblue top-deals-page\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n\n    <div class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\">\n      <br/>\n      <br/><br/>\n      <br/>\n\n      <!-- showing results -->\n\n      <div class=\"bottom-border\">\n        <h5 class=\"barlow-bold text-normal color-b mt-4 pb-2\" translate>\n          TOP_DEALS\n        </h5>\n      </div>\n\n      <div class=\"row mt-3\">\n        <div class=\"col-md-2 mb-3\" *ngFor=\"let deal of dealList\">\n          <div class=\"tops-block pointer\" (click)=\"checkDealTypeAndNavigate(deal)\">\n            <ng-container *ngIf=\"deal.filePath\">\n              <img [src]=\"dealImageUrl+deal.filePath\" class=\"top-img\"/>\n            </ng-container>\n            <ng-container *ngIf=\"!deal.filePath\">\n              <img [src]=\"deal.imageUrl\" class=\"top-img\"/>\n            </ng-container>\n            <h5 class=\"title barlow-medium pl-2 pr-2 py-2 m-0\">\n              {{ deal.title.length > 22 ? (deal.title | slice:0:18) + '...' : deal.title }}\n            </h5>\n            <h6 class=\"price barlow-medium pl-2 pr-2 pb-2\">{{deal.dealPercent}}% off</h6>\n          </div>\n        </div>\n      </div>\n\n      <br/><br/>\n      <app-footer></app-footer>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HelperService } from 'src/app/services/helper.service';\nimport { walletHistoryModel, walletModel } from '../../models/auth.model';\nimport { WalletPaginationType } from '../../models/order.model';\nimport { ProfileService } from '../profile/profile.service';\nimport { WalletService } from './wallet.service';\n\n@Component({\n  selector: 'app-wallet',\n  templateUrl: './wallet.component.html',\n  styleUrls: ['./wallet.component.scss']\n})\nexport class WalletComponent implements OnInit {\n  public currencyCode: string = null; // contains currency code\n  public limit: number = 5;      // shows 10 records per page\n  public page: number = 0;     // contains current page number\n  public total: number = 0;   // contains total number of records\n  public walletHistoryDetails: Array<walletHistoryModel> = [];      // contains wallet transaction history\n  public walletInfo: walletModel = {\n    walletAmount: null,\n  };      // contains customers wallet information\n  public fetchedRecordsCount: number = 0;      // contains fetched records count\n\n\n  constructor(private profileService: ProfileService, private walletService: WalletService, private helperService: HelperService) {\n    this.getUserProfileInfo();\n    this.getWalletHistory();\n    {\n      this.helperService.currency$.subscribe((currencyCode) => {\n        this.currencyCode = currencyCode;\n      });\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  // contains user's profile information\n  private getUserProfileInfo(): void {\n    this.profileService.getUserProfileInformation().subscribe((res: any) => {\n      this.walletInfo.walletAmount = res.response_data.walletAmount ? res.response_data.walletAmount : 0;\n    });\n  }\n\n  //contains order history information\n  private getWalletHistory(type?: string): void {\n    this.walletService.getWalletHistory(this.limit, this.page).subscribe((res: any) => {\n      this.walletHistoryDetails = res.response_data || [];\n      this.total = res.total;\n      if (!type) {\n        this.fetchedRecordsCount = this.walletHistoryDetails.length;\n      } else {\n        switch (type) {\n          case WalletPaginationType.INC:\n            this.fetchedRecordsCount += this.walletHistoryDetails.length;\n            break;\n        }\n      }\n      console.log(\"RECORDS FETCHED\", this.fetchedRecordsCount);\n    })\n  }\n\n  // Pagination\n  public pageChange(type: string): void {\n    switch (type) {\n      case WalletPaginationType.INC:\n        this.page += 1;\n        this.getWalletHistory(type);\n        break;\n      case WalletPaginationType.DEC:\n        this.page -= 1;\n        this.fetchedRecordsCount -= this.walletHistoryDetails.length;\n        this.getWalletHistory(type);\n        break;\n    }\n  }\n}\n","<div class=\"container-fluid color-lightblue wallet-section\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-lg-3 col-xl-2 side-menu\">\n      <app-side-menu></app-side-menu>\n    </div>\n    <div class=\"col-md-10 col-lg-9 col-xl-10 mt-4 main-bar\">\n      <br /><br />\n      <br /><br />\n\n      <div class=\"row\">\n        <div class=\"col-md-8 text-center\">\n          <div class=\"wallet-block\">\n            <img src=\"assets/images/wallet.png\" class=\"wallet-img\" />\n            <br />\n            <div class=\"wallet-balance\">\n              <div class=\"row\">\n                <div class=\"col-md-8 offset-md-2\">\n                  <div class=\"wallet-bal\">\n                    <div class=\"row\">\n                      <div class=\"col-md-3\">\n                        <img src=\"assets/images/wallet-bal.png\" class=\"wallet-bal-img\" />\n                      </div>\n                      <div class=\"col-md-3 text-left\">\n                        <h6 class=\"text-medium barlow-medium color-b-c\">\n                          {{\"WALLET\"|translate}} <br />{{\"BALANCE\"|translate}}:\n                        </h6>\n                      </div>\n                      <div class=\"col-md-3\">\n                        <h6 class=\"barlow-bold h1md color-green\">\n                          {{ walletInfo.walletAmount | currency: currencyCode:\"symbol\":\"1.2-2\"}}</h6>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-4\">\n          <div class=\"transaction-block\">\n            <h6 class=\"barlow-bold text-normal p-3\">{{\"RECENT_TRANSACTIONS\"|translate}}</h6>\n            <hr class=\"m-0\" />\n            <div>\n              <div class=\"order-details p-3\" *ngFor=\"let data of walletHistoryDetails;let i = index\">\n                <h6 class=\"barlow-semibold text-14\">\n                  {{\"ORDER_ID\"|translate}}:<span class=\"barlow-regular\">{{data.orderID}}</span>\n                </h6>\n                <h6 class=\"barlow-regular text-14\">\n                  {{\"DATE\"|translate}}<span>{{data.updatedAt|date: 'dd/MM/yyyy'}}</span>\n                </h6>\n                <h6 class=\"barlow-regular text-14\">\n                  {{\"TRANSACTION_TYPE\" |translate}}:<span\n                    *ngIf=\"data.transactionType==='ORDER_CANCELLED'\">{{\"ORDER_CANCELLED\"|translate}}</span>\n                  <span *ngIf=\"data.transactionType==='ORDER_PAYMENT'\">{{\"ORDER_PAYMENT\"|translate}}</span>\n                </h6>\n                <h6 class=\"barlow-regular text-14\">\n                  {{\"AMOUNT\"|translate}}:<span\n                    class=\"barlow-semibold color-green\">{{data.amount | currency: currencyCode:\"symbol\":\"1.2-2\"}}</span>\n                </h6>\n                <h6 class=\"barlow-regular text-14\">\n                  {{\"WALLET\"|translate}}:<span *ngIf=\"data.isCredited===true\">\n                    {{\"CREDIT\"|translate}}<i class=\"fa fa-arrow-down color-green\"></i></span>\n                  <span *ngIf=\"data.isCredited===false\">\n                    {{\"DEBIT\"|translate}}<i class=\"fa fa-arrow-up color-red\"></i></span>\n                </h6>\n              </div>\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-between p-2 row ml-0\" *ngIf=\"total > 0\">\n            <button type=\"button\" (click)=\"pageChange('dec')\" [disabled]=\"page === 0\"\n              class=\"btn btn-outline-dark text-small main-title\">\n              {{ \"PREV\" | translate }}\n            </button>\n            <button type=\"button\" [disabled]=\"fetchedRecordsCount === total\" (click)=\"pageChange('inc')\" class=\"btn btn-outline-dark text-small main-title mr-2\">\n              {{ \"NEXT\" | translate }}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <app-footer></app-footer>\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CrudService } from 'src/app/services/crud.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WalletService {\n\n  constructor(private crud: CrudService) { }\n\n  // // getting  wallet history\n  public getWalletHistory(limit, index): Observable<any> {\n    return this.crud.getData(`/wallets/history?limit=${limit}&page=${index}`);\n  }\n}\n\n","import { OfferModel, ProductImageModel } from './category.model';\n\nexport interface AddToCartModel {\n  productId: string;\n  variantsName: string;\n  productName: string;\n  title: string;\n  imageUrl: string;\n  description: string;\n  quantity: number;\n  productTotal: number;\n  unit: string;\n  discountAmount?: number;\n  originalPrice?: number;\n  offerInfo?: OfferModel;\n  amountAfterDiscount?: number;\n  rating?: number;\n  dealAmountOneProd?: number;\n  delaPercent?: number;\n  dealTotalAmount?: number;\n  filePath?: string;\n  isDealAvailable?: boolean;\n  price?: number;\n  productImages?: Array<ProductImageModel>;\n}\n\nexport interface UpdateCartModel {\n  cartId: string;\n  productId: string;\n  quantity: number;\n  unit: string;\n}\n\nexport interface DeleteCartProductModel {\n  cartId: string;\n  productId: string;\n}\n\nexport interface CartModel {\n  products: Array<AddToCartModel>;\n  productIds: Array<string>;\n  _id: string;\n  subTotal: number;\n  tax: number;\n  grandTotal: number;\n  deliveryCharges: number;\n  isOrderLinked: boolean;\n  user: string;\n  createdAt: string;\n  updatedAt: string;\n  couponCode?: string;\n  couponAmount?: CouponModel;\n  deliveryAddress?: string;\n  isFreeDelivery?: boolean;\n  taxInfo?: TaxInfoModel;\n  walletAmount?: number;\n}\n\nexport interface CouponModel {\n  couponCode: string;\n  couponDiscountAmount: number;\n}\n\nexport interface TaxInfoModel {\n  taxName: string;\n  amount: number;\n}\n\nexport interface OutOfStockData {\n  productId: string;\n  productName: string;\n  unit: string;\n  price: number;\n  quantity: number;\n  productTotal: number;\n  imageUrl: string;\n  filePath: string;\n  dealAmount: number;\n  dealPercent: number;\n  dealTotalAmount: number\n  isDealAvailable: boolean\n}\n\nexport enum PaymentMethodEnum {\n  COD = 'COD',\n  STRIPE = 'STRIPE'\n}\n","export interface CategoryModel {\n  status: number;\n  _id: string;\n  title: string;\n  description: string;\n  imageUrl: string;\n  imageId: string;\n  user: string;\n  createdAt: string;\n  updatedAt: string;\n  filePath: string;\n}\n\nexport interface ProductsModel {\n  _id: string;\n  status: string;\n  title: string;\n  description: string;\n  imageUrl: string;\n  imageId: string;\n  type: string;\n  variant: Array<VariantModel>;\n  user: string;\n  createdAt: string;\n  updatedAt: string;\n  category: CategoryModel;\n  isCategoryBasedOffer: any;\n  offerInfo?: OfferModel;\n  averageRating: number;\n  noOfUsersRated: number;\n  totalRating: number;\n  dealPercent?: number;\n  isDealAvailable?: boolean;\n  isAddedToCart?: boolean;\n  cartId?: string;\n  quantityToCart?: number;\n  filePath?: string;\n  discountAmount?: number;\n  isFavourite: boolean;\n  isRated: boolean;\n  categoryId: string;\n  unitInCart?: string;\n  productImages: Array<ProductImageModel>;\n}\n\nexport interface ProductImageModel {\n  filePath: string;\n  imageUrl: string;\n  imageId: string;\n}\n\nexport interface VariantModel {\n  _id: string;\n  unit: string;\n  price: string;\n  quantity?: number;\n  enable: boolean;\n  productStock: number;\n  discountAmount?: number;\n}\n\nexport interface DealsModel {\n  status: number;\n  _id: string;\n  title: string;\n  description: string;\n  dealPercent: number,\n  dealType: string,\n  productId: string | ProductsModel;\n  categoryId: string | CategoryModel;\n  imageUrl: string;\n  imageId: string;\n  createdAt: Date;\n  updatedAt: Date;\n  filePath: string;\n}\n\nexport interface OfferModel {\n  products: Array<string>;\n  status: number;\n  _id: string;\n  description: string;\n  couponCode: string;\n  offerPercentage: number;\n  startDate: number;\n  expiryDate: number\n  couponType: string;\n  category: string;\n  offerAppliedTo: string;\n  user: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface FavouritesModel {\n  isDealAvailable: boolean;\n  averageRating: number;\n  _id: string;\n  title: string;\n  description: string;\n  imageUrl: string;\n  variant: Array<VariantModel>\n  filePath: string;\n  sku: string;\n  dealPercent: number;\n  isAddedToCart\n}\n\nexport interface SubCategoryModel {\n  _id: string;\n  title: string;\n}\n\nexport interface BannerModel {\n  _id: string;\n  title: string;\n  bannerType: string;\n  categoryId: string;\n  productId: string;\n  imageURL: string;\n  description: string;\n  filePath: string;\n}\n\nexport interface LanguagesModel {\n  languageCode: string;\n  languageName: string;\n  status: number;\n  isDefault: number;\n  webJson: string;\n  deliveyAppJson: string;\n  mobAppJson: string;\n  cmsJson: string;\n  backendJson: string;\n  _id?: string;\n}\n\nexport enum DealTypeEnum {\n  CATEGORY = 'CATEGORY',\n  PRODUCT = 'PRODUCT'\n}\n","import { AddToCartModel, CartModel } from './cart.model';\n\nexport interface AddressModel {\n  _id?: string;\n  address: string;\n  flatNo: string;\n  apartmentName: string;\n  landmark: string;\n  postalCode: string;\n  location: {\n    latitude: number;\n    longitude: number;\n  };\n  mobileNumber: string;\n  addressType: string;\n  user: string;\n}\n\nexport interface DeliveryTaxModel {\n  latitude: number;\n  longitude: number;\n  cartId: string;\n}\n\nexport interface WorkingHoursModel {\n  timings: Array<TimeScheduleModel>;\n  _id: string;\n  isClosed: boolean;\n  date: string;\n}\n\nexport interface TimeScheduleModel {\n  _id: string;\n  slot: string;\n  isClosed: boolean\n}\n\nexport interface PlaceOrderModel {\n  paymentType: string;\n  paymentId: string;\n  deliverySlotId?: string;\n  orderFrom?: string;\n}\n\nexport interface CardModel {\n  cardHolderName: string;\n  cardNumber: string\n  expiryMonth: number;\n  expiryYear: number;\n  cvv: string;\n}\n\nexport interface OrderListModel {\n  _id: string;\n  deliveryType: string;\n  paymentType: string;\n  isDeliveryBoyRated?: boolean;\n  paymentStatus: string;\n  address: AddressModel;\n  deliveryDate: string;\n  deliveryTime: string;\n  cart: CartModel;\n  deliveryCharges: number;\n  subTotal: number;\n  tax: number;\n  appTimestamp: number;\n  grandTotal: number;\n  user: string;\n  orderStatus: string;\n  orderID: number;\n  transactionDetails: Object;\n  createdAt: Date;\n  updatedAt: Date;\n  amountRefund: number;\n}\n\nexport interface OrderDetailsModel {\n  orderInfo: OrderListModel;\n  cart: AddToCartModel;\n}\n\nexport interface RateModel {\n  productId: string;\n  description: string;\n  rate: number;\n}\n\nexport interface RateModelDeliveryBoy {\n  rate: number,\n  description: string,\n  orderId: string,\n  deliveryBoyId: string\n}\n\nexport interface OrderModel {\n  product: CartProductModel;\n  _id: string;\n  totalProduct: number;\n  grandTotal: number;\n  orderStatus: string;\n  orderID: string;\n  createdAt: string;\n  usedWalletAmount: number;\n}\n\nexport interface CartProductModel {\n  title: string;\n  imageUrl: string;\n}\n\nexport enum WalletPaginationType {\n  INC = 'inc',\n  DEC = 'dec'\n}\nexport interface Deliveryboy {\n  assignedToName: string,\n  assignedToId: string\n}","import {Action} from '@ngrx/store';\nimport {AddToCartModel, CartModel, DeleteCartProductModel, UpdateCartModel} from '../models/cart.model';\n\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const UPDATE_CART_DATA = 'UPDATE_CART_DATA';\nexport const DELETE_CART_DATA = 'DELETE_CART_DATA';\nexport const GET_CART_DATA = 'GET_CART_DATA';\nexport const SET_CART_DATA = 'SET_CART_DATA';\nexport const APPLY_COUPON = 'APPLY_COUPON';\nexport const REMOVE_COUPON = 'REMOVE_COUPON';\n\n// sends request to add item to the cart\nexport class AddToCartAction implements Action {\n  readonly type = ADD_TO_CART;\n\n  constructor(public payload: AddToCartModel) {\n  }\n}\n\n// sends requets to update cart item\nexport class UpdateCartAction implements Action {\n  readonly type = UPDATE_CART_DATA;\n\n  constructor(public payload: UpdateCartModel) {\n  }\n}\n\n// sends request to delete cart item\nexport class DeleteCartAction implements Action {\n  readonly type = DELETE_CART_DATA;\n\n  constructor(public payload: DeleteCartProductModel) {\n  }\n}\n\n// sends request to get cart information\nexport class GetCartInfoAction implements Action {\n  readonly type = GET_CART_DATA;\n\n  constructor() {\n  }\n}\n\n// sends request to set user's cart information\nexport class SetCartInfoAction implements Action {\n  readonly type = SET_CART_DATA;\n\n  constructor(public payload: CartModel) {\n  }\n}\n\n// sends request to apply coupon on cart items\nexport class ApplyCouponAction implements Action {\n  readonly type = APPLY_COUPON;\n\n  constructor(public payload: { couponCode: string, id: string }) {\n  }\n}\n\n// sends request to remove coupon applied on cart items\nexport class RemoveCouponAction implements Action {\n  readonly type = REMOVE_COUPON;\n\n  constructor(public payload: string) {\n  }\n}\n\nexport type CartActions =\n  AddToCartAction\n  | UpdateCartAction\n  | DeleteCartAction\n  | GetCartInfoAction\n  | SetCartInfoAction\n  | ApplyCouponAction\n  | RemoveCouponAction;\n","import { CartModel } from '../models/cart.model';\nimport * as CartActions from './cart.action';\n\nexport interface CartState {\n  cartInfo: CartModel;\n}\n\nfunction getDefaultCartValues(): CartModel {\n  return {\n    products: [],\n    productIds: [],\n    subTotal: 0,\n    tax: 0,\n    deliveryCharges: 0,\n    grandTotal: 0,\n    createdAt: null,\n    updatedAt: null,\n    user: null,\n    _id: null,\n    isOrderLinked: false\n  };\n}\n\nexport const initialState: CartState = {\n  cartInfo: getDefaultCartValues()\n};\n\nexport function cartReducer(state = initialState, action: CartActions.CartActions) {\n  switch (action.type) {\n    case CartActions.SET_CART_DATA:\n      return {\n        ...state.cartInfo,\n        ...action.payload\n      };\n    default: {\n      return state.cartInfo;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Observable, BehaviorSubject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  public activatedEmitter = new BehaviorSubject<boolean>(false);     // contains user's activation status\n  public obs$ = this.activatedEmitter.asObservable();     // subscribes to the changes in user'sauth status\n\n  constructor(private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (localStorage.getItem('token')) {\n      return true;\n    }\n    this.router.navigate(['home']);\n    return false;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n  private authToken: string = null;     // contains user's authentication token\n  constructor(private http: HttpClient) {\n  }\n\n  // get's user authentication token. used in request interceptor file\n  public get getAuthToken(): string {\n    return this.authToken;\n  }\n\n  // used to set user's authentication token\n  public set setAuthToken(authToken: string) {\n    this.authToken = authToken;\n  }\n\n  // sends request to fetch data from server\n  public getData(url: string): Observable<any> {\n    return this.http.get(environment.API_ENDPOINT + url);\n  }\n\n  // sends request to save/manipulate data\n  public saveData(url: string, body: any): Observable<any> {\n    return this.http.post(environment.API_ENDPOINT + url, body);\n  }\n\n  // sends request to manipulate data\n  public updateData(url: string, body: any): Observable<any> {\n    return this.http.put(environment.API_ENDPOINT + url, body);\n  }\n\n  // sends request to manipulate data\n  public patchData(url: string, body: any): Observable<any> {\n    return this.http.patch(environment.API_ENDPOINT + url, body);\n  }\n\n  // sends request to save/manipulate data\n  public deleteData(url: string): Observable<any> {\n    return this.http.delete(environment.API_ENDPOINT + url);\n  } \n}\n","import { TranslateLoader } from \"@ngx-translate/core\";\nimport { CrudService } from \"./crud.service\";\nimport { Observable } from \"rxjs\";\nimport { HelperService } from \"./helper.service\";\nimport { map } from \"rxjs/operators\";\n\nexport class CustomLoader implements TranslateLoader {\n  constructor(private crud: CrudService, private helperService: HelperService) {\n  }\n\n  // get's translated JSON from the server based on selected language\n  public getTranslation(lang: string): Observable<any> {\n    const language$ = this.crud.getData(`/languages/web?code=${lang}`).pipe(map((res: any) => res.response_data[lang]));\n    this.helperService.setLanguageJSON(language$);\n    return language$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CrudService } from './crud.service';\nimport { BehaviorSubject, EMPTY, Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { CartState } from '../pages/store/cart.reducer';\nimport { Http } from '@angular/http';\nimport { environment } from '../../environments/environment';\nimport { catchError, map } from 'rxjs/operators';\nimport { UserInfoModel } from '../pages/models/auth.model';\nimport { ToastrService } from \"ngx-toastr\";\nimport { CheckoutService } from \"../pages/home/checkout/checkout.service\";\nimport { SocketService } from \"./socket.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n  private googleApiCoOridnateUrl: string = 'https://maps.googleapis.com/maps/api/geocode/json?latlng=';      // url used to get user's address based on co-ordinates\n  private userId: string = null;      // contains id of the logged in user\n\n\n  private userInfoSubject = new BehaviorSubject<UserInfoModel>(null);        // contains logged in user's information\n  public user$ = this.userInfoSubject.asObservable();\n\n  private currencySubject = new BehaviorSubject<string>(\"USD\");     // contains the currency code set by admin in cms\n  public currency$ = this.currencySubject.asObservable();     // subscribes to the latest currency value\n\n  private logoSubject = new BehaviorSubject<string>(null);     // contains the web app logo set by admin in cms\n  public logo$ = this.logoSubject.asObservable();     // subscribes to the latest logo url\n\n  private profilePicSubject = new BehaviorSubject<string>(null);     // contains the web app logo set by admin in cms\n  public profilePic$ = this.profilePicSubject.asObservable();     // subscribes to the latest logo url\n\n  public languageDataSubject = new BehaviorSubject<any>(null);       // contains language JSON of the selected languages\n  public language$ = this.languageDataSubject.asObservable();     // subscribes to the latest language JSON\n\n  private languageJSON: any;      // contains translated json of selected language\n\n  private businessInfoSubject$ = new BehaviorSubject<any>(null);       // contains business info data\n  public businessInfo$ = this.businessInfoSubject$.asObservable();\n\n  private currencyCode: string = null;      // contains currency code\n\n  constructor(private crud: CrudService, private store: Store<CartState>, private http: Http, private toastr: ToastrService, private checkoutService: CheckoutService, private socketService: SocketService) {\n    this.userId = localStorage.getItem('id');\n    this.language$.subscribe(json => {\n      if (json) {\n        this.languageJSON = json;\n      }\n    });\n    this.currency$.subscribe(currency => {\n      this.currencyCode = currency;\n    })\n  }\n\n\n  // set's language JSON of selected language\n  public setLanguageJSON(languageObs): void {\n    languageObs.subscribe(json => {\n      this.languageDataSubject.next(json);\n    });\n  }\n\n\n  // set's currency code\n  public setCurrencyCode(currencyCode: string): void {\n    this.currencySubject.next(currencyCode);\n  }\n\n\n  // get's currency codes\n  public getCurrencyCode(): void {\n    this.crud.getData('/settings/details').subscribe((res: any) => {\n      this.setCurrencyCode(res.response_data.currencyCode);\n    });\n  }\n\n  // get's business info\n  public getBusinessInfo(): void {\n    this.crud.getData('/business/detail').subscribe((res: any) => {\n      this.businessInfoSubject$.next(Array.isArray(res.response_data) ? res.response_data[0] : res.response_data);\n    }, error => {\n      this.logoSubject.next('/assets/icons/logo.png');\n    });\n  }\n\n  // sends request to get's users profile information\n  public getUserProfileInformation(): void {\n    const user$ = this.crud.getData('/users/me');\n    user$.subscribe((res: any) => {\n      localStorage.setItem('id', res.response_data._id);\n      this.socketService.establishSocketConnection();\n      this.userInfoSubject.next(res.response_data);\n      if (res.response_data.walletAmount !== null && res.response_data.walletAmount !== undefined) {\n        this.checkoutService.setWalletBalance(res.response_data.walletAmount);\n      }\n    });\n  }\n\n\n  // get's location information through latitude and longitude\n  public getLocationInfoByCoOrdinates(latitude: number, longitude: number): Observable<any> {\n    return this.http.get(`${this.googleApiCoOridnateUrl}${latitude},${longitude}&key=${environment.GOOGLE_MAP_API_KEY}`).pipe(map(res => res.json()), catchError(error => EMPTY));\n  }\n\n\n  // takes browser scroll bar to top\n  public scrollTop(): void {\n    window.scrollTo(0, 0);\n  }\n\n  // shows success toast\n  public successToast(message: string, isApiRes?: boolean): void {\n    this.toastr.success(isApiRes ? message : this.languageJSON[message], '', { timeOut: 4000 });\n  }\n\n  // shows error toast\n  public errorToast(message: string, isApiRes?: boolean): void {\n    this.toastr.error(isApiRes ? message : this.languageJSON[message], '', { timeOut: 4000 });\n  }\n\n  // shows info toast\n  public infoToast(message: string, isApiRes?: boolean, extra?: number): void {\n    this.toastr.info(isApiRes ? message : this.languageJSON[message] + ` ${this.currencyCode} ` + +(extra ? extra : ''), '', { timeOut: 4000 });\n  }\n\n  // getting  country code data from json\n  public getCountryCodeData(): Observable<any> {\n    return this.http.get(\"assets/country-code.json\");\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { CrudService } from './crud.service';\nimport { catchError, map } from 'rxjs/operators';\nimport { HelperService } from \"./helper.service\";\n\n@Injectable()\nexport class RequestInterceptorService implements HttpInterceptor {\n\n  constructor(private readonly crudService: CrudService, private helperService: HelperService) {\n  }\n\n  public intercept(request: HttpRequest<any>, handler: HttpHandler): Observable<HttpEvent<any>> {\n    let headers = {\n      'Content-Type': 'application/json',\n      'language': localStorage.getItem('language') || 'en',\n      'req_from': 'webJson'\n    }\n    if (this.crudService.getAuthToken) {\n      headers['Authorization'] = `Bearer ${this.crudService.getAuthToken}`;\n    }\n    const modifiedReq = request.clone({\n      setHeaders: headers\n    });\n    return handler.handle(modifiedReq).pipe(\n      map(event => {\n        if (event instanceof HttpResponse) {\n          if (event.body.response_code === 400 || event.body.response_code === 500 || event.body.response_code === 401) {\n            if (!event.url.includes('favourites/check') && !event.url.includes('favourites/list') && !event.url.includes('orders/create')) {\n              return this.helperService.errorToast(event.body.response_data, true);\n            } else if (event.url.includes('orders/create')) {\n              return event;\n            }\n          } else {\n            return event;\n          }\n        }\n      }),\n      catchError(error => {\n        if (error instanceof HttpErrorResponse) {\n          switch (error.status) {\n            case 404:\n              error.error.errors.forEach(message => {\n                this.helperService.errorToast(message, true);\n              });\n              return throwError(error);\n            case 400:\n              if (error.error.message) {\n                this.helperService.errorToast(error.error.message, true);\n              } else if (error.error.errors && error.error.errors.length > 0) {\n                error.error.errors.forEach(message => {\n                  this.helperService.errorToast(message, true);\n                });\n              }\n              return throwError(error);\n          }\n        }\n        return of(error);\n      }));\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport Socket = SocketIOClient.Socket;\nimport { MessageModel, NewMessageModel } from \"../pages/models/chat.model\";\nimport * as io from \"socket.io-client\";\nimport { environment } from \"../../environments/environment\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n  public socket: Socket;        // contains id of logged in user\n  public userId: string = null;      // contains id if logged in user\n\n  constructor() {\n    this.userId = localStorage.getItem('id');\n  }\n\n  private messageSubject = new BehaviorSubject<MessageModel>(null);      // contains user's new incoming messages\n  public message$ = this.messageSubject.asObservable();\n\n  // connects to socket\n  public establishSocketConnection(): void {\n    this.socket = io.connect(environment.API_ENDPOINT);\n    this.socket.on('connect', () => {\n      console.log('SOCKET CONNECTED');\n      this.listenToIncomingMessages();\n    });\n    this.socket.on('disconnect', () => {\n      console.log('SOCKET DISCONNECTED');\n    });\n  }\n\n  // listens to incoming messages\n  public listenToIncomingMessages(): void {\n    this.userId = localStorage.getItem('id');\n    this.socket.on(`message-user-${this.userId}`, (data) => {\n      this.messageSubject.next(data);\n    })\n  }\n\n  // send's message to the store\n  public sendMessageToTheStore(messageData: NewMessageModel): void {\n    this.socket.emit('message-user-to-store', messageData);\n  }\n}\n","export const environment = {\n   production: false,\n   API_ENDPOINT: \"https://ocean-a-pi-6oakj.ondigitalocean.app\",\n   GOOGLE_MAP_API_KEY: \"AIzaSyAjz0Hmtl8wG08ljvkUGProhdxGtIyJtlk\",\n   STRIPE_PUBLISHABLE_KEY: \"fc43f3f3\",\n   IMAGEKIT_URL: \"https://ik.imagekit.io/softylus/ethmar\",\n   PREDEFINED: true\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}